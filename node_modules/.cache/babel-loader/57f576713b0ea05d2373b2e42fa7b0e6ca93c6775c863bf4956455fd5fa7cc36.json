{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token, marked */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, getDocs } from 'firebase/firestore';\nimport { createPortal } from 'react-dom';\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus } from 'lucide-react';\n\n// --- Firebase Configuration ---\n// The global variables are provided by the Canvas environment.\n// We fall back to a local config for development purposes if they are not defined.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9c72c1c9e83f21a603590c\"\n};\n\n// Utility function for generating unique IDs\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  // --- Firebase Initialization and Authentication ---\n  useEffect(() => {\n    const isCanvas = typeof __firebase_config !== 'undefined';\n    const firebaseConfig = isCanvas ? JSON.parse(__firebase_config) : localFirebaseConfig;\n    const appId = isCanvas ? __app_id : 'default-app-id';\n    const initialAuthToken = isCanvas ? __initial_auth_token : null;\n    if (!db) {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const firestore = getFirestore(app);\n        const firebaseAuth = getAuth(app);\n        setDb(firestore);\n        setAuth(firebaseAuth);\n        const signIn = async () => {\n          try {\n            if (initialAuthToken) {\n              await signInWithCustomToken(firebaseAuth, initialAuthToken);\n            } else {\n              await signInAnonymously(firebaseAuth);\n            }\n          } catch (error) {\n            console.error('Firebase authentication failed:', error);\n            setError('Authentication failed. Please try again.');\n          }\n        };\n        const unsubscribe = onAuthStateChanged(firebaseAuth, user => {\n          if (user) {\n            setUserId(user.uid);\n            setIsAuthReady(true);\n          } else {\n            setUserId(crypto.randomUUID());\n            setIsAuthReady(true);\n          }\n          setLoading(false);\n        });\n        signIn();\n        return () => unsubscribe();\n      } catch (e) {\n        setError(`Failed to initialize Firebase: ${e.message}`);\n        setLoading(false);\n      }\n    }\n  }, []);\n\n  // --- Real-time Conversations Listener ---\n  useEffect(() => {\n    if (db && userId && isAuthReady) {\n      const conversationsPath = `artifacts/${__app_id}/users/${userId}/conversations`;\n      const conversationsCollection = collection(db, conversationsPath);\n      const unsubscribe = onSnapshot(conversationsCollection, snapshot => {\n        const fetchedConversations = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        fetchedConversations.sort((a, b) => {\n          var _b$lastUpdated, _a$lastUpdated;\n          return (((_b$lastUpdated = b.lastUpdated) === null || _b$lastUpdated === void 0 ? void 0 : _b$lastUpdated.toMillis()) || 0) - (((_a$lastUpdated = a.lastUpdated) === null || _a$lastUpdated === void 0 ? void 0 : _a$lastUpdated.toMillis()) || 0);\n        });\n        setConversations(fetchedConversations);\n        if (!currentConversationId && fetchedConversations.length > 0) {\n          setCurrentConversationId(fetchedConversations[0].id);\n        } else if (fetchedConversations.length === 0) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      }, e => {\n        console.error(\"Error fetching conversations:\", e);\n        setError(\"Could not load conversations. Please try reloading.\");\n      });\n      return () => unsubscribe();\n    }\n  }, [db, userId, isAuthReady, currentConversationId]);\n\n  // --- Real-time Messages Listener ---\n  useEffect(() => {\n    if (db && userId && currentConversationId) {\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\n      const messagesCollection = collection(db, messagesPath);\n      const unsubscribe = onSnapshot(messagesCollection, snapshot => {\n        const fetchedMessages = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        fetchedMessages.sort((a, b) => {\n          var _a$timestamp, _b$timestamp;\n          return ((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.toMillis()) - ((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.toMillis());\n        });\n        setMessages(fetchedMessages);\n      }, e => {\n        console.error(\"Error fetching messages:\", e);\n        setError(\"Could not load messages. Please try reloading.\");\n      });\n      return () => unsubscribe();\n    }\n  }, [db, userId, currentConversationId]);\n\n  // --- Scroll to the bottom on new messages ---\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // --- Gemini API Call Function for Text ---\n  const callGeminiAPI = async (prompt, chatHistory = []) => {\n    try {\n      var _result$candidates$0$, _result$candidates$0$2;\n      const payload = {\n        contents: [...chatHistory, {\n          role: \"user\",\n          parts: [{\n            text: prompt\n          }]\n        }]\n      };\n      const apiKey = ''; // Canvas will provide this\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n      }\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && ((_result$candidates$0$ = result.candidates[0].content) === null || _result$candidates$0$ === void 0 ? void 0 : (_result$candidates$0$2 = _result$candidates$0$.parts) === null || _result$candidates$0$2 === void 0 ? void 0 : _result$candidates$0$2.length) > 0) {\n        return result.candidates[0].content.parts[0].text;\n      } else {\n        throw new Error('Unexpected API response structure or no content.');\n      }\n    } catch (error) {\n      console.error('Error calling Gemini API:', error);\n      return \"Sorry, I'm having trouble connecting right now. Please try again later.\";\n    }\n  };\n\n  // --- Function to Handle AI Response ---\n  const handleAIResponse = async userMessage => {\n    setIsAIGenerating(true);\n    try {\n      const chatHistory = messages.map(msg => ({\n        role: msg.role === 'user' ? 'user' : 'model',\n        parts: [{\n          text: msg.text\n        }]\n      }));\n      const aiResponseText = await callGeminiAPI(userMessage, chatHistory);\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\n      await addDoc(collection(db, messagesPath), {\n        text: aiResponseText,\n        role: 'model',\n        timestamp: serverTimestamp()\n      });\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // --- Function to Handle Chat Summarization ---\n  const summarizeChat = async () => {\n    setIsSummarizing(true);\n    try {\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\n      const messagesCollection = collection(db, messagesPath);\n      const snapshot = await getDocs(messagesCollection);\n      const allMessages = snapshot.docs.map(doc => doc.data());\n      allMessages.sort((a, b) => {\n        var _a$timestamp2, _b$timestamp2;\n        return ((_a$timestamp2 = a.timestamp) === null || _a$timestamp2 === void 0 ? void 0 : _a$timestamp2.toMillis()) - ((_b$timestamp2 = b.timestamp) === null || _b$timestamp2 === void 0 ? void 0 : _b$timestamp2.toMillis());\n      });\n      const conversationText = allMessages.map(msg => `${msg.role}: ${msg.text}`).join('\\n');\n      const prompt = `Please summarize the following conversation:\\n\\n${conversationText}`;\n      const summary = await callGeminiAPI(prompt);\n      await addDoc(collection(db, messagesPath), {\n        text: `**Summary of the conversation:**\\n\\n${summary}`,\n        role: 'model',\n        timestamp: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error summarizing chat:', error);\n      await addDoc(collection(db, `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`), {\n        text: \"I couldn't summarize the chat. Please try again.\",\n        role: 'model',\n        timestamp: serverTimestamp()\n      });\n    } finally {\n      setIsSummarizing(false);\n    }\n  };\n\n  // --- Function to Generate an Image ---\n  const generateImage = async imagePrompt => {\n    setIsGeneratingImage(true);\n    try {\n      const payload = {\n        instances: [{\n          prompt: imagePrompt\n        }],\n        parameters: {\n          \"sampleCount\": 1\n        }\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\n      const tempImageMessageRef = await addDoc(collection(db, messagesPath), {\n        text: `Generating an image for: \"${imagePrompt}\"...`,\n        role: 'model',\n        timestamp: serverTimestamp(),\n        imageUrl: '' // Placeholder\n      });\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status} ${response.statusText}`);\n      }\n      const result = await response.json();\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n        await setDoc(doc(db, messagesPath, tempImageMessageRef.id), {\n          text: `Here is the image you requested for \"${imagePrompt}.\"`,\n          imageUrl: imageUrl,\n          role: 'model',\n          timestamp: serverTimestamp()\n        });\n      } else {\n        throw new Error('Unexpected API response structure or no image data.');\n      }\n    } catch (error) {\n      console.error('Error generating image:', error);\n      await setDoc(doc(db, `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`, tempImageMessageRef.id), {\n        text: \"I couldn't generate the image. Please try again with a different prompt.\",\n        imageUrl: '',\n        role: 'model',\n        timestamp: serverTimestamp()\n      });\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // --- Handle Form Submission ---\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || isAIGenerating || isSummarizing || isGeneratingImage || !currentConversationId) return;\n    const userMessage = newMessage.trim();\n    setNewMessage('');\n    try {\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\n      await addDoc(collection(db, messagesPath), {\n        text: userMessage,\n        role: 'user',\n        timestamp: serverTimestamp()\n      });\n      await setDoc(doc(db, `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}`), {\n        lastUpdated: serverTimestamp()\n      }, {\n        merge: true\n      });\n    } catch (error) {\n      console.error(\"Error adding user message to Firestore:\", error);\n      setError(\"Failed to send message. Please try again.\");\n      return;\n    }\n    if (userMessage.toLowerCase().startsWith('summarize')) {\n      summarizeChat();\n    } else if (userMessage.toLowerCase().startsWith('image of')) {\n      const imagePrompt = userMessage.substring('image of'.length).trim();\n      generateImage(imagePrompt);\n    } else {\n      handleAIResponse(userMessage);\n    }\n  };\n  const startNewChat = async () => {\n    if (!db || !userId) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const newConvId = generateId();\n      const conversationsPath = `artifacts/${__app_id}/users/${userId}/conversations`;\n      const newConversationDocRef = doc(collection(db, conversationsPath), newConvId);\n      await setDoc(newConversationDocRef, {\n        title: \"New Chat\",\n        createdAt: serverTimestamp(),\n        lastUpdated: serverTimestamp()\n      });\n      setCurrentConversationId(newConvId);\n      setMessages([]);\n      setIsSidebarOpen(false);\n    } catch (e) {\n      setError(`Failed to create new conversation: ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUserId(null);\n      setMessages([]);\n      setConversations([]);\n      setCurrentConversationId(null);\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n    }\n  };\n  const getDisplayName = id => {\n    if (!id) return \"Guest\";\n    return id.substring(0, 5);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-4 border-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100 font-sans antialiased\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed inset-y-0 left-0 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} md:relative md:translate-x-0 transition-transform duration-300 ease-in-out bg-gray-800 text-white w-64 flex flex-col z-40`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Chat History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"md:hidden text-white\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 flex flex-col space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewChat,\n          className: \"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 font-bold flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"h-5 w-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), \" New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"w-full p-3 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200 font-bold\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-2\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setCurrentConversationId(conv.id),\n          className: `p-3 rounded-lg cursor-pointer transition-colors duration-200 ${conv.id === currentConversationId ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-700 text-gray-200 hover:bg-gray-600'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold\",\n            children: conv.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs mt-1 truncate text-gray-400\",\n            children: conv.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)]\n        }, conv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-700 text-sm text-gray-400 truncate\",\n        children: [\"User ID: \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-gray-50 rounded-l-2xl shadow-xl overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white border-b border-gray-200 flex items-center justify-between sticky top-0 z-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || \"AI Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"md:hidden text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-6 bg-gray-100 space-y-4\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-red-100 text-red-700 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] p-3 rounded-xl shadow-md whitespace-pre-wrap ${msg.role === 'user' ? 'bg-indigo-500 text-white rounded-br-none' : 'bg-white text-gray-800 rounded-bl-none'}`,\n            children: msg.imageUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.imageUrl,\n                alt: \"Generated\",\n                className: \"mt-2 rounded-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: msg.imageUrl,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-sm text-indigo-200 hover:underline flex items-center mt-1\",\n                children: [\"View Full Image \", /*#__PURE__*/_jsxDEV(ExternalLink, {\n                  size: 14,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: msg.text ? typeof marked !== 'undefined' ? marked.parse(msg.text) : msg.text : ''\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)), (isAIGenerating || isSummarizing || isGeneratingImage) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[70%] p-3 rounded-xl shadow-md bg-white text-gray-800 rounded-bl-none flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2\",\n              children: isSummarizing ? /*#__PURE__*/_jsxDEV(MessageSquareMore, {\n                className: \"animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this) : isGeneratingImage ? /*#__PURE__*/_jsxDEV(Image, {\n                className: \"animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Sparkles, {\n                className: \"animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isSummarizing ? 'Summarizing chat...' : isGeneratingImage ? 'Generating image...' : 'AI is thinking...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing ml-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-white border-t border-gray-200 flex items-center sticky bottom-0 z-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message... (e.g., 'summarize' or 'image of a cat')\",\n          className: \"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-shadow\",\n          disabled: isAIGenerating || isSummarizing || isGeneratingImage || !currentConversationId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\",\n          disabled: isAIGenerating || isSummarizing || isGeneratingImage || !newMessage.trim() || !currentConversationId,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .dot-flashing {\n          position: relative;\n          width: 5px;\n          height: 5px;\n          border-radius: 5px;\n          background-color: #a3a3a3;\n          color: #a3a3a3;\n          animation: dotFlashing 1s infinite linear alternate;\n          animation-delay: 0.5s;\n        }\n\n        .dot-flashing::before, .dot-flashing::after {\n          content: '';\n          display: inline-block;\n          position: absolute;\n          top: 0;\n        }\n\n        .dot-flashing::before {\n          left: -10px;\n          width: 5px;\n          height: 5px;\n          border-radius: 5px;\n          background-color: #a3a3a3;\n          color: #a3a3a3;\n          animation: dotFlashing 1s infinite alternate;\n          animation-delay: 0s;\n        }\n\n        .dot-flashing::after {\n          left: 10px;\n          width: 5px;\n          height: 5px;\n          border-radius: 5px;\n          background-color: #a3a3a3;\n          color: #a3a3a3;\n          animation: dotFlashing 1s infinite alternate;\n          animation-delay: 1s;\n        }\n\n        @keyframes dotFlashing {\n          0% {\n            background-color: #a3a3a3;\n          }\n          50%, 100% {\n            background-color: #e5e5e5;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J3kIs5Dz5JbFsAUIGQkMfBozHRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","getDocs","createPortal","Sparkles","MessageSquareMore","Image","LoaderCircle","X","ExternalLink","Menu","Plus","jsxDEV","_jsxDEV","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","generateId","replace","c","r","Math","random","v","toString","App","_s","_conversations$find","db","setDb","auth","setAuth","userId","setUserId","isAuthReady","setIsAuthReady","loading","setLoading","error","setError","messages","setMessages","conversations","setConversations","currentConversationId","setCurrentConversationId","newMessage","setNewMessage","isAIGenerating","setIsAIGenerating","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","isSidebarOpen","setIsSidebarOpen","messagesEndRef","isCanvas","__firebase_config","firebaseConfig","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","app","firestore","firebaseAuth","signIn","console","unsubscribe","user","uid","crypto","randomUUID","e","message","conversationsPath","conversationsCollection","snapshot","fetchedConversations","docs","map","id","data","sort","a","b","_b$lastUpdated","_a$lastUpdated","lastUpdated","toMillis","length","messagesPath","messagesCollection","fetchedMessages","_a$timestamp","_b$timestamp","timestamp","_messagesEndRef$curre","current","scrollIntoView","behavior","callGeminiAPI","prompt","chatHistory","_result$candidates$0$","_result$candidates$0$2","payload","contents","role","parts","text","apiUrl","response","fetch","method","headers","body","stringify","ok","_errorData$error","errorData","json","Error","statusText","result","candidates","content","handleAIResponse","userMessage","msg","aiResponseText","summarizeChat","allMessages","_a$timestamp2","_b$timestamp2","conversationText","join","summary","generateImage","imagePrompt","instances","parameters","tempImageMessageRef","imageUrl","status","predictions","bytesBase64Encoded","handleSendMessage","preventDefault","trim","merge","toLowerCase","startsWith","substring","startNewChat","newConvId","newConversationDocRef","title","createdAt","handleLogout","getDisplayName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","conv","find","src","alt","href","target","rel","size","dangerouslySetInnerHTML","__html","marked","ref","onSubmit","type","value","onChange","placeholder","disabled","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token, marked */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  getDocs,\r\n} from 'firebase/firestore';\r\nimport { createPortal } from 'react-dom';\r\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus } from 'lucide-react';\r\n\r\n// --- Firebase Configuration ---\r\n// The global variables are provided by the Canvas environment.\r\n// We fall back to a local config for development purposes if they are not defined.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9c72c1c9e83f21a603590c\",\r\n};\r\n\r\n// Utility function for generating unique IDs\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // --- Firebase Initialization and Authentication ---\r\n  useEffect(() => {\r\n    const isCanvas = typeof __firebase_config !== 'undefined';\r\n    const firebaseConfig = isCanvas ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\n    const appId = isCanvas ? __app_id : 'default-app-id';\r\n    const initialAuthToken = isCanvas ? __initial_auth_token : null;\r\n\r\n    if (!db) {\r\n      try {\r\n        const app = initializeApp(firebaseConfig);\r\n        const firestore = getFirestore(app);\r\n        const firebaseAuth = getAuth(app);\r\n        setDb(firestore);\r\n        setAuth(firebaseAuth);\r\n\r\n        const signIn = async () => {\r\n          try {\r\n            if (initialAuthToken) {\r\n              await signInWithCustomToken(firebaseAuth, initialAuthToken);\r\n            } else {\r\n              await signInAnonymously(firebaseAuth);\r\n            }\r\n          } catch (error) {\r\n            console.error('Firebase authentication failed:', error);\r\n            setError('Authentication failed. Please try again.');\r\n          }\r\n        };\r\n\r\n        const unsubscribe = onAuthStateChanged(firebaseAuth, (user) => {\r\n          if (user) {\r\n            setUserId(user.uid);\r\n            setIsAuthReady(true);\r\n          } else {\r\n            setUserId(crypto.randomUUID());\r\n            setIsAuthReady(true);\r\n          }\r\n          setLoading(false);\r\n        });\r\n\r\n        signIn();\r\n        return () => unsubscribe();\r\n      } catch (e) {\r\n        setError(`Failed to initialize Firebase: ${e.message}`);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // --- Real-time Conversations Listener ---\r\n  useEffect(() => {\r\n    if (db && userId && isAuthReady) {\r\n      const conversationsPath = `artifacts/${__app_id}/users/${userId}/conversations`;\r\n      const conversationsCollection = collection(db, conversationsPath);\r\n\r\n      const unsubscribe = onSnapshot(conversationsCollection, (snapshot) => {\r\n        const fetchedConversations = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        fetchedConversations.sort((a, b) => (b.lastUpdated?.toMillis() || 0) - (a.lastUpdated?.toMillis() || 0));\r\n        setConversations(fetchedConversations);\r\n\r\n        if (!currentConversationId && fetchedConversations.length > 0) {\r\n          setCurrentConversationId(fetchedConversations[0].id);\r\n        } else if (fetchedConversations.length === 0) {\r\n          setCurrentConversationId(null);\r\n          setMessages([]);\r\n        }\r\n      }, (e) => {\r\n        console.error(\"Error fetching conversations:\", e);\r\n        setError(\"Could not load conversations. Please try reloading.\");\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, [db, userId, isAuthReady, currentConversationId]);\r\n\r\n  // --- Real-time Messages Listener ---\r\n  useEffect(() => {\r\n    if (db && userId && currentConversationId) {\r\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\r\n      const messagesCollection = collection(db, messagesPath);\r\n\r\n      const unsubscribe = onSnapshot(messagesCollection, (snapshot) => {\r\n        const fetchedMessages = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        fetchedMessages.sort((a, b) => a.timestamp?.toMillis() - b.timestamp?.toMillis());\r\n        setMessages(fetchedMessages);\r\n      }, (e) => {\r\n        console.error(\"Error fetching messages:\", e);\r\n        setError(\"Could not load messages. Please try reloading.\");\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, [db, userId, currentConversationId]);\r\n\r\n  // --- Scroll to the bottom on new messages ---\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // --- Gemini API Call Function for Text ---\r\n  const callGeminiAPI = async (prompt, chatHistory = []) => {\r\n    try {\r\n      const payload = { contents: [...chatHistory, { role: \"user\", parts: [{ text: prompt }] }] };\r\n      const apiKey = ''; // Canvas will provide this\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n      }\r\n      const result = await response.json();\r\n\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content?.parts?.length > 0) {\r\n        return result.candidates[0].content.parts[0].text;\r\n      } else {\r\n        throw new Error('Unexpected API response structure or no content.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error calling Gemini API:', error);\r\n      return \"Sorry, I'm having trouble connecting right now. Please try again later.\";\r\n    }\r\n  };\r\n\r\n  // --- Function to Handle AI Response ---\r\n  const handleAIResponse = async (userMessage) => {\r\n    setIsAIGenerating(true);\r\n    try {\r\n      const chatHistory = messages.map(msg => ({\r\n        role: msg.role === 'user' ? 'user' : 'model',\r\n        parts: [{ text: msg.text }]\r\n      }));\r\n      const aiResponseText = await callGeminiAPI(userMessage, chatHistory);\r\n\r\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\r\n      await addDoc(collection(db, messagesPath), {\r\n        text: aiResponseText,\r\n        role: 'model',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error getting AI response:\", error);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n  // --- Function to Handle Chat Summarization ---\r\n  const summarizeChat = async () => {\r\n    setIsSummarizing(true);\r\n    try {\r\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\r\n      const messagesCollection = collection(db, messagesPath);\r\n      const snapshot = await getDocs(messagesCollection);\r\n      const allMessages = snapshot.docs.map(doc => doc.data());\r\n      allMessages.sort((a, b) => a.timestamp?.toMillis() - b.timestamp?.toMillis());\r\n\r\n      const conversationText = allMessages.map(msg => `${msg.role}: ${msg.text}`).join('\\n');\r\n      const prompt = `Please summarize the following conversation:\\n\\n${conversationText}`;\r\n\r\n      const summary = await callGeminiAPI(prompt);\r\n\r\n      await addDoc(collection(db, messagesPath), {\r\n        text: `**Summary of the conversation:**\\n\\n${summary}`,\r\n        role: 'model',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Error summarizing chat:', error);\r\n      await addDoc(collection(db, `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`), {\r\n        text: \"I couldn't summarize the chat. Please try again.\",\r\n        role: 'model',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n    } finally {\r\n      setIsSummarizing(false);\r\n    }\r\n  };\r\n\r\n  // --- Function to Generate an Image ---\r\n  const generateImage = async (imagePrompt) => {\r\n    setIsGeneratingImage(true);\r\n    try {\r\n      const payload = { instances: [{ prompt: imagePrompt }], parameters: { \"sampleCount\": 1 } };\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n\r\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\r\n      const tempImageMessageRef = await addDoc(collection(db, messagesPath), {\r\n        text: `Generating an image for: \"${imagePrompt}\"...`,\r\n        role: 'model',\r\n        timestamp: serverTimestamp(),\r\n        imageUrl: '', // Placeholder\r\n      });\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`API error: ${response.status} ${response.statusText}`);\r\n      }\r\n      const result = await response.json();\r\n\r\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\r\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\r\n\r\n        await setDoc(doc(db, messagesPath, tempImageMessageRef.id), {\r\n          text: `Here is the image you requested for \"${imagePrompt}.\"`,\r\n          imageUrl: imageUrl,\r\n          role: 'model',\r\n          timestamp: serverTimestamp(),\r\n        });\r\n      } else {\r\n        throw new Error('Unexpected API response structure or no image data.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating image:', error);\r\n      await setDoc(doc(db, `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`, tempImageMessageRef.id), {\r\n        text: \"I couldn't generate the image. Please try again with a different prompt.\",\r\n        imageUrl: '',\r\n        role: 'model',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n    } finally {\r\n      setIsGeneratingImage(false);\r\n    }\r\n  };\r\n\r\n  // --- Handle Form Submission ---\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || isAIGenerating || isSummarizing || isGeneratingImage || !currentConversationId) return;\r\n\r\n    const userMessage = newMessage.trim();\r\n    setNewMessage('');\r\n\r\n    try {\r\n      const messagesPath = `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}/messages`;\r\n      await addDoc(collection(db, messagesPath), {\r\n        text: userMessage,\r\n        role: 'user',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n\r\n      await setDoc(doc(db, `artifacts/${__app_id}/users/${userId}/conversations/${currentConversationId}`), {\r\n        lastUpdated: serverTimestamp(),\r\n      }, { merge: true });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error adding user message to Firestore:\", error);\r\n      setError(\"Failed to send message. Please try again.\");\r\n      return;\r\n    }\r\n\r\n    if (userMessage.toLowerCase().startsWith('summarize')) {\r\n      summarizeChat();\r\n    } else if (userMessage.toLowerCase().startsWith('image of')) {\r\n      const imagePrompt = userMessage.substring('image of'.length).trim();\r\n      generateImage(imagePrompt);\r\n    } else {\r\n      handleAIResponse(userMessage);\r\n    }\r\n  };\r\n\r\n  const startNewChat = async () => {\r\n    if (!db || !userId) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const newConvId = generateId();\r\n      const conversationsPath = `artifacts/${__app_id}/users/${userId}/conversations`;\r\n      const newConversationDocRef = doc(collection(db, conversationsPath), newConvId);\r\n\r\n      await setDoc(newConversationDocRef, {\r\n        title: \"New Chat\",\r\n        createdAt: serverTimestamp(),\r\n        lastUpdated: serverTimestamp(),\r\n      });\r\n      setCurrentConversationId(newConvId);\r\n      setMessages([]);\r\n      setIsSidebarOpen(false);\r\n    } catch (e) {\r\n      setError(`Failed to create new conversation: ${e.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUserId(null);\r\n      setMessages([]);\r\n      setConversations([]);\r\n      setCurrentConversationId(null);\r\n    } catch (error) {\r\n      console.error(\"Logout failed:\", error);\r\n    }\r\n  };\r\n\r\n  const getDisplayName = (id) => {\r\n    if (!id) return \"Guest\";\r\n    return id.substring(0, 5);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-4 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100 font-sans antialiased\">\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed inset-y-0 left-0 transform ${\r\n          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'\r\n        } md:relative md:translate-x-0 transition-transform duration-300 ease-in-out bg-gray-800 text-white w-64 flex flex-col z-40`}\r\n      >\r\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-700\">\r\n          <h2 className=\"text-xl font-bold\">Chat History</h2>\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"md:hidden text-white\">\r\n            <Menu className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-4 flex flex-col space-y-4\">\r\n          <button\r\n            onClick={startNewChat}\r\n            className=\"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 font-bold flex items-center justify-center\"\r\n          >\r\n            <Plus className=\"h-5 w-5 mr-2\" /> New Chat\r\n          </button>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full p-3 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200 font-bold\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\r\n          {conversations.map((conv) => (\r\n            <div\r\n              key={conv.id}\r\n              onClick={() => setCurrentConversationId(conv.id)}\r\n              className={`p-3 rounded-lg cursor-pointer transition-colors duration-200 ${\r\n                conv.id === currentConversationId ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-700 text-gray-200 hover:bg-gray-600'\r\n              }`}\r\n            >\r\n              <h4 className=\"font-semibold\">{conv.title}</h4>\r\n              <p className=\"text-xs mt-1 truncate text-gray-400\">{conv.id}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"p-4 border-t border-gray-700 text-sm text-gray-400 truncate\">\r\n          User ID: {userId}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"flex-1 flex flex-col bg-gray-50 rounded-l-2xl shadow-xl overflow-hidden\">\r\n        {/* Chat Header */}\r\n        <div className=\"p-4 bg-white border-b border-gray-200 flex items-center justify-between sticky top-0 z-10\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">\r\n            {conversations.find(c => c.id === currentConversationId)?.title || \"AI Chatbot\"}\r\n          </h1>\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"md:hidden text-gray-600\">\r\n            <Menu className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Chat messages container */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 bg-gray-100 space-y-4\">\r\n          {error && (\r\n            <div className=\"p-4 bg-red-100 text-red-700 rounded-lg shadow-md\">\r\n              <p className=\"font-semibold\">Error:</p>\r\n              <p>{error}</p>\r\n            </div>\r\n          )}\r\n          {messages.map((msg) => (\r\n            <div key={msg.id} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n              <div\r\n                className={`max-w-[70%] p-3 rounded-xl shadow-md whitespace-pre-wrap ${\r\n                  msg.role === 'user'\r\n                    ? 'bg-indigo-500 text-white rounded-br-none'\r\n                    : 'bg-white text-gray-800 rounded-bl-none'\r\n                }`}\r\n              >\r\n                {msg.imageUrl ? (\r\n                  <div>\r\n                    <p>{msg.text}</p>\r\n                    <img src={msg.imageUrl} alt=\"Generated\" className=\"mt-2 rounded-lg\" />\r\n                    <a href={msg.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-sm text-indigo-200 hover:underline flex items-center mt-1\">\r\n                      View Full Image <ExternalLink size={14} className=\"ml-1\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  <div dangerouslySetInnerHTML={{ __html: msg.text ? (typeof marked !== 'undefined' ? marked.parse(msg.text) : msg.text) : '' }} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Loading indicators */}\r\n          {(isAIGenerating || isSummarizing || isGeneratingImage) && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"max-w-[70%] p-3 rounded-xl shadow-md bg-white text-gray-800 rounded-bl-none flex items-center\">\r\n                <span className=\"mr-2\">\r\n                  {isSummarizing ? (\r\n                    <MessageSquareMore className=\"animate-pulse\" />\r\n                  ) : isGeneratingImage ? (\r\n                    <Image className=\"animate-pulse\" />\r\n                  ) : (\r\n                    <Sparkles className=\"animate-pulse\" />\r\n                  )}\r\n                </span>\r\n                <span>\r\n                  {isSummarizing ? 'Summarizing chat...' : isGeneratingImage ? 'Generating image...' : 'AI is thinking...'}\r\n                </span>\r\n                <div className=\"dot-flashing ml-2\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Message Input */}\r\n        <form onSubmit={handleSendMessage} className=\"p-4 bg-white border-t border-gray-200 flex items-center sticky bottom-0 z-10\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type your message... (e.g., 'summarize' or 'image of a cat')\"\r\n            className=\"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-shadow\"\r\n            disabled={isAIGenerating || isSummarizing || isGeneratingImage || !currentConversationId}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\"\r\n            disabled={isAIGenerating || isSummarizing || isGeneratingImage || !newMessage.trim() || !currentConversationId}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n            </svg>\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Dot Flashing CSS Animation */}\r\n      <style>{`\r\n        .dot-flashing {\r\n          position: relative;\r\n          width: 5px;\r\n          height: 5px;\r\n          border-radius: 5px;\r\n          background-color: #a3a3a3;\r\n          color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite linear alternate;\r\n          animation-delay: 0.5s;\r\n        }\r\n\r\n        .dot-flashing::before, .dot-flashing::after {\r\n          content: '';\r\n          display: inline-block;\r\n          position: absolute;\r\n          top: 0;\r\n        }\r\n\r\n        .dot-flashing::before {\r\n          left: -10px;\r\n          width: 5px;\r\n          height: 5px;\r\n          border-radius: 5px;\r\n          background-color: #a3a3a3;\r\n          color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite alternate;\r\n          animation-delay: 0s;\r\n        }\r\n\r\n        .dot-flashing::after {\r\n          left: 10px;\r\n          width: 5px;\r\n          height: 5px;\r\n          border-radius: 5px;\r\n          background-color: #a3a3a3;\r\n          color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite alternate;\r\n          animation-delay: 1s;\r\n        }\r\n\r\n        @keyframes dotFlashing {\r\n          0% {\r\n            background-color: #a3a3a3;\r\n          }\r\n          50%, 100% {\r\n            background-color: #e5e5e5;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}