{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, limit, getDocs, getDoc, orderBy } from 'firebase/firestore';\n\n// --- Firebase Configuration ---\n// These global variables are provided by the Canvas environment.\n// We fall back to a local config for development purposes if they are not defined.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9f0f9b3e1d1a1c3e3a3c2e\"\n};\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : '';\n\n// --- Helper Functions for API Calls and Audio ---\n// Converts a base64 string to an ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// Converts PCM audio data to a WAV blob\nfunction pcmToWav(pcmData, sampleRate) {\n  const buffer = new ArrayBuffer(44 + pcmData.length * 2);\n  const view = new DataView(buffer);\n\n  // RIFF identifier\n  writeString(view, 0, 'RIFF');\n  // file length\n  view.setUint32(4, 36 + pcmData.length * 2, true);\n  // RIFF type\n  writeString(view, 8, 'WAVE');\n  // format chunk identifier\n  writeString(view, 12, 'fmt ');\n  // format chunk length\n  view.setUint32(16, 16, true);\n  // sample format (raw)\n  view.setUint16(20, 1, true);\n  // channel count\n  view.setUint16(22, 1, true);\n  // sample rate\n  view.setUint32(24, sampleRate, true);\n  // byte rate (sample rate * block align)\n  view.setUint32(28, sampleRate * 2, true);\n  // block align (channel count * bytes per sample)\n  view.setUint16(32, 2, true);\n  // bits per sample\n  view.setUint16(34, 16, true);\n  // data chunk identifier\n  writeString(view, 36, 'data');\n  // data chunk length\n  view.setUint32(40, pcmData.length * 2, true);\n\n  // Write the PCM data\n  let offset = 44;\n  for (let i = 0; i < pcmData.length; i++) {\n    view.setInt16(offset, pcmData[i], true);\n    offset += 2;\n  }\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\nfunction writeString(view, offset, string) {\n  for (let i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\n// --- Main App Component ---\nexport default function App() {\n  _s();\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [audioState, setAudioState] = useState({\n    isPlaying: false,\n    currentMessageId: null\n  });\n  const messagesEndRef = useRef(null);\n\n  // --- Firebase Initialization and Authentication ---\n  useEffect(() => {\n    // Check if Firebase is already initialized\n    const apps = initializeApp(firebaseConfig);\n    const database = getFirestore(apps);\n    const authentication = getAuth(apps);\n    setDb(database);\n    setAuth(authentication);\n\n    // This listener handles both initial sign-in and subsequent changes\n    const unsubscribe = onAuthStateChanged(authentication, async user => {\n      if (user) {\n        setUserId(user.uid);\n      } else {\n        // Sign in anonymously if no user is found\n        await signInAnonymously(authentication);\n      }\n      setIsAuthReady(true);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // --- Data Fetching (Conversations & Messages) ---\n  useEffect(() => {\n    if (!db || !userId || !isAuthReady) {\n      return;\n    }\n    const conversationsPath = `/artifacts/${appId}/users/${userId}/conversations`;\n    const q = query(collection(db, conversationsPath), orderBy('timestamp', 'desc'), limit(50));\n\n    // Listen for real-time changes to the conversations\n    const unsubscribeConversations = onSnapshot(q, snapshot => {\n      const convs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setConversations(convs);\n\n      // If a conversation is not selected, select the latest one\n      if (convs.length > 0 && !selectedConversation) {\n        setSelectedConversation(convs[0].id);\n      }\n    }, err => {\n      console.error(\"Error fetching conversations:\", err);\n      setError(\"Failed to load conversations. Please try refreshing.\");\n    });\n    return () => unsubscribeConversations();\n  }, [db, userId, isAuthReady, selectedConversation]);\n  useEffect(() => {\n    if (!db || !selectedConversation) {\n      setMessages([]);\n      return;\n    }\n    const messagesPath = `/artifacts/${appId}/users/${userId}/conversations/${selectedConversation}/messages`;\n    const q = query(collection(db, messagesPath), orderBy('timestamp', 'asc'));\n\n    // Listen for real-time changes to the messages of the selected conversation\n    const unsubscribeMessages = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(msgs);\n    }, err => {\n      console.error(\"Error fetching messages:\", err);\n      setError(\"Failed to load messages. Please try refreshing.\");\n    });\n    return () => unsubscribeMessages();\n  }, [db, userId, selectedConversation]);\n\n  // --- Scrolling ---\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // --- Gemini API Call Functions ---\n\n  // Adds a new message to the current conversation\n  const addMessageToChat = async (role, text, imageUrl = null) => {\n    if (!db || !selectedConversation) {\n      return;\n    }\n    const messagesPath = `/artifacts/${appId}/users/${userId}/conversations/${selectedConversation}/messages`;\n    try {\n      await addDoc(collection(db, messagesPath), {\n        text,\n        role,\n        imageUrl,\n        timestamp: serverTimestamp()\n      });\n    } catch (err) {\n      console.error(\"Error adding document:\", err);\n      setError(\"Failed to send message. Please try again.\");\n    }\n  };\n\n  // Calls the Gemini LLM to generate a response\n  const getGeminiResponse = async chatHistory => {\n    const chatHistoryWithParts = chatHistory.map(msg => ({\n      role: msg.role === 'user' ? 'user' : 'model',\n      // Adjust role for Gemini\n      parts: [{\n        text: msg.text\n      }]\n    }));\n\n    // Add the most recent user message to the history for the API call\n    chatHistoryWithParts.push({\n      role: \"user\",\n      parts: [{\n        text: newMessage\n      }]\n    });\n    const payload = {\n      contents: chatHistoryWithParts\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n    let responseText = \"Sorry, I couldn't generate a response.\";\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n    } catch (e) {\n      console.error(\"Error calling Gemini API:\", e);\n      setError(\"Error communicating with the AI. Please try again.\");\n    }\n    return responseText;\n  };\n\n  // --- Handlers ---\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedConversation || isAIGenerating) {\n      return;\n    }\n    const userMessage = newMessage;\n    setNewMessage('');\n    setIsAIGenerating(true);\n\n    // Add user message to Firestore\n    await addMessageToChat('user', userMessage);\n\n    // Call Gemini API to get a response\n    const geminiResponse = await getGeminiResponse(messages);\n\n    // Add AI response to Firestore\n    await addMessageToChat('ai', geminiResponse);\n    setIsAIGenerating(false);\n  };\n  const handleNewChat = async () => {\n    if (!db || !userId) return;\n    try {\n      const conversationsPath = `/artifacts/${appId}/users/${userId}/conversations`;\n      const newConversationDoc = await addDoc(collection(db, conversationsPath), {\n        title: 'New Chat',\n        timestamp: serverTimestamp()\n      });\n      setSelectedConversation(newConversationDoc.id);\n      setMessages([]);\n    } catch (e) {\n      console.error(\"Error creating new conversation:\", e);\n      setError(\"Failed to create a new chat.\");\n    }\n  };\n  const handleSummarizeChat = async () => {\n    if (!db || !selectedConversation || isSummarizing) return;\n    setIsSummarizing(true);\n    const chatText = messages.map(msg => `${msg.role}: ${msg.text}`).join('\\n');\n    const prompt = `Summarize the following chat conversation into a concise paragraph:\\n\\n${chatText}`;\n    const payload = {\n      contents: [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }]\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n    let summaryText = \"Sorry, I couldn't generate a summary.\";\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        summaryText = result.candidates[0].content.parts[0].text;\n      }\n    } catch (e) {\n      console.error(\"Error calling Gemini API:\", e);\n      setError(\"Error generating summary.\");\n    }\n    await addMessageToChat('ai', `**Chat Summary:**\\n\\n${summaryText}`);\n    setIsSummarizing(false);\n  };\n  const handleGenerateImage = async () => {\n    if (!db || !selectedConversation || messages.length === 0 || isGeneratingImage) return;\n    const lastUserMessage = messages.slice().reverse().find(m => m.role === 'user');\n    if (!lastUserMessage) {\n      await addMessageToChat('ai', 'Please send a message before generating an image.');\n      return;\n    }\n    setIsGeneratingImage(true);\n    const prompt = lastUserMessage.text;\n    const payload = {\n      instances: {\n        prompt: prompt\n      },\n      parameters: {\n        \"sampleCount\": 1\n      }\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n    let imageUrl = null;\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n        imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n      } else {\n        await addMessageToChat('ai', 'Sorry, I was unable to generate an image from that prompt.');\n      }\n    } catch (e) {\n      console.error(\"Error calling image generation API:\", e);\n      setError(\"Error generating image.\");\n    }\n    if (imageUrl) {\n      await addMessageToChat('ai', 'Here is the image I generated:', imageUrl);\n    }\n    setIsGeneratingImage(false);\n  };\n  const handleTextToSpeech = async message => {\n    if (audioState.isPlaying) {\n      // If audio is already playing, stop it\n      setAudioState({\n        isPlaying: false,\n        currentMessageId: null\n      });\n      return;\n    }\n    setAudioState({\n      isPlaying: true,\n      currentMessageId: message.id\n    });\n    const prompt = `Say in a smooth, warm voice: \"${message.text}\"`;\n    const payload = {\n      contents: [{\n        parts: [{\n          text: prompt\n        }]\n      }],\n      generationConfig: {\n        responseModalities: [\"AUDIO\"],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: {\n              voiceName: \"Rasalgethi\"\n            }\n          }\n        }\n      },\n      model: \"gemini-2.5-flash-preview-tts\"\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\n    try {\n      var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _part$inlineData, _part$inlineData2;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const part = result === null || result === void 0 ? void 0 : (_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : _result$candidates$$c2[0];\n      const audioData = part === null || part === void 0 ? void 0 : (_part$inlineData = part.inlineData) === null || _part$inlineData === void 0 ? void 0 : _part$inlineData.data;\n      const mimeType = part === null || part === void 0 ? void 0 : (_part$inlineData2 = part.inlineData) === null || _part$inlineData2 === void 0 ? void 0 : _part$inlineData2.mimeType;\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\n        const sampleRate = parseInt(mimeType.match(/rate=(\\d+)/)[1], 10);\n        const pcmData = base64ToArrayBuffer(audioData);\n        const pcm16 = new Int16Array(pcmData);\n        const wavBlob = pcmToWav(pcm16, sampleRate);\n        const audioUrl = URL.createObjectURL(wavBlob);\n        const audio = new Audio(audioUrl);\n        audio.onended = () => {\n          setAudioState({\n            isPlaying: false,\n            currentMessageId: null\n          });\n        };\n        audio.play().catch(e => console.error(\"Audio playback failed:\", e));\n      } else {\n        console.error(\"No audio data found in API response.\");\n        setAudioState({\n          isPlaying: false,\n          currentMessageId: null\n        });\n      }\n    } catch (e) {\n      console.error(\"Error calling TTS API:\", e);\n      setAudioState({\n        isPlaying: false,\n        currentMessageId: null\n      });\n      setError(\"Error generating speech.\");\n    }\n  };\n\n  // --- UI Layout ---\n  if (!isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-lg\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-900 text-white font-inter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-1/4 bg-gray-800 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold\",\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"p-2 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\",\n          children: \"+ New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto space-y-2\",\n        children: conversations.map(conv => {\n          var _conv$timestamp;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedConversation(conv.id),\n            className: `p-3 rounded-lg cursor-pointer transition-colors duration-200 ${selectedConversation === conv.id ? 'bg-indigo-600' : 'bg-gray-700 hover:bg-gray-600'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"truncate\",\n              children: conv.title || 'Untitled Chat'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-400\",\n              children: (_conv$timestamp = conv.timestamp) === null || _conv$timestamp === void 0 ? void 0 : _conv$timestamp.toDate().toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)]\n          }, conv.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-gray-800 rounded-l-3xl shadow-xl overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-900 flex justify-between items-center border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"AI Chatbot App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 truncate\",\n            children: [\"User ID: \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSummarizeChat,\n            className: `p-2 px-4 rounded-full font-semibold transition-colors duration-200 ${isSummarizing ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'}`,\n            disabled: isSummarizing || messages.length === 0,\n            children: isSummarizing ? 'Summarizing...' : 'Summarize Chat ✨'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenerateImage,\n            className: `p-2 px-4 rounded-full font-semibold transition-colors duration-200 ${isGeneratingImage ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'}`,\n            disabled: isGeneratingImage || messages.length === 0 || messages.slice().reverse().find(m => m.role === 'user') === undefined,\n            children: isGeneratingImage ? 'Generating...' : 'Generate Image ✨'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-6 space-y-4\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-500 text-white p-3 rounded-lg text-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), messages.map(message => {\n          var _message$timestamp;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-start max-w-lg p-4 rounded-3xl shadow-lg ${message.role === 'user' ? 'bg-indigo-500 text-white rounded-br-none' : 'bg-gray-700 text-gray-100 rounded-bl-none'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"whitespace-pre-wrap\",\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), message.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: message.imageUrl,\n                  alt: \"Generated by AI\",\n                  className: \"mt-3 rounded-lg max-w-full h-auto\",\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = \"https://placehold.co/400x300/e2e8f0/6b7280?text=Image+Load+Error\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"block text-xs mt-2 text-right text-gray-300\",\n                  children: (_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate().toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this), message.role === 'ai' && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleTextToSpeech(message),\n                className: \"ml-2 p-1 text-gray-400 hover:text-white transition-colors duration-200\",\n                title: \"Read aloud\",\n                children: audioState.isPlaying && audioState.currentMessageId === message.id ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-5 w-5\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    fillRule: \"evenodd\",\n                    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\",\n                    clipRule: \"evenodd\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-5 w-5\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    fillRule: \"evenodd\",\n                    d: \"M.879 10.395A10.016 10.016 0 0110 5c3.27 0 6.275 1.157 8.521 3.033l.033.023.013.013a.5.5 0 01.002.738l-1.096 1.096a.5.5 0 01-.707 0L10 6.707 3.328 13.379a.5.5 0 01-.707 0l-1.096-1.096a.5.5 0 01-.002-.738.5.5 0 01.013-.013L2.48 8.033A10.016 10.016 0 0110 5a10.016 10.016 0 019.121 5.395l.024.032.023.032.016.03a10.016 10.016 0 010 4.192l-.016.03a10.016 10.016 0 01-.023.032l-.024.032a10.016 10.016 0 01-9.121 5.395 10.016 10.016 0 01-9.121-5.395l-.024-.032a10.016 10.016 0 01-.023-.032l-.016-.03a10.016 10.016 0 010-4.192l.016-.03.023-.032.024-.032zM10 16a6 6 0 100-12 6 6 0 000 12z\",\n                    clipRule: \"evenodd\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this);\n        }), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-md p-4 rounded-3xl bg-gray-700 text-gray-100 rounded-bl-none\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), isGeneratingImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-md p-4 rounded-3xl bg-gray-700 text-gray-100 rounded-bl-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Generating image...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-gray-900 flex items-center border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 p-3 bg-gray-700 border border-gray-600 text-white rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          disabled: isAIGenerating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-600 disabled:cursor-not-allowed\",\n          disabled: isAIGenerating || !newMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"frr4EqPh95UnOM4hfvELpzcN7ME=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","limit","getDocs","getDoc","orderBy","jsxDEV","_jsxDEV","firebaseConfig","__firebase_config","JSON","parse","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","__app_id","initialAuthToken","__initial_auth_token","base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","pcmToWav","pcmData","sampleRate","ArrayBuffer","view","DataView","writeString","setUint32","setUint16","offset","setInt16","Blob","type","string","setUint8","App","_s","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","userId","setUserId","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","newMessage","setNewMessage","isAIGenerating","setIsAIGenerating","error","setError","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","audioState","setAudioState","isPlaying","currentMessageId","messagesEndRef","apps","database","authentication","unsubscribe","user","uid","conversationsPath","q","unsubscribeConversations","snapshot","convs","docs","map","id","data","err","console","messagesPath","unsubscribeMessages","msgs","current","scrollIntoView","behavior","addMessageToChat","role","text","imageUrl","timestamp","getGeminiResponse","chatHistory","chatHistoryWithParts","msg","parts","push","payload","contents","apiUrl","responseText","response","fetch","method","headers","body","stringify","result","json","candidates","content","e","handleSendMessage","preventDefault","trim","userMessage","geminiResponse","handleNewChat","newConversationDoc","title","handleSummarizeChat","chatText","join","prompt","summaryText","handleGenerateImage","lastUserMessage","slice","reverse","find","m","instances","parameters","predictions","bytesBase64Encoded","handleTextToSpeech","message","generationConfig","responseModalities","speechConfig","voiceConfig","prebuiltVoiceConfig","voiceName","model","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_part$inlineData","_part$inlineData2","part","audioData","inlineData","mimeType","startsWith","parseInt","match","pcm16","Int16Array","wavBlob","audioUrl","URL","createObjectURL","audio","Audio","onended","play","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","conv","_conv$timestamp","toDate","toLocaleString","disabled","undefined","_message$timestamp","src","alt","onError","target","onerror","toLocaleTimeString","xmlns","viewBox","fill","fillRule","d","clipRule","ref","onSubmit","value","onChange","placeholder","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  limit,\r\n  getDocs,\r\n  getDoc,\r\n  orderBy\r\n} from 'firebase/firestore';\r\n\r\n// --- Firebase Configuration ---\r\n// These global variables are provided by the Canvas environment.\r\n// We fall back to a local config for development purposes if they are not defined.\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9f0f9b3e1d1a1c3e3a3c2e\",\r\n};\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : '';\r\n\r\n// --- Helper Functions for API Calls and Audio ---\r\n// Converts a base64 string to an ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// Converts PCM audio data to a WAV blob\r\nfunction pcmToWav(pcmData, sampleRate) {\r\n  const buffer = new ArrayBuffer(44 + pcmData.length * 2);\r\n  const view = new DataView(buffer);\r\n\r\n  // RIFF identifier\r\n  writeString(view, 0, 'RIFF');\r\n  // file length\r\n  view.setUint32(4, 36 + pcmData.length * 2, true);\r\n  // RIFF type\r\n  writeString(view, 8, 'WAVE');\r\n  // format chunk identifier\r\n  writeString(view, 12, 'fmt ');\r\n  // format chunk length\r\n  view.setUint32(16, 16, true);\r\n  // sample format (raw)\r\n  view.setUint16(20, 1, true);\r\n  // channel count\r\n  view.setUint16(22, 1, true);\r\n  // sample rate\r\n  view.setUint32(24, sampleRate, true);\r\n  // byte rate (sample rate * block align)\r\n  view.setUint32(28, sampleRate * 2, true);\r\n  // block align (channel count * bytes per sample)\r\n  view.setUint16(32, 2, true);\r\n  // bits per sample\r\n  view.setUint16(34, 16, true);\r\n  // data chunk identifier\r\n  writeString(view, 36, 'data');\r\n  // data chunk length\r\n  view.setUint32(40, pcmData.length * 2, true);\r\n\r\n  // Write the PCM data\r\n  let offset = 44;\r\n  for (let i = 0; i < pcmData.length; i++) {\r\n    view.setInt16(offset, pcmData[i], true);\r\n    offset += 2;\r\n  }\r\n\r\n  return new Blob([view], { type: 'audio/wav' });\r\n}\r\n\r\nfunction writeString(view, offset, string) {\r\n  for (let i = 0; i < string.length; i++) {\r\n    view.setUint8(offset + i, string.charCodeAt(i));\r\n  }\r\n}\r\n\r\n// --- Main App Component ---\r\nexport default function App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [audioState, setAudioState] = useState({ isPlaying: false, currentMessageId: null });\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // --- Firebase Initialization and Authentication ---\r\n  useEffect(() => {\r\n    // Check if Firebase is already initialized\r\n    const apps = initializeApp(firebaseConfig);\r\n    const database = getFirestore(apps);\r\n    const authentication = getAuth(apps);\r\n    \r\n    setDb(database);\r\n    setAuth(authentication);\r\n\r\n    // This listener handles both initial sign-in and subsequent changes\r\n    const unsubscribe = onAuthStateChanged(authentication, async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n      } else {\r\n        // Sign in anonymously if no user is found\r\n        await signInAnonymously(authentication);\r\n      }\r\n      setIsAuthReady(true);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // --- Data Fetching (Conversations & Messages) ---\r\n  useEffect(() => {\r\n    if (!db || !userId || !isAuthReady) {\r\n      return;\r\n    }\r\n\r\n    const conversationsPath = `/artifacts/${appId}/users/${userId}/conversations`;\r\n    const q = query(collection(db, conversationsPath), orderBy('timestamp', 'desc'), limit(50));\r\n\r\n    // Listen for real-time changes to the conversations\r\n    const unsubscribeConversations = onSnapshot(q, (snapshot) => {\r\n      const convs = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setConversations(convs);\r\n\r\n      // If a conversation is not selected, select the latest one\r\n      if (convs.length > 0 && !selectedConversation) {\r\n        setSelectedConversation(convs[0].id);\r\n      }\r\n    }, (err) => {\r\n      console.error(\"Error fetching conversations:\", err);\r\n      setError(\"Failed to load conversations. Please try refreshing.\");\r\n    });\r\n\r\n    return () => unsubscribeConversations();\r\n  }, [db, userId, isAuthReady, selectedConversation]);\r\n\r\n  useEffect(() => {\r\n    if (!db || !selectedConversation) {\r\n      setMessages([]);\r\n      return;\r\n    }\r\n\r\n    const messagesPath = `/artifacts/${appId}/users/${userId}/conversations/${selectedConversation}/messages`;\r\n    const q = query(collection(db, messagesPath), orderBy('timestamp', 'asc'));\r\n\r\n    // Listen for real-time changes to the messages of the selected conversation\r\n    const unsubscribeMessages = onSnapshot(q, (snapshot) => {\r\n      const msgs = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setMessages(msgs);\r\n    }, (err) => {\r\n      console.error(\"Error fetching messages:\", err);\r\n      setError(\"Failed to load messages. Please try refreshing.\");\r\n    });\r\n\r\n    return () => unsubscribeMessages();\r\n  }, [db, userId, selectedConversation]);\r\n\r\n  // --- Scrolling ---\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  // --- Gemini API Call Functions ---\r\n\r\n  // Adds a new message to the current conversation\r\n  const addMessageToChat = async (role, text, imageUrl = null) => {\r\n    if (!db || !selectedConversation) {\r\n      return;\r\n    }\r\n    const messagesPath = `/artifacts/${appId}/users/${userId}/conversations/${selectedConversation}/messages`;\r\n    try {\r\n      await addDoc(collection(db, messagesPath), {\r\n        text,\r\n        role,\r\n        imageUrl,\r\n        timestamp: serverTimestamp()\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error adding document:\", err);\r\n      setError(\"Failed to send message. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Calls the Gemini LLM to generate a response\r\n  const getGeminiResponse = async (chatHistory) => {\r\n    const chatHistoryWithParts = chatHistory.map(msg => ({\r\n      role: msg.role === 'user' ? 'user' : 'model', // Adjust role for Gemini\r\n      parts: [{ text: msg.text }]\r\n    }));\r\n    \r\n    // Add the most recent user message to the history for the API call\r\n    chatHistoryWithParts.push({ role: \"user\", parts: [{ text: newMessage }] });\r\n\r\n    const payload = { contents: chatHistoryWithParts };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n    \r\n    let responseText = \"Sorry, I couldn't generate a response.\";\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      if (result.candidates && result.candidates.length > 0 &&\r\n          result.candidates[0].content && result.candidates[0].content.parts &&\r\n          result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error calling Gemini API:\", e);\r\n      setError(\"Error communicating with the AI. Please try again.\");\r\n    }\r\n    return responseText;\r\n  };\r\n\r\n  // --- Handlers ---\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !selectedConversation || isAIGenerating) {\r\n      return;\r\n    }\r\n\r\n    const userMessage = newMessage;\r\n    setNewMessage('');\r\n    setIsAIGenerating(true);\r\n\r\n    // Add user message to Firestore\r\n    await addMessageToChat('user', userMessage);\r\n\r\n    // Call Gemini API to get a response\r\n    const geminiResponse = await getGeminiResponse(messages);\r\n    \r\n    // Add AI response to Firestore\r\n    await addMessageToChat('ai', geminiResponse);\r\n    setIsAIGenerating(false);\r\n  };\r\n\r\n  const handleNewChat = async () => {\r\n    if (!db || !userId) return;\r\n\r\n    try {\r\n      const conversationsPath = `/artifacts/${appId}/users/${userId}/conversations`;\r\n      const newConversationDoc = await addDoc(collection(db, conversationsPath), {\r\n        title: 'New Chat',\r\n        timestamp: serverTimestamp()\r\n      });\r\n      setSelectedConversation(newConversationDoc.id);\r\n      setMessages([]);\r\n    } catch (e) {\r\n      console.error(\"Error creating new conversation:\", e);\r\n      setError(\"Failed to create a new chat.\");\r\n    }\r\n  };\r\n\r\n  const handleSummarizeChat = async () => {\r\n    if (!db || !selectedConversation || isSummarizing) return;\r\n    setIsSummarizing(true);\r\n    const chatText = messages.map(msg => `${msg.role}: ${msg.text}`).join('\\n');\r\n    const prompt = `Summarize the following chat conversation into a concise paragraph:\\n\\n${chatText}`;\r\n\r\n    const payload = { contents: [{ role: \"user\", parts: [{ text: prompt }] }] };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n    \r\n    let summaryText = \"Sorry, I couldn't generate a summary.\";\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      if (result.candidates && result.candidates.length > 0 &&\r\n          result.candidates[0].content && result.candidates[0].content.parts &&\r\n          result.candidates[0].content.parts.length > 0) {\r\n        summaryText = result.candidates[0].content.parts[0].text;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error calling Gemini API:\", e);\r\n      setError(\"Error generating summary.\");\r\n    }\r\n    \r\n    await addMessageToChat('ai', `**Chat Summary:**\\n\\n${summaryText}`);\r\n    setIsSummarizing(false);\r\n  };\r\n\r\n  const handleGenerateImage = async () => {\r\n    if (!db || !selectedConversation || messages.length === 0 || isGeneratingImage) return;\r\n\r\n    const lastUserMessage = messages.slice().reverse().find(m => m.role === 'user');\r\n    if (!lastUserMessage) {\r\n        await addMessageToChat('ai', 'Please send a message before generating an image.');\r\n        return;\r\n    }\r\n\r\n    setIsGeneratingImage(true);\r\n    const prompt = lastUserMessage.text;\r\n    const payload = { instances: { prompt: prompt }, parameters: { \"sampleCount\": 1} };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n\r\n    let imageUrl = null;\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\r\n        imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\r\n      } else {\r\n        await addMessageToChat('ai', 'Sorry, I was unable to generate an image from that prompt.');\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error calling image generation API:\", e);\r\n      setError(\"Error generating image.\");\r\n    }\r\n    \r\n    if (imageUrl) {\r\n      await addMessageToChat('ai', 'Here is the image I generated:', imageUrl);\r\n    }\r\n    setIsGeneratingImage(false);\r\n  };\r\n\r\n  const handleTextToSpeech = async (message) => {\r\n    if (audioState.isPlaying) {\r\n      // If audio is already playing, stop it\r\n      setAudioState({ isPlaying: false, currentMessageId: null });\r\n      return;\r\n    }\r\n    \r\n    setAudioState({ isPlaying: true, currentMessageId: message.id });\r\n    \r\n    const prompt = `Say in a smooth, warm voice: \"${message.text}\"`;\r\n    const payload = {\r\n      contents: [{ parts: [{ text: prompt }] }],\r\n      generationConfig: {\r\n        responseModalities: [\"AUDIO\"],\r\n        speechConfig: {\r\n          voiceConfig: {\r\n            prebuiltVoiceConfig: { voiceName: \"Rasalgethi\" }\r\n          }\r\n        }\r\n      },\r\n      model: \"gemini-2.5-flash-preview-tts\"\r\n    };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\r\n    \r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const part = result?.candidates?.[0]?.content?.parts?.[0];\r\n      const audioData = part?.inlineData?.data;\r\n      const mimeType = part?.inlineData?.mimeType;\r\n\r\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\r\n        const sampleRate = parseInt(mimeType.match(/rate=(\\d+)/)[1], 10);\r\n        const pcmData = base64ToArrayBuffer(audioData);\r\n        const pcm16 = new Int16Array(pcmData);\r\n        const wavBlob = pcmToWav(pcm16, sampleRate);\r\n        const audioUrl = URL.createObjectURL(wavBlob);\r\n        \r\n        const audio = new Audio(audioUrl);\r\n        audio.onended = () => {\r\n          setAudioState({ isPlaying: false, currentMessageId: null });\r\n        };\r\n        audio.play().catch(e => console.error(\"Audio playback failed:\", e));\r\n      } else {\r\n        console.error(\"No audio data found in API response.\");\r\n        setAudioState({ isPlaying: false, currentMessageId: null });\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error calling TTS API:\", e);\r\n      setAudioState({ isPlaying: false, currentMessageId: null });\r\n      setError(\"Error generating speech.\");\r\n    }\r\n  };\r\n\r\n  // --- UI Layout ---\r\n  if (!isAuthReady) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-900\">\r\n        <div className=\"text-white text-lg\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"flex h-screen bg-gray-900 text-white font-inter\">\r\n      {/* Sidebar */}\r\n      <div className=\"flex flex-col w-1/4 bg-gray-800 p-4\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h1 className=\"text-xl font-bold\">Conversations</h1>\r\n          <button\r\n            onClick={handleNewChat}\r\n            className=\"p-2 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\"\r\n          >\r\n            + New Chat\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-1 overflow-y-auto space-y-2\">\r\n          {conversations.map(conv => (\r\n            <div\r\n              key={conv.id}\r\n              onClick={() => setSelectedConversation(conv.id)}\r\n              className={`p-3 rounded-lg cursor-pointer transition-colors duration-200 ${\r\n                selectedConversation === conv.id ? 'bg-indigo-600' : 'bg-gray-700 hover:bg-gray-600'\r\n              }`}\r\n            >\r\n              <p className=\"truncate\">{conv.title || 'Untitled Chat'}</p>\r\n              <p className=\"text-sm text-gray-400\">{conv.timestamp?.toDate().toLocaleString()}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Window */}\r\n      <div className=\"flex-1 flex flex-col bg-gray-800 rounded-l-3xl shadow-xl overflow-hidden\">\r\n        {/* Header */}\r\n        <div className=\"p-4 bg-gray-900 flex justify-between items-center border-b border-gray-700\">\r\n          <div className=\"flex flex-col\">\r\n            <h2 className=\"text-lg font-semibold\">AI Chatbot App</h2>\r\n            <p className=\"text-sm text-gray-400 truncate\">\r\n              User ID: {userId}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={handleSummarizeChat}\r\n              className={`p-2 px-4 rounded-full font-semibold transition-colors duration-200 ${isSummarizing ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'}`}\r\n              disabled={isSummarizing || messages.length === 0}\r\n            >\r\n              {isSummarizing ? 'Summarizing...' : 'Summarize Chat ✨'}\r\n            </button>\r\n            <button\r\n              onClick={handleGenerateImage}\r\n              className={`p-2 px-4 rounded-full font-semibold transition-colors duration-200 ${isGeneratingImage ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'}`}\r\n              disabled={isGeneratingImage || messages.length === 0 || messages.slice().reverse().find(m => m.role === 'user') === undefined}\r\n            >\r\n              {isGeneratingImage ? 'Generating...' : 'Generate Image ✨'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message Display Area */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\r\n          {error && (\r\n            <div className=\"bg-red-500 text-white p-3 rounded-lg text-center\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          {messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\r\n            >\r\n              <div\r\n                className={`flex items-start max-w-lg p-4 rounded-3xl shadow-lg ${\r\n                  message.role === 'user'\r\n                    ? 'bg-indigo-500 text-white rounded-br-none'\r\n                    : 'bg-gray-700 text-gray-100 rounded-bl-none'\r\n                }`}\r\n              >\r\n                <div className=\"flex-1\">\r\n                  <p className=\"whitespace-pre-wrap\">{message.text}</p>\r\n                  {message.imageUrl && (\r\n                    <img\r\n                      src={message.imageUrl}\r\n                      alt=\"Generated by AI\"\r\n                      className=\"mt-3 rounded-lg max-w-full h-auto\"\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src=\"https://placehold.co/400x300/e2e8f0/6b7280?text=Image+Load+Error\";\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <span className=\"block text-xs mt-2 text-right text-gray-300\">\r\n                    {message.timestamp?.toDate().toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n                {message.role === 'ai' && (\r\n                  <button\r\n                    onClick={() => handleTextToSpeech(message)}\r\n                    className=\"ml-2 p-1 text-gray-400 hover:text-white transition-colors duration-200\"\r\n                    title=\"Read aloud\"\r\n                  >\r\n                    {audioState.isPlaying && audioState.currentMessageId === message.id ? (\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M.879 10.395A10.016 10.016 0 0110 5c3.27 0 6.275 1.157 8.521 3.033l.033.023.013.013a.5.5 0 01.002.738l-1.096 1.096a.5.5 0 01-.707 0L10 6.707 3.328 13.379a.5.5 0 01-.707 0l-1.096-1.096a.5.5 0 01-.002-.738.5.5 0 01.013-.013L2.48 8.033A10.016 10.016 0 0110 5a10.016 10.016 0 019.121 5.395l.024.032.023.032.016.03a10.016 10.016 0 010 4.192l-.016.03a10.016 10.016 0 01-.023.032l-.024.032a10.016 10.016 0 01-9.121 5.395 10.016 10.016 0 01-9.121-5.395l-.024-.032a10.016 10.016 0 01-.023-.032l-.016-.03a10.016 10.016 0 010-4.192l.016-.03.023-.032.024-.032zM10 16a6 6 0 100-12 6 6 0 000 12z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isAIGenerating && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"max-w-md p-4 rounded-3xl bg-gray-700 text-gray-100 rounded-bl-none\">\r\n                <div className=\"dot-flashing\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {isGeneratingImage && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"max-w-md p-4 rounded-3xl bg-gray-700 text-gray-100 rounded-bl-none\">\r\n                <p>Generating image...</p>\r\n                <div className=\"dot-flashing\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Message Input */}\r\n        <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-900 flex items-center border-t border-gray-700\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-1 p-3 bg-gray-700 border border-gray-600 text-white rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            disabled={isAIGenerating}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-600 disabled:cursor-not-allowed\"\r\n            disabled={isAIGenerating || !newMessage.trim()}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n            </svg>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}