{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token */\n\nimport { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword,\n// Added for registration\nsignInWithEmailAndPassword,\n// Added for traditional login\nsignOut // Added for logout\n} from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp } from 'firebase/firestore';\n\n// --- Firebase Configuration ---\n// This configuration will be used when running the app locally.\n// In the Canvas environment, the __firebase_config variable will override this.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\n\n// Determine which Firebase config to use: Canvas environment's or local fallback.\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\n\n// Determine app ID: Canvas environment's or local fallback.\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n\n// Determine initial auth token: Canvas environment's or local fallback.\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// The main application component.\nfunction App() {\n  _s();\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false); // New state for AI generation loading\n  // authMode controls which authentication form is displayed\n  const [authMode, setAuthMode] = useState('email-link'); // 'email-link', 'email-password-login', 'email-password-signup'\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    // Check if firebaseConfig is available and has an API key\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n\n      // Listen for auth state changes\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          // A user is signed in.\n          setUser(currentUser);\n          setIsAuthReady(true);\n          setError(null);\n        } else {\n          // No user is signed in. Attempt to sign in.\n          // Prioritize custom token sign-in if available (provided by Canvas environment)\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            // Only try anonymous if not processing an email link and no custom token\n            try {\n              // Fallback to anonymous sign-in if no custom token is provided and not signing in with email link.\n              // IMPORTANT: Ensure Anonymous Authentication is enabled in your Firebase project settings.\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n          setIsAuthReady(true); // Mark auth as ready even if no user is signed in yet\n        }\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      // Catch any initialization errors\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in when the component mounts or auth state changes.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n\n    // Confirm the link is a sign-in with email link.\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n\n      // Get the email if available. This should be available if the user completes\n      // the flow on the same device where they started it.\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n\n      // If no email is stored, prompt the user for it.\n      if (!storedEmail) {\n        // IMPORTANT: In a real app, you'd use a custom modal for this prompt.\n        // For this example, we'll use window.prompt for simplicity.\n        storedEmail = prompt('Please provide your email for confirmation'); // Using prompt for simplicity\n      }\n      if (!storedEmail) {\n        setError(\"Email not provided for sign-in link. Please restart the process.\");\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        // Clear the URL parameters to prevent re-processing the link\n        window.history.replaceState({}, document.title, window.location.pathname);\n        return;\n      }\n\n      // The client SDK will parse the code from the link for you.\n      signInWithEmailLink(auth, storedEmail, window.location.href).then(result => {\n        // Clear email from storage.\n        window.localStorage.removeItem('emailForSignIn');\n        setUser(result.user); // Set the signed-in user\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        setError(null);\n        // Clear the URL parameters to prevent re-processing the link\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }).catch(error => {\n        setError(`Error completing sign-in with link: ${error.message}`);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        // Clear the URL parameters to prevent re-processing the link\n        window.history.replaceState({}, document.title, window.location.pathname);\n      });\n    }\n  }, [auth, isAuthReady]); // Added isAuthReady to dependencies\n\n  // 3. Fetch messages from Firestore in real-time.\n  useEffect(() => {\n    // Only fetch data if Firebase is initialized and the user is authenticated.\n    if (!db || !isAuthReady || !user) return; // Ensure user is authenticated before fetching messages\n\n    // We'll store messages in a public collection so all users can see them.\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\n\n    // Create a real-time listener for the messages.\n    const unsubscribe = onSnapshot(messagesCollectionRef, querySnapshot => {\n      const messagesData = [];\n      querySnapshot.forEach(doc => {\n        messagesData.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      // Sort messages by timestamp after fetching to avoid orderBy errors\n      messagesData.sort((a, b) => {\n        var _a$timestamp, _b$timestamp;\n        return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.seconds) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.seconds) || 0);\n      });\n      setMessages(messagesData);\n    }, firestoreError => {\n      setError(`Failed to load messages: ${firestoreError.message}`);\n      console.error(\"Firestore error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, isAuthReady, user]); // Added user to dependencies\n\n  // 4. Send a new message to Firestore.\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user || !db || isAIGenerating) return; // Disable send if AI is generating\n\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: newMessage,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        // Simple user name for display\n        timestamp: serverTimestamp()\n      });\n      setNewMessage('');\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n    }\n  };\n\n  // 5. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    // ActionCodeSettings object for email link authentication\n    const actionCodeSettings = {\n      // URL you want to redirect back to. The domain for this URL must be\n      // in the authorized domains list in the Firebase Console.\n      // For local development, this will be http://localhost:3000 (or your port).\n      url: window.location.origin,\n      handleCodeInApp: true,\n      // This must be true for sign-in operations\n      iOS: {\n        bundleId: 'com.example.ios' // Placeholder\n      },\n      android: {\n        packageName: 'com.example.android',\n        // Placeholder\n        installApp: true,\n        minimumVersion: '12'\n      }\n      // linkDomain can be omitted to use default Firebase Hosting domain\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email); // Save email locally\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 6. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      // User is automatically signed in after registration\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Registration failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 7. Handle Email/Password Login\n  const handleEmailPasswordLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Login failed: ${e.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Logout\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUser(null); // Clear user state\n      setMessages([]); // Clear messages\n      setEmailSent(false); // Reset email link flow\n      setIsSigningInWithLink(false); // Reset link sign-in status\n      setAuthMode('email-link'); // Go back to default auth mode\n      setError(null);\n    } catch (error) {\n      setError(`Logout failed: ${error.message}`);\n    }\n  };\n\n  // 9. AI Response Logic - New useEffect to trigger AI response\n  useEffect(() => {\n    // Only trigger if there's a new message, Firebase is ready, user is logged in,\n    // and AI is not already generating.\n    if (!db || !isAuthReady || !user || messages.length === 0 || isAIGenerating) {\n      return;\n    }\n    const lastMessage = messages[messages.length - 1];\n\n    // Only respond if the last message is from the current user and not an AI message\n    if (lastMessage.userId === user.uid && lastMessage.type !== 'ai-response') {\n      const getAIResponse = async () => {\n        setIsAIGenerating(true);\n        setError(null); // Clear previous errors\n\n        try {\n          // Construct chat history for the AI model\n          const chatHistory = messages.map(msg => ({\n            role: msg.userId === user.uid ? 'user' : 'model',\n            parts: [{\n              text: msg.text\n            }]\n          }));\n          const payload = {\n            contents: chatHistory\n          };\n          // Use the API key from firebaseConfig\n          const API_KEY = firebaseConfig.apiKey; // <-- Changed this line\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${API_KEY}`;\n\n          // Implement exponential backoff for API calls\n          const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n            try {\n              const response = await fetch(url, options);\n              if (!response.ok) {\n                var _errorData$error;\n                const errorData = await response.json();\n                throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n              }\n              return response;\n            } catch (error) {\n              if (retries > 0 && error.message.includes(\"API error\")) {\n                await new Promise(resolve => setTimeout(resolve, delay));\n                return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n              }\n              throw error;\n            }\n          };\n          const response = await fetchWithExponentialBackoff(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          });\n          const result = await response.json();\n          let responseText = \"Sorry, I couldn't generate a response.\";\n          if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n            responseText = result.candidates[0].content.parts[0].text;\n          }\n\n          // Add AI's response to Firestore\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\n          await addDoc(messagesCollectionRef, {\n            text: responseText,\n            userId: 'bot',\n            // Mark as bot's message\n            userName: 'AI Chatbot',\n            timestamp: serverTimestamp(),\n            type: 'ai-response' // Add a type to distinguish AI messages\n          });\n        } catch (e) {\n          console.error(\"Error getting AI response:\", e);\n          setError(`AI response error: ${e.message}`);\n          // Optionally, add an error message from the bot to the chat\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\n          await addDoc(messagesCollectionRef, {\n            text: `(AI Error: ${e.message})`,\n            userId: 'bot',\n            userName: 'AI Chatbot',\n            timestamp: serverTimestamp(),\n            type: 'ai-response'\n          });\n        } finally {\n          setIsAIGenerating(false);\n        }\n      };\n      getAIResponse();\n    }\n  }, [messages, db, isAuthReady, user, appId]); // Dependencies for AI response logic\n\n  // UI rendering based on application state.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-4 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-xl bg-white rounded-2xl shadow-xl overflow-hidden flex flex-col h-[80vh]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-purple-600 to-indigo-600 text-white p-4 text-center text-2xl font-bold\",\n        children: \"AI Chatbot App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-200 text-gray-700 text-sm p-2 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono text-xs p-1 bg-gray-300 rounded-md truncate max-w-[70%]\",\n          children: user ? user.uid : 'Not signed in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"ml-2 px-3 py-1 bg-red-500 text-white rounded-md text-xs hover:bg-red-600 transition-colors\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-lg text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"animate-spin h-8 w-8 text-indigo-500 mx-auto mb-2\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), isSigningInWithLink ? 'Completing sign-in with email link...' : 'Initializing Firebase...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative max-w-sm text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"font-bold block mb-1\",\n            children: \"Error!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block sm:inline\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), !loading && !error && !user && !isSigningInWithLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col items-center justify-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAuthMode('email-link'),\n            className: `px-4 py-2 rounded-l-lg font-semibold ${authMode === 'email-link' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n            children: \"Email Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAuthMode('email-password-login'),\n            className: `px-4 py-2 font-semibold ${authMode === 'email-password-login' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAuthMode('email-password-signup'),\n            className: `px-4 py-2 rounded-r-lg font-semibold ${authMode === 'email-password-signup' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), authMode === 'email-link' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4 text-gray-700\",\n            children: \"Sign In with Email Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this), !emailSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendSignInLink,\n            className: \"w-full max-w-sm flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter your email\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n              children: \"Send Sign-in Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-gray-700\",\n              children: \"Email Sent!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-4\",\n              children: [\"Please check your inbox at \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold text-indigo-600\",\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 50\n              }, this), \" for your sign-in link.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEmailSent(false),\n              className: \"mt-6 bg-gray-200 text-gray-700 p-2 rounded-lg hover:bg-gray-300 transition-colors duration-200\",\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), (authMode === 'email-password-login' || authMode === 'email-password-signup') && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: authMode === 'email-password-signup' ? handleEmailPasswordSignUp : handleEmailPasswordLogin,\n          className: \"w-full max-w-sm flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4 text-gray-700\",\n            children: [authMode === 'email-password-signup' ? 'Sign Up' : 'Log In', \" with Email & Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\",\n            className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\",\n            className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n            children: authMode === 'email-password-signup' ? 'Sign Up' : 'Log In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), !loading && !error && user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 p-4 overflow-y-auto space-y-4 bg-gray-50\",\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-gray-400 mt-20\",\n            children: \"No messages yet. Send one to start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 17\n          }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 rounded-xl shadow-md max-w-xs sm:max-w-md break-words ${msg.userId === user.uid ? 'bg-blue-500 text-white rounded-br-none' : 'bg-gray-300 text-gray-800 rounded-bl-none'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-bold text-xs mb-1\",\n                children: msg.userId === user.uid ? 'You' : msg.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this), msg.text, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right text-xs text-opacity-80 mt-1\",\n                children: msg.timestamp ? new Date(msg.timestamp.seconds * 1000).toLocaleTimeString() : '...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 rounded-xl shadow-md bg-gray-300 text-gray-800 rounded-bl-none\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: \"AI is typing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dot-flashing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"p-4 bg-gray-100 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            className: \"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            disabled: isAIGenerating // Disable input while AI is generating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\",\n            disabled: isAIGenerating || !newMessage.trim() // Disable send button while AI is generating or input is empty\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-6 w-6\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rPvHzQAhV3iZRrGY3l22MGNl/5E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","App","_s","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","Object","keys","length","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","console","message","window","location","href","storedEmail","localStorage","getItem","prompt","history","replaceState","document","title","pathname","then","result","removeItem","catch","messagesCollectionRef","querySnapshot","messagesData","forEach","doc","push","id","data","sort","a","b","_a$timestamp","_b$timestamp","timestamp","seconds","firestoreError","handleSendMessage","preventDefault","trim","text","userId","uid","userName","substring","handleSendSignInLink","actionCodeSettings","url","origin","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","setItem","handleEmailPasswordSignUp","handleEmailPasswordLogin","handleLogout","lastMessage","type","getAIResponse","chatHistory","map","msg","role","parts","payload","contents","API_KEY","apiUrl","fetchWithExponentialBackoff","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","Error","statusText","includes","Promise","resolve","setTimeout","method","headers","body","stringify","responseText","candidates","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","onSubmit","value","onChange","target","placeholder","required","Date","toLocaleTimeString","disabled","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword, // Added for registration\r\n  signInWithEmailAndPassword,     // Added for traditional login\r\n  signOut                       // Added for logout\r\n} from 'firebase/auth';\r\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp } from 'firebase/firestore';\r\n\r\n// --- Firebase Configuration ---\r\n// This configuration will be used when running the app locally.\r\n// In the Canvas environment, the __firebase_config variable will override this.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\n// Determine which Firebase config to use: Canvas environment's or local fallback.\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\n\r\n// Determine app ID: Canvas environment's or local fallback.\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\n\r\n// Determine initial auth token: Canvas environment's or local fallback.\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// The main application component.\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false); // New state for AI generation loading\r\n  // authMode controls which authentication form is displayed\r\n  const [authMode, setAuthMode] = useState('email-link'); // 'email-link', 'email-password-login', 'email-password-signup'\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    // Check if firebaseConfig is available and has an API key\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      // Listen for auth state changes\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          // A user is signed in.\r\n          setUser(currentUser);\r\n          setIsAuthReady(true);\r\n          setError(null);\r\n        } else {\r\n          // No user is signed in. Attempt to sign in.\r\n          // Prioritize custom token sign-in if available (provided by Canvas environment)\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) { // Only try anonymous if not processing an email link and no custom token\r\n            try {\r\n              // Fallback to anonymous sign-in if no custom token is provided and not signing in with email link.\r\n              // IMPORTANT: Ensure Anonymous Authentication is enabled in your Firebase project settings.\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n          setIsAuthReady(true); // Mark auth as ready even if no user is signed in yet\r\n        }\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      // Catch any initialization errors\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in when the component mounts or auth state changes.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    // Confirm the link is a sign-in with email link.\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      // Get the email if available. This should be available if the user completes\r\n      // the flow on the same device where they started it.\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      // If no email is stored, prompt the user for it.\r\n      if (!storedEmail) {\r\n        // IMPORTANT: In a real app, you'd use a custom modal for this prompt.\r\n        // For this example, we'll use window.prompt for simplicity.\r\n        storedEmail = prompt('Please provide your email for confirmation'); // Using prompt for simplicity\r\n      }\r\n\r\n      if (!storedEmail) {\r\n        setError(\"Email not provided for sign-in link. Please restart the process.\");\r\n        setIsSigningInWithLink(false);\r\n        setLoading(false);\r\n        // Clear the URL parameters to prevent re-processing the link\r\n        window.history.replaceState({}, document.title, window.location.pathname);\r\n        return;\r\n      }\r\n\r\n      // The client SDK will parse the code from the link for you.\r\n      signInWithEmailLink(auth, storedEmail, window.location.href)\r\n        .then((result) => {\r\n          // Clear email from storage.\r\n          window.localStorage.removeItem('emailForSignIn');\r\n          setUser(result.user); // Set the signed-in user\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          setError(null);\r\n          // Clear the URL parameters to prevent re-processing the link\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch((error) => {\r\n          setError(`Error completing sign-in with link: ${error.message}`);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          // Clear the URL parameters to prevent re-processing the link\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        });\r\n    }\r\n  }, [auth, isAuthReady]); // Added isAuthReady to dependencies\r\n\r\n  // 3. Fetch messages from Firestore in real-time.\r\n  useEffect(() => {\r\n    // Only fetch data if Firebase is initialized and the user is authenticated.\r\n    if (!db || !isAuthReady || !user) return; // Ensure user is authenticated before fetching messages\r\n\r\n    // We'll store messages in a public collection so all users can see them.\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\r\n\r\n    // Create a real-time listener for the messages.\r\n    const unsubscribe = onSnapshot(messagesCollectionRef, (querySnapshot) => {\r\n      const messagesData = [];\r\n      querySnapshot.forEach((doc) => {\r\n        messagesData.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      // Sort messages by timestamp after fetching to avoid orderBy errors\r\n      messagesData.sort((a, b) => (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0));\r\n      setMessages(messagesData);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages: ${firestoreError.message}`);\r\n      console.error(\"Firestore error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, isAuthReady, user]); // Added user to dependencies\r\n\r\n  // 4. Send a new message to Firestore.\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !user || !db || isAIGenerating) return; // Disable send if AI is generating\r\n\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: newMessage,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`, // Simple user name for display\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setNewMessage('');\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  // 5. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    // ActionCodeSettings object for email link authentication\r\n    const actionCodeSettings = {\r\n      // URL you want to redirect back to. The domain for this URL must be\r\n      // in the authorized domains list in the Firebase Console.\r\n      // For local development, this will be http://localhost:3000 (or your port).\r\n      url: window.location.origin,\r\n      handleCodeInApp: true, // This must be true for sign-in operations\r\n      iOS: {\r\n        bundleId: 'com.example.ios' // Placeholder\r\n      },\r\n      android: {\r\n        packageName: 'com.example.android', // Placeholder\r\n        installApp: true,\r\n        minimumVersion: '12'\r\n      }\r\n      // linkDomain can be omitted to use default Firebase Hosting domain\r\n    };\r\n\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email); // Save email locally\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 6. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      // User is automatically signed in after registration\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Registration failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 7. Handle Email/Password Login\r\n  const handleEmailPasswordLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Login failed: ${e.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Logout\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null); // Clear user state\r\n      setMessages([]); // Clear messages\r\n      setEmailSent(false); // Reset email link flow\r\n      setIsSigningInWithLink(false); // Reset link sign-in status\r\n      setAuthMode('email-link'); // Go back to default auth mode\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Logout failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 9. AI Response Logic - New useEffect to trigger AI response\r\n  useEffect(() => {\r\n    // Only trigger if there's a new message, Firebase is ready, user is logged in,\r\n    // and AI is not already generating.\r\n    if (!db || !isAuthReady || !user || messages.length === 0 || isAIGenerating) {\r\n      return;\r\n    }\r\n\r\n    const lastMessage = messages[messages.length - 1];\r\n\r\n    // Only respond if the last message is from the current user and not an AI message\r\n    if (lastMessage.userId === user.uid && lastMessage.type !== 'ai-response') {\r\n      const getAIResponse = async () => {\r\n        setIsAIGenerating(true);\r\n        setError(null); // Clear previous errors\r\n\r\n        try {\r\n          // Construct chat history for the AI model\r\n          const chatHistory = messages.map(msg => ({\r\n            role: msg.userId === user.uid ? 'user' : 'model',\r\n            parts: [{ text: msg.text }]\r\n          }));\r\n\r\n          const payload = { contents: chatHistory };\r\n          // Use the API key from firebaseConfig\r\n          const API_KEY = firebaseConfig.apiKey; // <-- Changed this line\r\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${API_KEY}`;\r\n\r\n          // Implement exponential backoff for API calls\r\n          const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n            try {\r\n              const response = await fetch(url, options);\r\n              if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n              }\r\n              return response;\r\n            } catch (error) {\r\n              if (retries > 0 && error.message.includes(\"API error\")) {\r\n                await new Promise(resolve => setTimeout(resolve, delay));\r\n                return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n              }\r\n              throw error;\r\n            }\r\n          };\r\n\r\n          const response = await fetchWithExponentialBackoff(apiUrl, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(payload)\r\n          });\r\n\r\n          const result = await response.json();\r\n          let responseText = \"Sorry, I couldn't generate a response.\";\r\n\r\n          if (result.candidates && result.candidates.length > 0 &&\r\n              result.candidates[0].content && result.candidates[0].content.parts &&\r\n              result.candidates[0].content.parts.length > 0) {\r\n            responseText = result.candidates[0].content.parts[0].text;\r\n          }\r\n\r\n          // Add AI's response to Firestore\r\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\r\n          await addDoc(messagesCollectionRef, {\r\n            text: responseText,\r\n            userId: 'bot', // Mark as bot's message\r\n            userName: 'AI Chatbot',\r\n            timestamp: serverTimestamp(),\r\n            type: 'ai-response' // Add a type to distinguish AI messages\r\n          });\r\n\r\n        } catch (e) {\r\n          console.error(\"Error getting AI response:\", e);\r\n          setError(`AI response error: ${e.message}`);\r\n          // Optionally, add an error message from the bot to the chat\r\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'messages');\r\n          await addDoc(messagesCollectionRef, {\r\n            text: `(AI Error: ${e.message})`,\r\n            userId: 'bot',\r\n            userName: 'AI Chatbot',\r\n            timestamp: serverTimestamp(),\r\n            type: 'ai-response'\r\n          });\r\n        } finally {\r\n          setIsAIGenerating(false);\r\n        }\r\n      };\r\n      getAIResponse();\r\n    }\r\n  }, [messages, db, isAuthReady, user, appId]); // Dependencies for AI response logic\r\n\r\n  // UI rendering based on application state.\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\r\n      <div className=\"w-full max-w-xl bg-white rounded-2xl shadow-xl overflow-hidden flex flex-col h-[80vh]\">\r\n\r\n        {/* Header */}\r\n        <div className=\"bg-gradient-to-r from-purple-600 to-indigo-600 text-white p-4 text-center text-2xl font-bold\">\r\n          AI Chatbot App\r\n        </div>\r\n\r\n        {/* User ID and Status */}\r\n        <div className=\"bg-gray-200 text-gray-700 text-sm p-2 flex justify-between items-center\">\r\n            <span className=\"font-semibold\">User ID:</span>\r\n            <span className=\"font-mono text-xs p-1 bg-gray-300 rounded-md truncate max-w-[70%]\">\r\n                {user ? user.uid : 'Not signed in'}\r\n            </span>\r\n            {user && (\r\n              <button\r\n                onClick={handleLogout}\r\n                className=\"ml-2 px-3 py-1 bg-red-500 text-white rounded-md text-xs hover:bg-red-600 transition-colors\"\r\n              >\r\n                Logout\r\n              </button>\r\n            )}\r\n        </div>\r\n\r\n        {/* Loading and Error Display */}\r\n        {loading && (\r\n          <div className=\"flex-1 flex items-center justify-center p-4\">\r\n            <div className=\"text-center text-lg text-gray-500\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"animate-spin h-8 w-8 text-indigo-500 mx-auto mb-2\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              {isSigningInWithLink ? 'Completing sign-in with email link...' : 'Initializing Firebase...'}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"flex-1 flex items-center justify-center p-4\">\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative max-w-sm text-center\">\r\n              <strong className=\"font-bold block mb-1\">Error!</strong>\r\n              <span className=\"block sm:inline\">{error}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Conditional Rendering: Authentication Forms or Chat */}\r\n        {!loading && !error && !user && !isSigningInWithLink && (\r\n          <div className=\"flex-1 flex flex-col items-center justify-center p-4\">\r\n            <div className=\"flex mb-6\">\r\n              <button\r\n                onClick={() => setAuthMode('email-link')}\r\n                className={`px-4 py-2 rounded-l-lg font-semibold ${authMode === 'email-link' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\r\n              >\r\n                Email Link\r\n              </button>\r\n              <button\r\n                onClick={() => setAuthMode('email-password-login')}\r\n                className={`px-4 py-2 font-semibold ${authMode === 'email-password-login' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\r\n              >\r\n                Login\r\n              </button>\r\n              <button\r\n                onClick={() => setAuthMode('email-password-signup')}\r\n                className={`px-4 py-2 rounded-r-lg font-semibold ${authMode === 'email-password-signup' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n\r\n            {authMode === 'email-link' && (\r\n              <>\r\n                <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Sign In with Email Link</h2>\r\n                {!emailSent ? (\r\n                  <form onSubmit={handleSendSignInLink} className=\"w-full max-w-sm flex flex-col items-center\">\r\n                    <input\r\n                      type=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      placeholder=\"Enter your email\"\r\n                      className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                      required\r\n                    />\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                    >\r\n                      Send Sign-in Link\r\n                    </button>\r\n                  </form>\r\n                ) : (\r\n                  <div className=\"text-center\">\r\n                    <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Email Sent!</h2>\r\n                    <p className=\"text-gray-600 mb-4\">\r\n                      Please check your inbox at <span className=\"font-semibold text-indigo-600\">{email}</span> for your sign-in link.\r\n                    </p>\r\n                    <button\r\n                      onClick={() => setEmailSent(false)}\r\n                      className=\"mt-6 bg-gray-200 text-gray-700 p-2 rounded-lg hover:bg-gray-300 transition-colors duration-200\"\r\n                    >\r\n                      Go Back\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {(authMode === 'email-password-login' || authMode === 'email-password-signup') && (\r\n              <form onSubmit={authMode === 'email-password-signup' ? handleEmailPasswordSignUp : handleEmailPasswordLogin} className=\"w-full max-w-sm flex flex-col items-center\">\r\n                <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">\r\n                  {authMode === 'email-password-signup' ? 'Sign Up' : 'Log In'} with Email & Password\r\n                </h2>\r\n                <input\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Email\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Password\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  required\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                >\r\n                  {authMode === 'email-password-signup' ? 'Sign Up' : 'Log In'}\r\n                </button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Chat Area */}\r\n        {!loading && !error && user && (\r\n          <>\r\n            <div className=\"flex-1 p-4 overflow-y-auto space-y-4 bg-gray-50\">\r\n              {messages.length === 0 && (\r\n                <div className=\"text-center text-gray-400 mt-20\">\r\n                  No messages yet. Send one to start the conversation!\r\n                </div>\r\n              )}\r\n              {messages.map((msg) => (\r\n                <div key={msg.id} className={`flex ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`}>\r\n                  <div className={`p-3 rounded-xl shadow-md max-w-xs sm:max-w-md break-words ${\r\n                    msg.userId === user.uid\r\n                      ? 'bg-blue-500 text-white rounded-br-none'\r\n                      : 'bg-gray-300 text-gray-800 rounded-bl-none'\r\n                  }`}>\r\n                    <div className=\"font-bold text-xs mb-1\">\r\n                      {msg.userId === user.uid ? 'You' : msg.userName}\r\n                    </div>\r\n                    {msg.text}\r\n                    <div className=\"text-right text-xs text-opacity-80 mt-1\">\r\n                      {msg.timestamp ? new Date(msg.timestamp.seconds * 1000).toLocaleTimeString() : '...'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              {/* AI Generating Indicator */}\r\n              {isAIGenerating && (\r\n                <div className=\"flex justify-start\">\r\n                  <div className=\"p-3 rounded-xl shadow-md bg-gray-300 text-gray-800 rounded-bl-none\">\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"mr-2\">AI is typing</span>\r\n                      <div className=\"dot-flashing\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Message Input */}\r\n            <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-100 flex items-center\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type your message...\"\r\n                className=\"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                disabled={isAIGenerating} // Disable input while AI is generating\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\"\r\n                disabled={isAIGenerating || !newMessage.trim()} // Disable send button while AI is generating or input is empty\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n                </svg>\r\n              </button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}