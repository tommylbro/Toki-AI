{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// This line tells ESLint to ignore the following global variables that are provided by the Canvas environment.\n/* global __app_id, __firebase_config, __initial_auth_token */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\nimport { SendHorizonal, Bot } from 'lucide-react';\n\n// Main App component for the chatbot application.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [db, setDb] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Use the global variables provided by the environment\n  const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n  let firebaseConfig = {};\n  try {\n    firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\n  } catch (e) {\n    console.error(\"Failed to parse firebase config from global variable.\");\n  }\n  const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n  // Initialize Firebase and handle authentication\n  useEffect(() => {\n    const initFirebase = async () => {\n      console.log(\"Initializing Firebase...\");\n      try {\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\n        const firestoreDb = getFirestore(app);\n        const firestoreAuth = getAuth(app);\n        setDb(firestoreDb);\n\n        // Set up an auth state listener to handle sign-in\n        onAuthStateChanged(firestoreAuth, async user => {\n          if (user) {\n            setUserId(user.uid);\n            console.log(`[Firebase Auth] Successfully authenticated with user ID: ${user.uid}`);\n          } else {\n            console.log(\"[Firebase Auth] No user signed in. Attempting to sign in.\");\n            if (initialAuthToken) {\n              try {\n                await signInWithCustomToken(firestoreAuth, initialAuthToken);\n                console.log(\"[Firebase Auth] Signed in with custom token.\");\n              } catch (error) {\n                console.error(\"[Firebase Auth] Error signing in with custom token. Falling back to anonymous auth:\", error);\n                await signInAnonymously(firestoreAuth);\n                console.log(\"[Firebase Auth] Signed in anonymously.\");\n              }\n            } else {\n              await signInAnonymously(firestoreAuth);\n              console.log(\"[Firebase Auth] Signed in anonymously.\");\n            }\n          }\n          setIsAuthReady(true);\n        });\n      } catch (e) {\n        console.error(\"Error initializing Firebase:\", e);\n        setError(`Firebase initialization failed: ${e.message}`);\n      }\n    };\n    initFirebase();\n  }, [initialAuthToken, firebaseConfig]);\n\n  // Fetch messages from Firestore in real-time\n  useEffect(() => {\n    if (db && isAuthReady && userId) {\n      console.log('[Firestore] Attempting to fetch messages. User is authenticated:', !!userId);\n      setIsLoading(true);\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\n      const q = query(messagesCollectionRef);\n      const unsubscribe = onSnapshot(q, snapshot => {\n        console.log('[Firestore] Received new snapshot of messages.');\n        const fetchedMessages = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        const sortedMessages = fetchedMessages.sort((a, b) => {\n          var _a$timestamp, _b$timestamp;\n          return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.toMillis()) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.toMillis()) || 0);\n        });\n        setMessages(sortedMessages);\n        setIsLoading(false);\n        setError(null); // Clear any previous errors on successful fetch\n      }, firestoreError => {\n        console.error(\"[Firestore ERROR] Failed to fetch messages:\", firestoreError.message);\n        setIsLoading(false);\n        setError(`Failed to load messages. Please check Firestore security rules and your connection. Details: ${firestoreError.message}`);\n      });\n      return () => {\n        console.log('[Firestore] Unsubscribing from messages collection.');\n        unsubscribe();\n      };\n    }\n  }, [db, userId, isAuthReady, appId]);\n\n  // Use a separate useEffect to handle AI responses to user messages\n  useEffect(() => {\n    const lastMessage = messages[messages.length - 1];\n    if (db && lastMessage && lastMessage.sender === 'user' && !isAIGenerating) {\n      const getAIResponse = async () => {\n        setIsAIGenerating(true);\n        try {\n          // Construct the prompt with chat history\n          const chatHistory = messages.map(msg => ({\n            role: msg.sender === 'user' ? 'user' : 'model',\n            parts: [{\n              text: msg.text\n            }]\n          }));\n          chatHistory.push({\n            role: \"user\",\n            parts: [{\n              text: `You are a helpful AI assistant. Please respond to the following user message: \"${lastMessage.text}\"`\n            }]\n          });\n          const payload = {\n            contents: chatHistory\n          };\n          const apiKey = \"\";\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          });\n          const result = await response.json();\n          let responseText = \"Sorry, I couldn't generate a response.\";\n          if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n            responseText = result.candidates[0].content.parts[0].text;\n          }\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\n            text: responseText,\n            sender: 'bot',\n            timestamp: serverTimestamp()\n          });\n        } catch (e) {\n          console.error(\"Error getting AI response:\", e);\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\n            text: `Sorry, I am having trouble processing that request. Error: ${e.message}`,\n            sender: 'bot',\n            timestamp: serverTimestamp()\n          });\n        } finally {\n          setIsAIGenerating(false);\n        }\n      };\n      getAIResponse();\n    }\n  }, [messages, db, isAIGenerating, appId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (input.trim() === '' || !db || !userId || isAIGenerating) return;\n    try {\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\n      await addDoc(messagesCollectionRef, {\n        text: input,\n        sender: 'user',\n        timestamp: serverTimestamp(),\n        userId: userId // Add userId to the message for identification\n      });\n      setInput('');\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      setError(`Failed to send message: ${e.message}`);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && input.trim() !== '' && !isAIGenerating) {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App bg-gray-100 dark:bg-gray-900 min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700 rounded-t-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold text-gray-900 dark:text-white\",\n          children: \"AI Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), userId && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500 dark:text-gray-400\",\n          children: [\"User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono\",\n            children: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow p-4 overflow-y-auto space-y-4\",\n        children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-full text-red-500 font-medium text-center p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 dark:text-gray-400\",\n            children: \"Loading messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 dark:text-gray-400\",\n            children: \"Start a new conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-start gap-3 ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center w-8 h-8 rounded-full bg-indigo-200 dark:bg-indigo-700\",\n            children: /*#__PURE__*/_jsxDEV(Bot, {\n              size: 16,\n              className: \"text-indigo-600 dark:text-indigo-200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 rounded-lg max-w-[70%] ${message.sender === 'user' ? 'bg-indigo-500 text-white dark:bg-indigo-600' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white'}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"whitespace-pre-wrap\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start gap-3 justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white max-w-[70%]\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              size: 16,\n              className: \"inline-block mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-200 dark:border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Type your message...\",\n            className: \"flex-grow rounded-full border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 px-4 py-2 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors\",\n            disabled: isAIGenerating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: isAIGenerating || input.trim() === '' || !userId,\n            className: \"ml-3 p-2 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:bg-gray-400 transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(SendHorizonal, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hJ+NGmaCC06cqc9tmy81UYj4ICk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getApps","getApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","getFirestore","collection","addDoc","serverTimestamp","query","onSnapshot","SendHorizonal","Bot","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","db","setDb","userId","setUserId","isAuthReady","setIsAuthReady","isLoading","setIsLoading","isAIGenerating","setIsAIGenerating","error","setError","messagesEndRef","appId","__app_id","firebaseConfig","JSON","parse","__firebase_config","e","console","initialAuthToken","__initial_auth_token","initFirebase","log","app","length","firestoreDb","firestoreAuth","user","uid","message","messagesCollectionRef","q","unsubscribe","snapshot","fetchedMessages","docs","map","doc","id","data","sortedMessages","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","firestoreError","lastMessage","sender","getAIResponse","chatHistory","msg","role","parts","text","push","payload","contents","apiKey","apiUrl","response","fetch","method","headers","body","stringify","result","json","responseText","candidates","content","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","handleKeyPress","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","size","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["// This line tells ESLint to ignore the following global variables that are provided by the Canvas environment.\r\n/* global __app_id, __firebase_config, __initial_auth_token */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\r\nimport { SendHorizonal, Bot } from 'lucide-react';\r\n\r\n// Main App component for the chatbot application.\r\nfunction App() {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [db, setDb] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Use the global variables provided by the environment\r\n  const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\n  let firebaseConfig = {};\r\n  try {\r\n    firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\r\n  } catch (e) {\r\n    console.error(\"Failed to parse firebase config from global variable.\");\r\n  }\r\n  const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n  // Initialize Firebase and handle authentication\r\n  useEffect(() => {\r\n    const initFirebase = async () => {\r\n      console.log(\"Initializing Firebase...\");\r\n      try {\r\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\r\n        const firestoreDb = getFirestore(app);\r\n        const firestoreAuth = getAuth(app);\r\n        \r\n        setDb(firestoreDb);\r\n\r\n        // Set up an auth state listener to handle sign-in\r\n        onAuthStateChanged(firestoreAuth, async (user) => {\r\n          if (user) {\r\n            setUserId(user.uid);\r\n            console.log(`[Firebase Auth] Successfully authenticated with user ID: ${user.uid}`);\r\n          } else {\r\n            console.log(\"[Firebase Auth] No user signed in. Attempting to sign in.\");\r\n            if (initialAuthToken) {\r\n              try {\r\n                await signInWithCustomToken(firestoreAuth, initialAuthToken);\r\n                console.log(\"[Firebase Auth] Signed in with custom token.\");\r\n              } catch (error) {\r\n                console.error(\"[Firebase Auth] Error signing in with custom token. Falling back to anonymous auth:\", error);\r\n                await signInAnonymously(firestoreAuth);\r\n                console.log(\"[Firebase Auth] Signed in anonymously.\");\r\n              }\r\n            } else {\r\n              await signInAnonymously(firestoreAuth);\r\n              console.log(\"[Firebase Auth] Signed in anonymously.\");\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n        });\r\n      } catch (e) {\r\n        console.error(\"Error initializing Firebase:\", e);\r\n        setError(`Firebase initialization failed: ${e.message}`);\r\n      }\r\n    };\r\n    initFirebase();\r\n  }, [initialAuthToken, firebaseConfig]);\r\n\r\n  // Fetch messages from Firestore in real-time\r\n  useEffect(() => {\r\n    if (db && isAuthReady && userId) {\r\n      console.log('[Firestore] Attempting to fetch messages. User is authenticated:', !!userId);\r\n      setIsLoading(true);\r\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\r\n      const q = query(messagesCollectionRef);\r\n\r\n      const unsubscribe = onSnapshot(q, (snapshot) => {\r\n        console.log('[Firestore] Received new snapshot of messages.');\r\n        const fetchedMessages = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        const sortedMessages = fetchedMessages.sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\r\n        setMessages(sortedMessages);\r\n        setIsLoading(false);\r\n        setError(null); // Clear any previous errors on successful fetch\r\n      }, (firestoreError) => {\r\n        console.error(\"[Firestore ERROR] Failed to fetch messages:\", firestoreError.message);\r\n        setIsLoading(false);\r\n        setError(`Failed to load messages. Please check Firestore security rules and your connection. Details: ${firestoreError.message}`);\r\n      });\r\n      \r\n      return () => {\r\n        console.log('[Firestore] Unsubscribing from messages collection.');\r\n        unsubscribe();\r\n      }\r\n    }\r\n  }, [db, userId, isAuthReady, appId]);\r\n\r\n  // Use a separate useEffect to handle AI responses to user messages\r\n  useEffect(() => {\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (db && lastMessage && lastMessage.sender === 'user' && !isAIGenerating) {\r\n      const getAIResponse = async () => {\r\n        setIsAIGenerating(true);\r\n        try {\r\n          // Construct the prompt with chat history\r\n          const chatHistory = messages.map(msg => ({\r\n            role: msg.sender === 'user' ? 'user' : 'model',\r\n            parts: [{ text: msg.text }]\r\n          }));\r\n          chatHistory.push({ role: \"user\", parts: [{ text: `You are a helpful AI assistant. Please respond to the following user message: \"${lastMessage.text}\"` }] });\r\n          \r\n          const payload = { contents: chatHistory };\r\n          const apiKey = \"\";\r\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n          \r\n          const response = await fetch(apiUrl, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(payload)\r\n          });\r\n\r\n          const result = await response.json();\r\n          let responseText = \"Sorry, I couldn't generate a response.\";\r\n          if (result.candidates && result.candidates.length > 0 &&\r\n              result.candidates[0].content && result.candidates[0].content.parts &&\r\n              result.candidates[0].content.parts.length > 0) {\r\n            responseText = result.candidates[0].content.parts[0].text;\r\n          }\r\n\r\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\r\n            text: responseText,\r\n            sender: 'bot',\r\n            timestamp: serverTimestamp(),\r\n          });\r\n        } catch (e) {\r\n          console.error(\"Error getting AI response:\", e);\r\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\r\n            text: `Sorry, I am having trouble processing that request. Error: ${e.message}`,\r\n            sender: 'bot',\r\n            timestamp: serverTimestamp(),\r\n          });\r\n        } finally {\r\n          setIsAIGenerating(false);\r\n        }\r\n      };\r\n      getAIResponse();\r\n    }\r\n  }, [messages, db, isAIGenerating, appId]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '' || !db || !userId || isAIGenerating) return;\r\n    try {\r\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\r\n      await addDoc(messagesCollectionRef, { \r\n        text: input, \r\n        sender: 'user', \r\n        timestamp: serverTimestamp(),\r\n        userId: userId // Add userId to the message for identification\r\n      });\r\n      setInput('');\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n      setError(`Failed to send message: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && input.trim() !== '' && !isAIGenerating) {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App bg-gray-100 dark:bg-gray-900 min-h-screen flex items-center justify-center p-4\">\r\n      <div className=\"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl\">\r\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700 rounded-t-2xl\">\r\n          <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">AI Chatbot</h1>\r\n          {userId && (\r\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n              User ID: <span className=\"font-mono\">{userId}</span>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"flex-grow p-4 overflow-y-auto space-y-4\">\r\n          {error ? (\r\n            <div className=\"flex justify-center items-center h-full text-red-500 font-medium text-center p-4\">\r\n              <p>{error}</p>\r\n            </div>\r\n          ) : isLoading ? (\r\n            <div className=\"flex justify-center items-center h-full\">\r\n              <span className=\"text-gray-500 dark:text-gray-400\">Loading messages...</span>\r\n            </div>\r\n          ) : messages.length === 0 ? (\r\n            <div className=\"flex justify-center items-center h-full\">\r\n              <span className=\"text-gray-500 dark:text-gray-400\">Start a new conversation!</span>\r\n            </div>\r\n          ) : (\r\n            messages.map((message, index) => (\r\n              <div key={index} className={`flex items-start gap-3 ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n                {message.sender === 'bot' && (\r\n                  <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-indigo-200 dark:bg-indigo-700\">\r\n                    <Bot size={16} className=\"text-indigo-600 dark:text-indigo-200\" />\r\n                  </div>\r\n                )}\r\n                <div className={`p-3 rounded-lg max-w-[70%] ${message.sender === 'user' ? 'bg-indigo-500 text-white dark:bg-indigo-600' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white'}`}>\r\n                  <p className=\"whitespace-pre-wrap\">{message.text}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n          {isAIGenerating && (\r\n            <div className=\"flex items-start gap-3 justify-start\">\r\n              <div className=\"p-3 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white max-w-[70%]\">\r\n                <Bot size={16} className=\"inline-block mr-2\" />\r\n                <div className=\"dot-flashing\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"relative flex items-center\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Type your message...\"\r\n              className=\"flex-grow rounded-full border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 px-4 py-2 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors\"\r\n              disabled={isAIGenerating}\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              disabled={isAIGenerating || input.trim() === '' || !userId}\r\n              className=\"ml-3 p-2 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:bg-gray-400 transition-colors\"\r\n            >\r\n              <SendHorizonal size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}