{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\AIChatbot.js\",\n  _s = $RefreshSig$();\n// This line tells ESLint to ignore the following global variables that are provided by the Canvas environment.\n/* global __app_id, __firebase_config, __initial_auth_token */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getAuth, onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\nimport { getFunctions, httpsCallable } from 'firebase/functions';\nimport { SendHorizonal, Bot } from 'lucide-react';\n\n// Use the global variables provided by the environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// The AIChatbot component with enhanced styling and functionality\nconst AIChatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [db, setDb] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Initialize Firebase and handle authentication\n  useEffect(() => {\n    const initFirebase = async () => {\n      try {\n        // Initialize the Firebase app instance\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\n        const firestoreDb = getFirestore(app);\n        const firestoreAuth = getAuth(app);\n        setDb(firestoreDb);\n\n        // Sign in using the provided custom token or anonymously if it's not available\n        onAuthStateChanged(firestoreAuth, async user => {\n          if (user) {\n            setUserId(user.uid);\n            console.log(`Successfully authenticated with user ID: ${user.uid}`);\n          } else if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(firestoreAuth, initialAuthToken);\n            } catch (error) {\n              console.error(\"Error signing in with custom token:\", error);\n              // Fallback to anonymous sign-in on token error\n              await signInAnonymously(firestoreAuth);\n            }\n          } else {\n            await signInAnonymously(firestoreAuth);\n          }\n          setIsAuthReady(true);\n        });\n      } catch (e) {\n        console.error(\"Error initializing Firebase:\", e);\n      }\n    };\n    initFirebase();\n  }, [initialAuthToken]);\n\n  // Fetch messages from Firestore in real-time\n  useEffect(() => {\n    // IMPORTANT: If you are getting a permissions error here, it means you have not\n    // deployed the firestore.rules file. Please follow the instructions in the README.md\n    // to deploy your security rules using the Firebase CLI.\n    if (db && isAuthReady && userId) {\n      console.log('Attempting to fetch messages. User is authenticated:', !!userId);\n      setIsLoading(true);\n      // Construct the collection path to ensure it's tied to the specific app instance\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\n      const q = query(messagesCollectionRef);\n      const unsubscribe = onSnapshot(q, snapshot => {\n        const fetchedMessages = snapshot.docs.map(doc => doc.data());\n        // Sort messages by timestamp to ensure correct order\n        const sortedMessages = fetchedMessages.sort((a, b) => {\n          var _a$timestamp, _b$timestamp;\n          return ((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.toMillis()) - ((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.toMillis());\n        });\n        setMessages(sortedMessages);\n        setIsLoading(false);\n      }, error => {\n        console.error(\"ERROR: Failed to fetch messages. This is very likely a Firestore permissions issue. Please check the README.md for instructions on how to deploy your security rules.\", error);\n        setIsLoading(false);\n      });\n      return () => unsubscribe();\n    }\n  }, [db, userId, isAuthReady, appId]);\n\n  // Use a separate useEffect to handle AI responses to user messages\n  useEffect(() => {\n    // Wait for the last message to be from the user and for the AI not to be currently generating\n    const lastMessage = messages[messages.length - 1];\n    if (db && lastMessage && lastMessage.sender === 'user' && !isAIGenerating) {\n      const userMessage = lastMessage.text;\n      const getAIResponse = async () => {\n        setIsAIGenerating(true);\n        try {\n          const functions = getFunctions(getApp());\n          // Call the Firebase Cloud Function to generate a response\n          const generateChatResponse = httpsCallable(functions, 'generateChatResponse');\n          const response = await generateChatResponse({\n            message: userMessage\n          });\n\n          // Add the AI's response to Firestore\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\n            text: response.data.text,\n            sender: 'bot',\n            timestamp: serverTimestamp()\n          });\n        } catch (e) {\n          console.error(\"Error calling Firebase Function:\", e);\n          // Handle the error by adding an error message to the chat\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\n            text: `Sorry, I am having trouble processing that request. Error: ${e.message}`,\n            sender: 'bot',\n            timestamp: serverTimestamp()\n          });\n        } finally {\n          setIsAIGenerating(false);\n        }\n      };\n      getAIResponse();\n    }\n  }, [messages, db, isAIGenerating, appId]);\n\n  // Scroll to the bottom of the message list whenever new messages arrive\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Function to send a user message\n  const sendMessage = async () => {\n    if (input.trim() === '' || !db || isAIGenerating) return;\n    try {\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\n      await addDoc(messagesCollectionRef, {\n        text: input,\n        sender: 'user',\n        timestamp: serverTimestamp()\n      });\n      setInput('');\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  };\n\n  // Handles 'Enter' key press to send messages\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && input.trim() !== '' && !isAIGenerating) {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-4 overflow-y-auto space-y-4\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400\",\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400\",\n          children: \"Start a new conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-start gap-3 ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-3 rounded-lg max-w-[70%] ${message.sender === 'user' ? 'bg-indigo-500 text-white dark:bg-indigo-600' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white'}`,\n          children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(Bot, {\n            size: 16,\n            className: \"inline-block mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"whitespace-pre-wrap\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start gap-3 justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white max-w-[70%]\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 16,\n            className: \"inline-block mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot-flashing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-200 dark:border-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          className: \"flex-grow rounded-full border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 px-4 py-2 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors\",\n          disabled: isAIGenerating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: isAIGenerating || input.trim() === '',\n          className: \"ml-3 p-2 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:bg-gray-400 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(SendHorizonal, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatbot, \"sgjyR7XmEAbhpTeJAcf1mxsu4Hs=\");\n_c = AIChatbot;\nexport default AIChatbot;\nvar _c;\n$RefreshReg$(_c, \"AIChatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAuth","onAuthStateChanged","signInAnonymously","signInWithCustomToken","initializeApp","getApps","getApp","getFirestore","collection","addDoc","serverTimestamp","query","onSnapshot","getFunctions","httpsCallable","SendHorizonal","Bot","jsxDEV","_jsxDEV","appId","__app_id","firebaseConfig","JSON","parse","__firebase_config","initialAuthToken","__initial_auth_token","AIChatbot","_s","input","setInput","messages","setMessages","db","setDb","userId","setUserId","isAuthReady","setIsAuthReady","isLoading","setIsLoading","isAIGenerating","setIsAIGenerating","messagesEndRef","initFirebase","app","length","firestoreDb","firestoreAuth","user","uid","console","log","error","e","messagesCollectionRef","q","unsubscribe","snapshot","fetchedMessages","docs","map","doc","data","sortedMessages","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","lastMessage","sender","userMessage","text","getAIResponse","functions","generateChatResponse","response","message","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","handleKeyPress","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","size","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/AIChatbot.js"],"sourcesContent":["// This line tells ESLint to ignore the following global variables that are provided by the Canvas environment.\r\n/* global __app_id, __firebase_config, __initial_auth_token */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { getAuth, onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\r\nimport { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\r\nimport { getFunctions, httpsCallable } from 'firebase/functions';\r\nimport { SendHorizonal, Bot } from 'lucide-react';\r\n\r\n// Use the global variables provided by the environment\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// The AIChatbot component with enhanced styling and functionality\r\nconst AIChatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [db, setDb] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Initialize Firebase and handle authentication\r\n  useEffect(() => {\r\n    const initFirebase = async () => {\r\n      try {\r\n        // Initialize the Firebase app instance\r\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\r\n        const firestoreDb = getFirestore(app);\r\n        const firestoreAuth = getAuth(app);\r\n        \r\n        setDb(firestoreDb);\r\n\r\n        // Sign in using the provided custom token or anonymously if it's not available\r\n        onAuthStateChanged(firestoreAuth, async (user) => {\r\n            if (user) {\r\n                setUserId(user.uid);\r\n                console.log(`Successfully authenticated with user ID: ${user.uid}`);\r\n            } else if (initialAuthToken) {\r\n                try {\r\n                    await signInWithCustomToken(firestoreAuth, initialAuthToken);\r\n                } catch (error) {\r\n                    console.error(\"Error signing in with custom token:\", error);\r\n                    // Fallback to anonymous sign-in on token error\r\n                    await signInAnonymously(firestoreAuth);\r\n                }\r\n            } else {\r\n                await signInAnonymously(firestoreAuth);\r\n            }\r\n            setIsAuthReady(true);\r\n        });\r\n      } catch (e) {\r\n        console.error(\"Error initializing Firebase:\", e);\r\n      }\r\n    };\r\n    initFirebase();\r\n  }, [initialAuthToken]);\r\n\r\n  // Fetch messages from Firestore in real-time\r\n  useEffect(() => {\r\n    // IMPORTANT: If you are getting a permissions error here, it means you have not\r\n    // deployed the firestore.rules file. Please follow the instructions in the README.md\r\n    // to deploy your security rules using the Firebase CLI.\r\n    if (db && isAuthReady && userId) {\r\n      console.log('Attempting to fetch messages. User is authenticated:', !!userId);\r\n      setIsLoading(true);\r\n      // Construct the collection path to ensure it's tied to the specific app instance\r\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\r\n      const q = query(messagesCollectionRef);\r\n\r\n      const unsubscribe = onSnapshot(q, (snapshot) => {\r\n        const fetchedMessages = snapshot.docs.map(doc => doc.data());\r\n        // Sort messages by timestamp to ensure correct order\r\n        const sortedMessages = fetchedMessages.sort((a, b) => a.timestamp?.toMillis() - b.timestamp?.toMillis());\r\n        setMessages(sortedMessages);\r\n        setIsLoading(false);\r\n      }, (error) => {\r\n        console.error(\"ERROR: Failed to fetch messages. This is very likely a Firestore permissions issue. Please check the README.md for instructions on how to deploy your security rules.\", error);\r\n        setIsLoading(false);\r\n      });\r\n      \r\n      return () => unsubscribe();\r\n    }\r\n  }, [db, userId, isAuthReady, appId]);\r\n\r\n  // Use a separate useEffect to handle AI responses to user messages\r\n  useEffect(() => {\r\n    // Wait for the last message to be from the user and for the AI not to be currently generating\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (db && lastMessage && lastMessage.sender === 'user' && !isAIGenerating) {\r\n      const userMessage = lastMessage.text;\r\n      const getAIResponse = async () => {\r\n        setIsAIGenerating(true);\r\n        try {\r\n          const functions = getFunctions(getApp());\r\n          // Call the Firebase Cloud Function to generate a response\r\n          const generateChatResponse = httpsCallable(functions, 'generateChatResponse');\r\n          const response = await generateChatResponse({ message: userMessage });\r\n          \r\n          // Add the AI's response to Firestore\r\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\r\n            text: response.data.text,\r\n            sender: 'bot',\r\n            timestamp: serverTimestamp(),\r\n          });\r\n        } catch (e) {\r\n          console.error(\"Error calling Firebase Function:\", e);\r\n          // Handle the error by adding an error message to the chat\r\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\r\n            text: `Sorry, I am having trouble processing that request. Error: ${e.message}`,\r\n            sender: 'bot',\r\n            timestamp: serverTimestamp(),\r\n          });\r\n        } finally {\r\n          setIsAIGenerating(false);\r\n        }\r\n      };\r\n      getAIResponse();\r\n    }\r\n  }, [messages, db, isAIGenerating, appId]);\r\n\r\n  // Scroll to the bottom of the message list whenever new messages arrive\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Function to send a user message\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '' || !db || isAIGenerating) return;\r\n    try {\r\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\r\n      await addDoc(messagesCollectionRef, { \r\n        text: input, \r\n        sender: 'user', \r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setInput('');\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n  };\r\n\r\n  // Handles 'Enter' key press to send messages\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && input.trim() !== '' && !isAIGenerating) {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl\">\r\n      <div className=\"flex-grow p-4 overflow-y-auto space-y-4\">\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <span className=\"text-gray-500 dark:text-gray-400\">Loading messages...</span>\r\n          </div>\r\n        ) : messages.length === 0 ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <span className=\"text-gray-500 dark:text-gray-400\">Start a new conversation!</span>\r\n          </div>\r\n        ) : (\r\n          messages.map((message, index) => (\r\n            <div key={index} className={`flex items-start gap-3 ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n              <div className={`p-3 rounded-lg max-w-[70%] ${message.sender === 'user' ? 'bg-indigo-500 text-white dark:bg-indigo-600' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white'}`}>\r\n                {message.sender === 'bot' && <Bot size={16} className=\"inline-block mr-2\" />}\r\n                <p className=\"whitespace-pre-wrap\">{message.text}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        {isAIGenerating && (\r\n          <div className=\"flex items-start gap-3 justify-start\">\r\n            <div className=\"p-3 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white max-w-[70%]\">\r\n              <Bot size={16} className=\"inline-block mr-2\" />\r\n              <div className=\"dot-flashing\"></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\r\n        <div className=\"relative flex items-center\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-grow rounded-full border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 px-4 py-2 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors\"\r\n            disabled={isAIGenerating}\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            disabled={isAIGenerating || input.trim() === ''}\r\n            className=\"ml-3 p-2 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:bg-gray-400 transition-colors\"\r\n          >\r\n            <SendHorizonal size={20} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}