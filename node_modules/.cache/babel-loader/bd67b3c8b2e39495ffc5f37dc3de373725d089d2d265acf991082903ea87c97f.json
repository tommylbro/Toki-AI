{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token, marked */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, limit } from 'firebase/firestore';\nimport { createPortal } from 'react-dom';\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus, Play, Pause, Mic, Settings, Volume2, PenTool } from 'lucide-react';\n\n// --- Firebase Configuration ---\n// The global variables are provided by the Canvas environment.\n// We fall back to a local config for development purposes if they are not defined.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Utility function for generating unique IDs (like conversation IDs)\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\n// Converts a base64 string to an ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// Converts PCM audio data to a WAV blob\nfunction pcmToWav(pcmData, sampleRate) {\n  const pcm16 = new Int16Array(pcmData);\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\n  const view = new DataView(buffer);\n  const writeString = (view, offset, string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n  let offset = 0;\n  writeString(view, offset, 'RIFF');\n  offset += 4;\n  view.setUint32(offset, 36 + pcm16.length * 2, true);\n  offset += 4;\n  writeString(view, offset, 'WAVE');\n  offset += 4;\n  writeString(view, offset, 'fmt ');\n  offset += 4;\n  view.setUint32(offset, 16, true);\n  offset += 4; // Sub-chunk size\n  view.setUint16(offset, 1, true);\n  offset += 2; // Audio format (1 = PCM)\n  view.setUint16(offset, 1, true);\n  offset += 2; // Number of channels\n  view.setUint32(offset, sampleRate, true);\n  offset += 4; // Sample rate\n  view.setUint32(offset, sampleRate * 2, true);\n  offset += 4; // Byte rate\n  view.setUint16(offset, 2, true);\n  offset += 2; // Block align\n  view.setUint16(offset, 16, true);\n  offset += 2; // Bits per sample\n  writeString(view, offset, 'data');\n  offset += 4;\n  view.setUint32(offset, pcm16.length * 2, true);\n  offset += 4; // Data size\n\n  for (let i = 0; i < pcm16.length; i++) {\n    view.setInt16(offset, pcm16[i], true);\n    offset += 2;\n  }\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\n\n// Prebuilt voices available for TTS\nconst prebuiltVoices = ['Kore', 'Puck', 'Charon', 'Fenrir', 'Leda', 'Orus', 'Aoede', 'Callirrhoe', 'Autonoe', 'Enceladus', 'Iapetus', 'Umbriel', 'Algieba', 'Despina', 'Erinome', 'Algenib', 'Rasalgethi', 'Laomedeia', 'Achernar', 'Alnilam', 'Schedar', 'Gacrux', 'Pulcherrima', 'Achird', 'Zubenelgenubi', 'Vindemiatrix', 'Sadachbia', 'Sadaltager', 'Sulafat'];\n\n// The main App component\nfunction App() {\n  _s();\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [authMode, setAuthMode] = useState('email-link');\n\n  // New states for conversation history and sidebar\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [voiceName, setVoiceName] = useState('Kore');\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  // New states for Gemini features\n  const [systemInstruction, setSystemInstruction] = useState('');\n  const [generationSettings, setGenerationSettings] = useState({\n    temperature: 0.9,\n    topK: 40,\n    topP: 0.95\n  });\n  const [showGeminiModal, setShowGeminiModal] = useState(false);\n  const [translationTargetLanguage, setTranslationTargetLanguage] = useState('English');\n  const [textToContinue, setTextToContinue] = useState('');\n  const [textToTranslate, setTextToTranslate] = useState('');\n\n  // New state for the creative writing feature\n  const [showCreativeWriterModal, setShowCreativeWriterModal] = useState(false);\n  const [creativeTopic, setCreativeTopic] = useState('');\n  const [creativeStyle, setCreativeStyle] = useState('Poem');\n  const [creativeTone, setCreativeTone] = useState('Neutral');\n  const messagesEndRef = useRef(null);\n  const audioRef = useRef(null);\n  const currentAudioIdRef = useRef(null);\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Exponential backoff utility for API calls\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n      }\n      return response;\n    } catch (error) {\n      if (retries > 0 && error.message.includes(\"API error\")) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n      }\n      throw error;\n    }\n  };\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          setUser(currentUser);\n          setIsAuthReady(true);\n          setError(null);\n        } else {\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            try {\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n          setIsAuthReady(true);\n        }\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n      if (!storedEmail) {\n        // Using a custom modal instead of prompt\n        const modalDiv = document.createElement('div');\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\n        modalDiv.innerHTML = `\n          <div class=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg max-w-sm w-full\">\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\n          </div>\n        `;\n        document.body.appendChild(modalDiv);\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\n        emailConfirmButton.onclick = () => {\n          storedEmail = emailConfirmInput.value;\n          if (storedEmail) {\n            document.body.removeChild(modalDiv);\n            continueSignIn(storedEmail);\n          } else {\n            console.error(\"Email not provided. Please try again.\");\n          }\n        };\n        const continueSignIn = emailToUse => {\n          signInWithEmailLink(auth, emailToUse, window.location.href).then(result => {\n            window.localStorage.removeItem('emailForSignIn');\n            setUser(result.user);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            setError(null);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          }).catch(error => {\n            setError(`Error completing sign-in with link: ${error.message}`);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          });\n        };\n        return; // Exit the effect to wait for user input\n      }\n      signInWithEmailLink(auth, storedEmail, window.location.href).then(result => {\n        window.localStorage.removeItem('emailForSignIn');\n        setUser(result.user);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        setError(null);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }).catch(error => {\n        setError(`Error completing sign-in with link: ${error.message}`);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      });\n    }\n  }, [auth, isAuthReady]);\n\n  // 3. Fetch conversations for the current user.\n  useEffect(() => {\n    if (!db || !user || !isAuthReady) return;\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const unsubscribe = onSnapshot(conversationsCollectionRef, querySnapshot => {\n      const fetchedConversations = [];\n      querySnapshot.forEach(doc => {\n        fetchedConversations.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedConversations.sort((a, b) => {\n        var _b$lastUpdated, _a$lastUpdated;\n        return (((_b$lastUpdated = b.lastUpdated) === null || _b$lastUpdated === void 0 ? void 0 : _b$lastUpdated.seconds) || 0) - (((_a$lastUpdated = a.lastUpdated) === null || _a$lastUpdated === void 0 ? void 0 : _a$lastUpdated.seconds) || 0);\n      });\n      setConversations(fetchedConversations);\n      if (!currentConversationId && fetchedConversations.length > 0) {\n        setCurrentConversationId(fetchedConversations[0].id);\n      } else if (fetchedConversations.length === 0) {\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }, firestoreError => {\n      setError(`Failed to load conversations: ${firestoreError.message}`);\n      console.error(\"Firestore conversations error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, isAuthReady, appId, currentConversationId]);\n\n  // 4. Fetch messages for the current conversation.\n  useEffect(() => {\n    if (!db || !user || !currentConversationId) {\n      setMessages([]); // Clear messages if no conversation is selected\n      return;\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n    const unsubscribe = onSnapshot(messagesCollectionRef, querySnapshot => {\n      const fetchedMessages = [];\n      querySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedMessages.sort((a, b) => {\n        var _a$timestamp, _b$timestamp;\n        return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.seconds) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.seconds) || 0);\n      });\n      setMessages(fetchedMessages);\n    }, firestoreError => {\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\n      console.error(\"Firestore messages error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, currentConversationId, appId]);\n\n  // 5. Start a new conversation.\n  const startNewChat = async () => {\n    if (!db || !user) {\n      setError(\"You must be logged in to start a new chat.\");\n      return;\n    }\n    setMessages([]);\n    setNewMessage('');\n    setSelectedImage(null);\n    setError(null);\n    setIsAIGenerating(false);\n    setIsSummarizing(false);\n    setIsGeneratingImage(false);\n    try {\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef);\n      const newConvId = newConversationDocRef.id;\n      await setDoc(newConversationDocRef, {\n        title: 'New Chat',\n        createdAt: serverTimestamp(),\n        lastUpdated: serverTimestamp()\n      });\n      setCurrentConversationId(newConvId);\n      setIsSidebarOpen(false);\n    } catch (e) {\n      setError(`Failed to create a new chat: ${e.message}`);\n      console.error(\"Error creating new conversation:\", e);\n    }\n  };\n\n  // 6. Handle sending a new message (and creating a new conversation if needed).\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() && !selectedImage || !user || !db || isAIGenerating || isSpeaking) return;\n    let conversationIdToUse = currentConversationId;\n    const userMessageText = newMessage;\n    const imageToSend = selectedImage;\n    setNewMessage('');\n    setSelectedImage(null);\n    const command = userMessageText.toLowerCase().trim();\n\n    // If no conversation is active, create a new one.\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      const initialTitle = userMessageText ? userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '') : 'New chat with image';\n      try {\n        await setDoc(newConversationDocRef, {\n          title: initialTitle,\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId);\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        console.error(\"Error creating new conversation:\", createError);\n        return;\n      }\n    } else {\n      // Otherwise, just update the lastUpdated timestamp of the current conversation.\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\n      try {\n        await setDoc(conversationDocRef, {\n          lastUpdated: serverTimestamp()\n        }, {\n          merge: true\n        });\n      } catch (updateError) {\n        console.error(\"Error updating conversation timestamp:\", updateError);\n      }\n    }\n\n    // Add user message to Firestore\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: userMessageText,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message',\n        imageData: imageToSend\n      });\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n      return;\n    }\n    if (imageToSend) {\n      handleImageAnalysis(userMessageText, imageToSend, conversationIdToUse);\n    } else if (command.startsWith('image of')) {\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\n      handleGenerateImage(imagePrompt, conversationIdToUse);\n    } else {\n      handleAIResponse(userMessageText, conversationIdToUse);\n    }\n  };\n\n  // Function to handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // 7. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const actionCodeSettings = {\n      url: window.location.origin,\n      handleCodeInApp: true\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email);\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Registration failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 9. Handle Email/Password Login\n  const handleEmailPasswordLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Login failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 10. Handle Logout\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUser(null);\n      setMessages([]);\n      setConversations([]);\n      setCurrentConversationId(null);\n      setEmailSent(false);\n      setIsSigningInWithLink(false);\n      setAuthMode('email-link');\n      setError(null);\n    } catch (error) {\n      setError(`Logout failed: ${error.message}`);\n    }\n  };\n\n  // 11. Handle summarization of the current chat using the Gemini API\n  const handleSummarizeChat = async () => {\n    const conversationId = currentConversationId;\n    if (!conversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsSummarizing(true);\n    setError(null);\n    setShowGeminiModal(false);\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    const summarizeMessageRef = doc(messagesCollectionRef);\n    try {\n      // Add a placeholder message for the AI response\n      await setDoc(summarizeMessageRef, {\n        text: 'Summarizing...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n      const chatHistoryText = messages.filter(msg => msg.type === 'user-message' || msg.type === 'ai-response').map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`).join('\\n');\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\n      const chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }];\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      if (systemInstruction) {\n        payload.systemInstruction = {\n          parts: [{\n            text: systemInstruction\n          }]\n        };\n      }\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a summary.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await setDoc(summarizeMessageRef, {\n        text: responseText,\n        type: 'ai-response'\n      }, {\n        merge: true\n      });\n    } catch (error) {\n      console.error(\"Error summarizing chat:\", error);\n      await setDoc(summarizeMessageRef, {\n        text: `An error occurred while summarizing. Error: ${error.message}`\n      }, {\n        merge: true\n      });\n      setError(`Summarization error: ${error.message}`);\n    } finally {\n      setIsSummarizing(false);\n    }\n  };\n\n  // 12. Handle image generation from a text prompt using the Gemini API\n  const handleGenerateImage = async imagePrompt => {\n    const conversationId = currentConversationId;\n    if (!conversationId || isAIGenerating || isGeneratingImage || isSummarizing) return;\n    setIsGeneratingImage(true);\n    setError(null);\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    const imageMessageRef = doc(messagesCollectionRef);\n    try {\n      // Add a placeholder message for the AI response\n      await setDoc(imageMessageRef, {\n        text: 'Generating image...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n      const payload = {\n        instances: {\n          prompt: imagePrompt\n        },\n        parameters: {\n          \"sampleCount\": 1\n        }\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let imageUrl = null;\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n        imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n      } else {\n        setError('Image generation failed. No image data received.');\n        await setDoc(imageMessageRef, {\n          text: `An error occurred while generating the image. Error: No image data received.`\n        }, {\n          merge: true\n        });\n      }\n      if (imageUrl) {\n        await setDoc(imageMessageRef, {\n          text: `Image generated for prompt: \"${imagePrompt}\"`,\n          type: 'ai-image-response',\n          imageUrl: imageUrl\n        }, {\n          merge: true\n        });\n      } else {\n        await setDoc(imageMessageRef, {\n          text: `An error occurred while generating the image.`\n        }, {\n          merge: true\n        });\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      await setDoc(imageMessageRef, {\n        text: `An error occurred while generating the image. Error: ${error.message}`\n      }, {\n        merge: true\n      });\n      setError(`Image generation error: ${error.message}`);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // 13. Handle image analysis using the Gemini API\n  const handleImageAnalysis = async (userMessageText, imageData, conversationId) => {\n    if (!conversationId || isAIGenerating || isGeneratingImage || isSummarizing) return;\n    setIsAIGenerating(true);\n    setError(null);\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    const aiMessageRef = doc(messagesCollectionRef);\n    try {\n      // Add a placeholder message for the AI response\n      await setDoc(aiMessageRef, {\n        text: 'Analyzing image...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n\n      // Split the base64 string to get only the data part\n      const base64ImageData = imageData.split(',')[1];\n      const chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: userMessageText\n        }, {\n          inlineData: {\n            mimeType: \"image/png\",\n            data: base64ImageData\n          }\n        }]\n      }];\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      if (systemInstruction) {\n        payload.systemInstruction = {\n          parts: [{\n            text: systemInstruction\n          }]\n        };\n      }\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't analyze that image.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await setDoc(aiMessageRef, {\n        text: responseText,\n        type: 'ai-response'\n      }, {\n        merge: true\n      });\n    } catch (error) {\n      console.error(\"Error analyzing image:\", error);\n      await setDoc(aiMessageRef, {\n        text: `An error occurred while analyzing the image. Error: ${error.message}`\n      }, {\n        merge: true\n      });\n      setError(`Image analysis error: ${error.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // 14. Handle general AI text response using the Gemini API\n  const handleAIResponse = async (userMessageText, conversationId) => {\n    if (!conversationId || isAIGenerating || isGeneratingImage || isSummarizing) return;\n    setIsAIGenerating(true);\n    setError(null);\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    const aiMessageRef = doc(messagesCollectionRef);\n    try {\n      // Add a placeholder message for the AI response\n      await setDoc(aiMessageRef, {\n        text: '...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n      const chatHistory = messages.map(msg => ({\n        role: msg.type === 'user-message' ? 'user' : 'model',\n        parts: [{\n          text: msg.text\n        }]\n      }));\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: userMessageText\n        }]\n      });\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      if (systemInstruction) {\n        payload.systemInstruction = {\n          parts: [{\n            text: systemInstruction\n          }]\n        };\n      }\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a response.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await setDoc(aiMessageRef, {\n        text: responseText,\n        type: 'ai-response'\n      }, {\n        merge: true\n      });\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      await setDoc(aiMessageRef, {\n        text: `An error occurred while getting a response. Error: ${error.message}`\n      }, {\n        merge: true\n      });\n      setError(`AI response error: ${error.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // 15. Handle text-to-speech\n  const handleTextToSpeech = async (text, messageId) => {\n    if (isSpeaking) {\n      if (currentAudioIdRef.current === messageId) {\n        audioRef.current.pause();\n        setIsSpeaking(false);\n        currentAudioIdRef.current = null;\n      } else {\n        audioRef.current.pause();\n        setIsSpeaking(true);\n        currentAudioIdRef.current = messageId;\n        generateAndPlayAudio(text);\n      }\n    } else {\n      setIsSpeaking(true);\n      currentAudioIdRef.current = messageId;\n      generateAndPlayAudio(text);\n    }\n  };\n  const generateAndPlayAudio = async text => {\n    try {\n      var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _part$inlineData, _part$inlineData2;\n      const payload = {\n        contents: [{\n          parts: [{\n            text: text\n          }]\n        }],\n        generationConfig: {\n          responseModalities: [\"AUDIO\"],\n          speechConfig: {\n            voiceConfig: {\n              prebuiltVoiceConfig: {\n                voiceName: voiceName\n              }\n            }\n          }\n        },\n        model: \"gemini-2.5-flash-preview-tts\"\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const part = result === null || result === void 0 ? void 0 : (_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : _result$candidates$$c2[0];\n      const audioData = part === null || part === void 0 ? void 0 : (_part$inlineData = part.inlineData) === null || _part$inlineData === void 0 ? void 0 : _part$inlineData.data;\n      const mimeType = part === null || part === void 0 ? void 0 : (_part$inlineData2 = part.inlineData) === null || _part$inlineData2 === void 0 ? void 0 : _part$inlineData2.mimeType;\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\n        const sampleRateMatch = mimeType.match(/rate=(\\d+)/);\n        const sampleRate = sampleRateMatch ? parseInt(sampleRateMatch[1], 10) : 16000;\n        const pcmData = base64ToArrayBuffer(audioData);\n        const wavBlob = pcmToWav(pcmData, sampleRate);\n        const audioUrl = URL.createObjectURL(wavBlob);\n        if (audioRef.current) {\n          audioRef.current.src = audioUrl;\n          audioRef.current.play();\n          audioRef.current.onended = () => {\n            setIsSpeaking(false);\n            currentAudioIdRef.current = null;\n          };\n        }\n      } else {\n        console.error(\"TTS failed: No audio data received.\");\n        setError(\"TTS failed: No audio data received.\");\n        setIsSpeaking(false);\n        currentAudioIdRef.current = null;\n      }\n    } catch (error) {\n      console.error(\"Error with TTS:\", error);\n      setError(`TTS error: ${error.message}`);\n      setIsSpeaking(false);\n      currentAudioIdRef.current = null;\n    }\n  };\n\n  // 16. Handle creative writing requests\n  const handleCreativeWriting = async (topic, style, tone) => {\n    setShowCreativeWriterModal(false);\n    if (!creativeTopic || isAIGenerating) return;\n    const conversationId = currentConversationId || generateId();\n    setIsAIGenerating(true);\n    setError(null);\n    if (!currentConversationId) {\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, conversationId);\n      await setDoc(newConversationDocRef, {\n        title: topic.substring(0, 50) + (topic.length > 50 ? '...' : ''),\n        createdAt: serverTimestamp(),\n        lastUpdated: serverTimestamp()\n      });\n      setCurrentConversationId(conversationId);\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    const userMessageRef = doc(messagesCollectionRef);\n    await setDoc(userMessageRef, {\n      text: `Creative writing request: Topic: ${topic}, Style: ${style}, Tone: ${tone}`,\n      userId: user.uid,\n      userName: `User_${user.uid.substring(0, 5)}`,\n      timestamp: serverTimestamp(),\n      type: 'user-message'\n    });\n    const aiMessageRef = doc(messagesCollectionRef);\n    try {\n      await setDoc(aiMessageRef, {\n        text: 'Writing...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n      const prompt = `Write a creative piece on the topic \"${topic}\". The style should be a ${style} and the tone should be ${tone}.`;\n      const chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }];\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      if (systemInstruction) {\n        payload.systemInstruction = {\n          parts: [{\n            text: systemInstruction\n          }]\n        };\n      }\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't write that piece.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await setDoc(aiMessageRef, {\n        text: responseText,\n        type: 'ai-response'\n      }, {\n        merge: true\n      });\n    } catch (error) {\n      console.error(\"Error with creative writing:\", error);\n      await setDoc(aiMessageRef, {\n        text: `An error occurred while writing. Error: ${error.message}`\n      }, {\n        merge: true\n      });\n      setError(`Creative writing error: ${error.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // Helper component for the modal\n  const Modal = ({\n    title,\n    children,\n    onClose\n  }) => {\n    const modalContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-[100] flex items-center justify-center bg-gray-900 bg-opacity-50 dark:bg-opacity-75 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-2xl shadow-xl w-full max-w-lg p-6 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"absolute top-4 right-4 p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"w-5 h-5 text-gray-700 dark:text-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-gray-900 dark:text-gray-100\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/createPortal(modalContent, document.body);\n  };\n\n  // UI components\n  const AuthUI = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center p-8 bg-gray-50 dark:bg-gray-900 rounded-2xl shadow-lg w-full max-w-sm mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-900 dark:text-gray-100\",\n      children: \"AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAuthMode('email-link'),\n        className: `py-2 px-4 rounded-lg text-sm font-medium transition-colors ${authMode === 'email-link' ? 'bg-indigo-600 text-white shadow-md' : 'bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600'}`,\n        children: \"Email Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAuthMode('email-password'),\n        className: `py-2 px-4 rounded-lg text-sm font-medium transition-colors ${authMode === 'email-password' ? 'bg-indigo-600 text-white shadow-md' : 'bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600'}`,\n        children: \"Email/Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 7\n    }, this), authMode === 'email-link' ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendSignInLink,\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\",\n        className: \"w-full p-3 mb-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-indigo-600 text-white p-3 rounded-lg shadow-md hover:bg-indigo-700 transition-colors duration-200 font-bold\",\n        disabled: emailSent,\n        children: emailSent ? 'Link Sent! Check your email.' : 'Send Sign-in Link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEmailPasswordLogin,\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          className: \"w-full p-3 mb-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: \"w-full p-3 mb-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-indigo-600 text-white p-3 rounded-lg shadow-md hover:bg-indigo-700 transition-colors duration-200 font-bold\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center text-sm text-gray-600 dark:text-gray-400\",\n        children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEmailPasswordSignUp,\n          className: \"ml-1 text-indigo-600 hover:text-indigo-500 font-bold\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1040,\n    columnNumber: 5\n  }, this);\n  const Message = ({\n    text,\n    type,\n    isLast,\n    imageUrl\n  }) => {\n    const isUser = type === 'user-message';\n    const isImage = type === 'ai-image-response';\n    const isAi = !isUser && !isImage;\n    const messageClass = isUser ? \"bg-indigo-500 text-white self-end rounded-br-none\" : isImage ? \"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 self-start rounded-bl-none\" : \"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 self-start rounded-bl-none\";\n    const isPending = isAi && isLast && (isAIGenerating || isSummarizing || isGeneratingImage);\n    const messageText = isPending ? '...' : text;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col mb-4 p-4 rounded-3xl max-w-[80%] break-words shadow-sm ${messageClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 text-sm font-semibold mb-2\",\n        children: isUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            className: \"w-4 h-4 text-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700 dark:text-gray-300\",\n            children: \"AI Chatbot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 9\n      }, this), isImage && imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 rounded-xl overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: imageUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: text,\n            className: \"w-full h-auto rounded-xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-end p-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 text-xs\",\n            children: [\"View full image \", /*#__PURE__*/_jsxDEV(ExternalLink, {\n              className: \"w-3 h-3 ml-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 11\n      }, this), isImage && !imageUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 dark:text-gray-300\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 11\n      }, this), !isImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prose dark:prose-invert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"markdown-body\",\n          dangerouslySetInnerHTML: {\n            __html: marked.parse(messageText)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 11\n      }, this), isAi && text && !isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTextToSpeech(text, message.id),\n          className: \"text-gray-500 dark:text-gray-400 hover:text-indigo-500 transition-colors\",\n          children: isSpeaking && currentAudioIdRef.current === message.id ? /*#__PURE__*/_jsxDEV(Pause, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 73\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 105\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 7\n    }, this);\n  };\n  const ChatUI = () => {\n    var _conversations$find;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 shadow-sm bg-white dark:bg-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"p-2 text-gray-500 dark:text-gray-400 hover:text-indigo-500 lg:hidden\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold\",\n          children: ((_conversations$find = conversations.find(conv => conv.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || 'New Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [user && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 dark:text-gray-400 hidden sm:block\",\n            children: [\"User ID: \", user.uid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSettingsModal(true),\n            className: \"p-2 text-gray-500 dark:text-gray-400 hover:text-indigo-500\",\n            children: /*#__PURE__*/_jsxDEV(Settings, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"p-2 text-sm text-red-500 hover:text-red-700 transition-colors font-semibold\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 overflow-hidden flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static fixed inset-y-0 left-0 z-40 w-64 bg-gray-100 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 flex flex-col`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 flex items-center justify-between border-b border-gray-200 dark:border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold\",\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1209,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startNewChat,\n              className: \"p-2 text-indigo-500 hover:text-indigo-700\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"flex-1 overflow-y-auto p-2 space-y-2\",\n            children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setCurrentConversationId(conv.id),\n                className: `block w-full text-left p-3 rounded-lg transition-colors duration-200 truncate ${currentConversationId === conv.id ? 'bg-indigo-500 text-white' : 'bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600'}`,\n                children: conv.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 17\n              }, this)\n            }, conv.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1216,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex flex-col p-4 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n              text: message.text,\n              type: message.type,\n              isLast: index === messages.length - 1,\n              imageUrl: message.imageUrl\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1230,\n              columnNumber: 15\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\",\n            children: [selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedImage,\n                alt: \"Selected\",\n                className: \"max-h-32 object-contain rounded-xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedImage(null),\n                className: \"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 shadow-md hover:bg-red-600 transition-colors\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1252,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                className: \"flex-1 p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n                placeholder: \"Type a message or command...\",\n                disabled: isAIGenerating || isSummarizing || isGeneratingImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1257,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"cursor-pointer p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: handleImageUpload,\n                  className: \"hidden\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1265,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n                disabled: !newMessage.trim() && !selectedImage || isAIGenerating || isSummarizing || isGeneratingImage,\n                children: isAIGenerating || isSummarizing || isGeneratingImage ? /*#__PURE__*/_jsxDEV(LoaderCircle, {\n                  className: \"animate-spin w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1280,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/_jsxDEV(MessageSquareMore, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1227,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 7\n      }, this), showSettingsModal && /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Advanced Settings\",\n        onClose: () => setShowSettingsModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mt-4\",\n            children: \"Gemini API Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium mb-1\",\n              children: \"System Instruction (Custom Persona)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: systemInstruction,\n              onChange: e => setSystemInstruction(e.target.value),\n              placeholder: \"e.g., 'You are a friendly pirate, answering all questions in pirate jargon.'\",\n              className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-1\",\n                children: \"Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: generationSettings.temperature,\n                onChange: e => setGenerationSettings({\n                  ...generationSettings,\n                  temperature: parseFloat(e.target.value)\n                }),\n                min: \"0\",\n                max: \"1\",\n                step: \"0.01\",\n                className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-1\",\n                children: \"Top K\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: generationSettings.topK,\n                onChange: e => setGenerationSettings({\n                  ...generationSettings,\n                  topK: parseInt(e.target.value, 10)\n                }),\n                min: \"1\",\n                className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-1\",\n                children: \"Top P\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: generationSettings.topP,\n                onChange: e => setGenerationSettings({\n                  ...generationSettings,\n                  topP: parseFloat(e.target.value)\n                }),\n                min: \"0\",\n                max: \"1\",\n                step: \"0.01\",\n                className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mt-4\",\n            children: \"TTS Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium mb-1\",\n              children: \"Voice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: voiceName,\n              onChange: e => setVoiceName(e.target.value),\n              className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              children: prebuiltVoices.map(voice => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: voice,\n                children: voice\n              }, voice, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1346,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 9\n      }, this), showGeminiModal && /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Creative Tools\",\n        onClose: () => setShowGeminiModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mt-4\",\n            children: \"Summarize Current Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"Summarize the entire conversation history into a single, concise response.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSummarizeChat,\n            className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n            disabled: isSummarizing || isAIGenerating || isGeneratingImage,\n            children: isSummarizing ? /*#__PURE__*/_jsxDEV(LoaderCircle, {\n              className: \"animate-spin w-5 h-5 mx-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 17\n            }, this) : 'Summarize'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mt-4\",\n            children: \"Creative Writer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleCreativeWriting(creativeTopic, creativeStyle, creativeTone);\n            },\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium mb-1\",\n                children: \"Topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: creativeTopic,\n                onChange: e => setCreativeTopic(e.target.value),\n                placeholder: \"e.g., 'a robot discovering nature'\",\n                className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium mb-1\",\n                  children: \"Style\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: creativeStyle,\n                  onChange: e => setCreativeStyle(e.target.value),\n                  className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Poem\",\n                    children: \"Poem\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1394,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Short Story\",\n                    children: \"Short Story\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1395,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Song Lyrics\",\n                    children: \"Song Lyrics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1396,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Essay\",\n                    children: \"Essay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1397,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-sm font-medium mb-1\",\n                  children: \"Tone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1401,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: creativeTone,\n                  onChange: e => setCreativeTone(e.target.value),\n                  className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Neutral\",\n                    children: \"Neutral\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1407,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Happy\",\n                    children: \"Happy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1408,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Sad\",\n                    children: \"Sad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1409,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Excited\",\n                    children: \"Excited\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1410,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Serious\",\n                    children: \"Serious\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1411,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1402,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1400,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n              disabled: isAIGenerating || isSummarizing || isGeneratingImage,\n              children: isAIGenerating ? /*#__PURE__*/_jsxDEV(LoaderCircle, {\n                className: \"animate-spin w-5 h-5 mx-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1421,\n                columnNumber: 19\n              }, this) : 'Write'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 5\n    }, this);\n  };\n  const markdownStyles = /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n      .markdown-body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        line-height: 1.6;\n      }\n      .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {\n        font-weight: bold;\n        margin-top: 1.5rem;\n        margin-bottom: 1rem;\n      }\n      .markdown-body h1 { font-size: 1.5em; }\n      .markdown-body h2 { font-size: 1.25em; }\n      .markdown-body h3 { font-size: 1.125em; }\n      .markdown-body p {\n        margin-bottom: 1rem;\n        line-height: 1.5;\n      }\n      .markdown-body ul, .markdown-body ol {\n        margin-bottom: 1rem;\n        padding-left: 1.5rem;\n      }\n      .markdown-body li {\n        margin-bottom: 0.5rem;\n      }\n      .markdown-body blockquote {\n        border-left: 4px solid #4299e1;\n        padding-left: 1rem;\n        margin-left: 0;\n        color: #718096;\n      }\n      .dark .markdown-body blockquote {\n        color: #a0aec0;\n      }\n    `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1434,\n    columnNumber: 5\n  }, this);\n  if (loading || !isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(LoaderCircle, {\n        className: \"animate-spin text-indigo-500 h-10 w-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-sans antialiased\",\n    children: [markdownStyles, user ? /*#__PURE__*/_jsxDEV(ChatUI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1482,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-100 dark:bg-gray-900 p-4\",\n      children: /*#__PURE__*/_jsxDEV(AuthUI, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1485,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 right-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowGeminiModal(true),\n        className: \"p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors\",\n        children: /*#__PURE__*/_jsxDEV(Sparkles, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1479,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j3gPJZk8AnAevs5BDfEDOUEZ3rk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","limit","createPortal","Sparkles","MessageSquareMore","Image","LoaderCircle","X","ExternalLink","Menu","Plus","Play","Pause","Mic","Settings","Volume2","PenTool","jsxDEV","_jsxDEV","Fragment","_Fragment","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","generateId","replace","c","r","Math","random","v","toString","base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","pcmToWav","pcmData","sampleRate","pcm16","Int16Array","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","setInt16","Blob","type","prebuiltVoices","App","_s","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","isSpeaking","setIsSpeaking","voiceName","setVoiceName","showSettingsModal","setShowSettingsModal","selectedImage","setSelectedImage","systemInstruction","setSystemInstruction","generationSettings","setGenerationSettings","temperature","topK","topP","showGeminiModal","setShowGeminiModal","translationTargetLanguage","setTranslationTargetLanguage","textToContinue","setTextToContinue","textToTranslate","setTextToTranslate","showCreativeWriterModal","setShowCreativeWriterModal","creativeTopic","setCreativeTopic","creativeStyle","setCreativeStyle","creativeTone","setCreativeTone","messagesEndRef","audioRef","currentAudioIdRef","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchWithExponentialBackoff","url","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","Error","message","statusText","includes","Promise","resolve","setTimeout","Object","keys","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","console","location","href","storedEmail","localStorage","getItem","modalDiv","document","createElement","className","innerHTML","body","appendChild","emailConfirmInput","querySelector","emailConfirmButton","onclick","value","removeChild","continueSignIn","emailToUse","then","result","removeItem","history","replaceState","title","pathname","catch","conversationsCollectionRef","uid","querySnapshot","fetchedConversations","forEach","push","id","data","sort","a","b","_b$lastUpdated","_a$lastUpdated","lastUpdated","seconds","firestoreError","messagesCollectionRef","fetchedMessages","_a$timestamp","_b$timestamp","timestamp","startNewChat","newConversationDocRef","newConvId","createdAt","handleSendMessage","preventDefault","trim","conversationIdToUse","userMessageText","imageToSend","command","toLowerCase","initialTitle","substring","createError","conversationDocRef","merge","updateError","text","userId","userName","imageData","handleImageAnalysis","startsWith","imagePrompt","handleGenerateImage","handleAIResponse","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","readAsDataURL","handleSendSignInLink","actionCodeSettings","origin","handleCodeInApp","setItem","handleEmailPasswordSignUp","handleEmailPasswordLogin","handleLogout","handleSummarizeChat","conversationId","summarizeMessageRef","chatHistoryText","filter","msg","map","join","prompt","chatHistory","role","parts","payload","contents","generationConfig","apiUrl","method","headers","stringify","responseText","candidates","content","imageMessageRef","instances","parameters","imageUrl","predictions","bytesBase64Encoded","aiMessageRef","base64ImageData","split","inlineData","mimeType","handleTextToSpeech","messageId","pause","generateAndPlayAudio","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_part$inlineData","_part$inlineData2","responseModalities","speechConfig","voiceConfig","prebuiltVoiceConfig","model","part","audioData","sampleRateMatch","match","parseInt","wavBlob","audioUrl","URL","createObjectURL","src","play","onended","handleCreativeWriting","topic","style","tone","userMessageRef","Modal","children","onClose","modalContent","onClick","fileName","_jsxFileName","lineNumber","columnNumber","AuthUI","onSubmit","onChange","placeholder","required","disabled","Message","isLast","isUser","isImage","isAi","messageClass","isPending","messageText","rel","alt","dangerouslySetInnerHTML","__html","marked","ref","ChatUI","_conversations$find","find","conv","index","accept","rows","parseFloat","min","max","step","voice","markdownStyles","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token, marked */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  limit\r\n} from 'firebase/firestore';\r\nimport { createPortal } from 'react-dom';\r\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus, Play, Pause, Mic, Settings, Volume2, PenTool } from 'lucide-react';\r\n\r\n// --- Firebase Configuration ---\r\n// The global variables are provided by the Canvas environment.\r\n// We fall back to a local config for development purposes if they are not defined.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Utility function for generating unique IDs (like conversation IDs)\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\n// Converts a base64 string to an ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// Converts PCM audio data to a WAV blob\r\nfunction pcmToWav(pcmData, sampleRate) {\r\n  const pcm16 = new Int16Array(pcmData);\r\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\r\n  const view = new DataView(buffer);\r\n  const writeString = (view, offset, string) => {\r\n      for (let i = 0; i < string.length; i++) {\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n  };\r\n\r\n  let offset = 0;\r\n  writeString(view, offset, 'RIFF'); offset += 4;\r\n  view.setUint32(offset, 36 + pcm16.length * 2, true); offset += 4;\r\n  writeString(view, offset, 'WAVE'); offset += 4;\r\n  writeString(view, offset, 'fmt '); offset += 4;\r\n  view.setUint32(offset, 16, true); offset += 4; // Sub-chunk size\r\n  view.setUint16(offset, 1, true); offset += 2; // Audio format (1 = PCM)\r\n  view.setUint16(offset, 1, true); offset += 2; // Number of channels\r\n  view.setUint32(offset, sampleRate, true); offset += 4; // Sample rate\r\n  view.setUint32(offset, sampleRate * 2, true); offset += 4; // Byte rate\r\n  view.setUint16(offset, 2, true); offset += 2; // Block align\r\n  view.setUint16(offset, 16, true); offset += 2; // Bits per sample\r\n  writeString(view, offset, 'data'); offset += 4;\r\n  view.setUint32(offset, pcm16.length * 2, true); offset += 4; // Data size\r\n\r\n  for (let i = 0; i < pcm16.length; i++) {\r\n      view.setInt16(offset, pcm16[i], true);\r\n      offset += 2;\r\n  }\r\n\r\n  return new Blob([view], { type: 'audio/wav' });\r\n}\r\n\r\n// Prebuilt voices available for TTS\r\nconst prebuiltVoices = [\r\n  'Kore', 'Puck', 'Charon', 'Fenrir', 'Leda', 'Orus', 'Aoede', 'Callirrhoe', 'Autonoe',\r\n  'Enceladus', 'Iapetus', 'Umbriel', 'Algieba', 'Despina', 'Erinome', 'Algenib',\r\n  'Rasalgethi', 'Laomedeia', 'Achernar', 'Alnilam', 'Schedar', 'Gacrux',\r\n  'Pulcherrima', 'Achird', 'Zubenelgenubi', 'Vindemiatrix', 'Sadachbia', 'Sadaltager', 'Sulafat'\r\n];\r\n\r\n// The main App component\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [authMode, setAuthMode] = useState('email-link');\r\n\r\n  // New states for conversation history and sidebar\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [voiceName, setVoiceName] = useState('Kore');\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  // New states for Gemini features\r\n  const [systemInstruction, setSystemInstruction] = useState('');\r\n  const [generationSettings, setGenerationSettings] = useState({\r\n    temperature: 0.9,\r\n    topK: 40,\r\n    topP: 0.95\r\n  });\r\n  const [showGeminiModal, setShowGeminiModal] = useState(false);\r\n  const [translationTargetLanguage, setTranslationTargetLanguage] = useState('English');\r\n  const [textToContinue, setTextToContinue] = useState('');\r\n  const [textToTranslate, setTextToTranslate] = useState('');\r\n\r\n  // New state for the creative writing feature\r\n  const [showCreativeWriterModal, setShowCreativeWriterModal] = useState(false);\r\n  const [creativeTopic, setCreativeTopic] = useState('');\r\n  const [creativeStyle, setCreativeStyle] = useState('Poem');\r\n  const [creativeTone, setCreativeTone] = useState('Neutral');\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n  const currentAudioIdRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages whenever messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Exponential backoff utility for API calls\r\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n      if (retries > 0 && error.message.includes(\"API error\")) {\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          setIsAuthReady(true);\r\n          setError(null);\r\n        } else {\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) {\r\n            try {\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n        }\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      if (!storedEmail) {\r\n        // Using a custom modal instead of prompt\r\n        const modalDiv = document.createElement('div');\r\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\r\n        modalDiv.innerHTML = `\r\n          <div class=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg max-w-sm w-full\">\r\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\r\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\r\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\r\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(modalDiv);\r\n\r\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\r\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\r\n\r\n        emailConfirmButton.onclick = () => {\r\n          storedEmail = emailConfirmInput.value;\r\n          if (storedEmail) {\r\n            document.body.removeChild(modalDiv);\r\n            continueSignIn(storedEmail);\r\n          } else {\r\n            console.error(\"Email not provided. Please try again.\");\r\n          }\r\n        };\r\n\r\n        const continueSignIn = (emailToUse) => {\r\n          signInWithEmailLink(auth, emailToUse, window.location.href)\r\n            .then((result) => {\r\n              window.localStorage.removeItem('emailForSignIn');\r\n              setUser(result.user);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              setError(null);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            })\r\n            .catch((error) => {\r\n              setError(`Error completing sign-in with link: ${error.message}`);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            });\r\n        };\r\n        return; // Exit the effect to wait for user input\r\n      }\r\n\r\n      signInWithEmailLink(auth, storedEmail, window.location.href)\r\n        .then((result) => {\r\n          window.localStorage.removeItem('emailForSignIn');\r\n          setUser(result.user);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          setError(null);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch((error) => {\r\n          setError(`Error completing sign-in with link: ${error.message}`);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        });\r\n    }\r\n  }, [auth, isAuthReady]);\r\n\r\n  // 3. Fetch conversations for the current user.\r\n  useEffect(() => {\r\n    if (!db || !user || !isAuthReady) return;\r\n\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const unsubscribe = onSnapshot(conversationsCollectionRef, (querySnapshot) => {\r\n      const fetchedConversations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedConversations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedConversations.sort((a, b) => (b.lastUpdated?.seconds || 0) - (a.lastUpdated?.seconds || 0));\r\n\r\n      setConversations(fetchedConversations);\r\n\r\n      if (!currentConversationId && fetchedConversations.length > 0) {\r\n        setCurrentConversationId(fetchedConversations[0].id);\r\n      } else if (fetchedConversations.length === 0) {\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load conversations: ${firestoreError.message}`);\r\n      console.error(\"Firestore conversations error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, isAuthReady, appId, currentConversationId]);\r\n\r\n  // 4. Fetch messages for the current conversation.\r\n  useEffect(() => {\r\n    if (!db || !user || !currentConversationId) {\r\n      setMessages([]); // Clear messages if no conversation is selected\r\n      return;\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n    const unsubscribe = onSnapshot(messagesCollectionRef, (querySnapshot) => {\r\n      const fetchedMessages = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedMessages.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedMessages.sort((a, b) => (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0));\r\n\r\n      setMessages(fetchedMessages);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\r\n      console.error(\"Firestore messages error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, currentConversationId, appId]);\r\n\r\n  // 5. Start a new conversation.\r\n  const startNewChat = async () => {\r\n    if (!db || !user) {\r\n      setError(\"You must be logged in to start a new chat.\");\r\n      return;\r\n    }\r\n\r\n    setMessages([]);\r\n    setNewMessage('');\r\n    setSelectedImage(null);\r\n    setError(null);\r\n    setIsAIGenerating(false);\r\n    setIsSummarizing(false);\r\n    setIsGeneratingImage(false);\r\n\r\n    try {\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef);\r\n      const newConvId = newConversationDocRef.id;\r\n\r\n      await setDoc(newConversationDocRef, {\r\n        title: 'New Chat',\r\n        createdAt: serverTimestamp(),\r\n        lastUpdated: serverTimestamp(),\r\n      });\r\n\r\n      setCurrentConversationId(newConvId);\r\n      setIsSidebarOpen(false);\r\n    } catch (e) {\r\n      setError(`Failed to create a new chat: ${e.message}`);\r\n      console.error(\"Error creating new conversation:\", e);\r\n    }\r\n  };\r\n\r\n  // 6. Handle sending a new message (and creating a new conversation if needed).\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() && !selectedImage || !user || !db || isAIGenerating || isSpeaking) return;\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n    const userMessageText = newMessage;\r\n    const imageToSend = selectedImage;\r\n    setNewMessage('');\r\n    setSelectedImage(null);\r\n\r\n    const command = userMessageText.toLowerCase().trim();\r\n\r\n    // If no conversation is active, create a new one.\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      const initialTitle = userMessageText ? (userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '')) : 'New chat with image';\r\n\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: initialTitle,\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId);\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        console.error(\"Error creating new conversation:\", createError);\r\n        return;\r\n      }\r\n    } else {\r\n      // Otherwise, just update the lastUpdated timestamp of the current conversation.\r\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\r\n      try {\r\n        await setDoc(conversationDocRef, { lastUpdated: serverTimestamp() }, { merge: true });\r\n      } catch (updateError) {\r\n        console.error(\"Error updating conversation timestamp:\", updateError);\r\n      }\r\n    }\r\n\r\n    // Add user message to Firestore\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: userMessageText,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message',\r\n        imageData: imageToSend\r\n      });\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n      return;\r\n    }\r\n\r\n    if (imageToSend) {\r\n      handleImageAnalysis(userMessageText, imageToSend, conversationIdToUse);\r\n    } else if (command.startsWith('image of')) {\r\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\r\n      handleGenerateImage(imagePrompt, conversationIdToUse);\r\n    } else {\r\n      handleAIResponse(userMessageText, conversationIdToUse);\r\n    }\r\n  };\r\n\r\n  // Function to handle image upload\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // 7. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    const actionCodeSettings = {\r\n      url: window.location.origin,\r\n      handleCodeInApp: true,\r\n    };\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Registration failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 9. Handle Email/Password Login\r\n  const handleEmailPasswordLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Login failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 10. Handle Logout\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setMessages([]);\r\n      setConversations([]);\r\n      setCurrentConversationId(null);\r\n      setEmailSent(false);\r\n      setIsSigningInWithLink(false);\r\n      setAuthMode('email-link');\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Logout failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 11. Handle summarization of the current chat using the Gemini API\r\n  const handleSummarizeChat = async () => {\r\n    const conversationId = currentConversationId;\r\n    if (!conversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n\r\n    setIsSummarizing(true);\r\n    setError(null);\r\n    setShowGeminiModal(false);\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    const summarizeMessageRef = doc(messagesCollectionRef);\r\n\r\n    try {\r\n      // Add a placeholder message for the AI response\r\n      await setDoc(summarizeMessageRef, {\r\n        text: 'Summarizing...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n      });\r\n\r\n      const chatHistoryText = messages\r\n        .filter(msg => msg.type === 'user-message' || msg.type === 'ai-response')\r\n        .map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`)\r\n        .join('\\n');\r\n\r\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\r\n\r\n      const chatHistory = [{ role: \"user\", parts: [{ text: prompt }] }];\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n\r\n      if (systemInstruction) {\r\n        payload.systemInstruction = { parts: [{ text: systemInstruction }] };\r\n      }\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't generate a summary.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      await setDoc(summarizeMessageRef, {\r\n        text: responseText,\r\n        type: 'ai-response',\r\n      }, { merge: true });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error summarizing chat:\", error);\r\n      await setDoc(summarizeMessageRef, {\r\n        text: `An error occurred while summarizing. Error: ${error.message}`,\r\n      }, { merge: true });\r\n      setError(`Summarization error: ${error.message}`);\r\n    } finally {\r\n      setIsSummarizing(false);\r\n    }\r\n  };\r\n\r\n  // 12. Handle image generation from a text prompt using the Gemini API\r\n  const handleGenerateImage = async (imagePrompt) => {\r\n    const conversationId = currentConversationId;\r\n    if (!conversationId || isAIGenerating || isGeneratingImage || isSummarizing) return;\r\n\r\n    setIsGeneratingImage(true);\r\n    setError(null);\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    const imageMessageRef = doc(messagesCollectionRef);\r\n\r\n    try {\r\n      // Add a placeholder message for the AI response\r\n      await setDoc(imageMessageRef, {\r\n        text: 'Generating image...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n      });\r\n\r\n      const payload = {\r\n        instances: { prompt: imagePrompt },\r\n        parameters: { \"sampleCount\": 1 }\r\n      };\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      let imageUrl = null;\r\n\r\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\r\n        imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\r\n      } else {\r\n        setError('Image generation failed. No image data received.');\r\n        await setDoc(imageMessageRef, {\r\n          text: `An error occurred while generating the image. Error: No image data received.`,\r\n        }, { merge: true });\r\n      }\r\n\r\n      if (imageUrl) {\r\n        await setDoc(imageMessageRef, {\r\n          text: `Image generated for prompt: \"${imagePrompt}\"`,\r\n          type: 'ai-image-response',\r\n          imageUrl: imageUrl,\r\n        }, { merge: true });\r\n      } else {\r\n        await setDoc(imageMessageRef, {\r\n          text: `An error occurred while generating the image.`,\r\n        }, { merge: true });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error generating image:\", error);\r\n      await setDoc(imageMessageRef, {\r\n        text: `An error occurred while generating the image. Error: ${error.message}`,\r\n      }, { merge: true });\r\n      setError(`Image generation error: ${error.message}`);\r\n    } finally {\r\n      setIsGeneratingImage(false);\r\n    }\r\n  };\r\n\r\n  // 13. Handle image analysis using the Gemini API\r\n  const handleImageAnalysis = async (userMessageText, imageData, conversationId) => {\r\n    if (!conversationId || isAIGenerating || isGeneratingImage || isSummarizing) return;\r\n\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    const aiMessageRef = doc(messagesCollectionRef);\r\n\r\n    try {\r\n      // Add a placeholder message for the AI response\r\n      await setDoc(aiMessageRef, {\r\n        text: 'Analyzing image...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n      });\r\n\r\n      // Split the base64 string to get only the data part\r\n      const base64ImageData = imageData.split(',')[1];\r\n      const chatHistory = [{\r\n        role: \"user\",\r\n        parts: [{ text: userMessageText },\r\n        {\r\n          inlineData: {\r\n            mimeType: \"image/png\",\r\n            data: base64ImageData\r\n          }\r\n        }]\r\n      }];\r\n\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n\r\n      if (systemInstruction) {\r\n        payload.systemInstruction = { parts: [{ text: systemInstruction }] };\r\n      }\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't analyze that image.\";\r\n\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      await setDoc(aiMessageRef, {\r\n        text: responseText,\r\n        type: 'ai-response',\r\n      }, { merge: true });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error analyzing image:\", error);\r\n      await setDoc(aiMessageRef, {\r\n        text: `An error occurred while analyzing the image. Error: ${error.message}`,\r\n      }, { merge: true });\r\n      setError(`Image analysis error: ${error.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n  // 14. Handle general AI text response using the Gemini API\r\n  const handleAIResponse = async (userMessageText, conversationId) => {\r\n    if (!conversationId || isAIGenerating || isGeneratingImage || isSummarizing) return;\r\n\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    const aiMessageRef = doc(messagesCollectionRef);\r\n\r\n    try {\r\n      // Add a placeholder message for the AI response\r\n      await setDoc(aiMessageRef, {\r\n        text: '...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n      });\r\n\r\n      const chatHistory = messages.map(msg => ({\r\n        role: msg.type === 'user-message' ? 'user' : 'model',\r\n        parts: [{ text: msg.text }]\r\n      }));\r\n      chatHistory.push({ role: \"user\", parts: [{ text: userMessageText }] });\r\n\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n\r\n      if (systemInstruction) {\r\n        payload.systemInstruction = { parts: [{ text: systemInstruction }] };\r\n      }\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't generate a response.\";\r\n\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      await setDoc(aiMessageRef, {\r\n        text: responseText,\r\n        type: 'ai-response',\r\n      }, { merge: true });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error getting AI response:\", error);\r\n      await setDoc(aiMessageRef, {\r\n        text: `An error occurred while getting a response. Error: ${error.message}`,\r\n      }, { merge: true });\r\n      setError(`AI response error: ${error.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n  // 15. Handle text-to-speech\r\n  const handleTextToSpeech = async (text, messageId) => {\r\n    if (isSpeaking) {\r\n      if (currentAudioIdRef.current === messageId) {\r\n        audioRef.current.pause();\r\n        setIsSpeaking(false);\r\n        currentAudioIdRef.current = null;\r\n      } else {\r\n        audioRef.current.pause();\r\n        setIsSpeaking(true);\r\n        currentAudioIdRef.current = messageId;\r\n        generateAndPlayAudio(text);\r\n      }\r\n    } else {\r\n      setIsSpeaking(true);\r\n      currentAudioIdRef.current = messageId;\r\n      generateAndPlayAudio(text);\r\n    }\r\n  };\r\n\r\n  const generateAndPlayAudio = async (text) => {\r\n    try {\r\n      const payload = {\r\n        contents: [{\r\n          parts: [{ text: text }]\r\n        }],\r\n        generationConfig: {\r\n          responseModalities: [\"AUDIO\"],\r\n          speechConfig: {\r\n            voiceConfig: {\r\n              prebuiltVoiceConfig: { voiceName: voiceName }\r\n            }\r\n          }\r\n        },\r\n        model: \"gemini-2.5-flash-preview-tts\"\r\n      };\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      const part = result?.candidates?.[0]?.content?.parts?.[0];\r\n      const audioData = part?.inlineData?.data;\r\n      const mimeType = part?.inlineData?.mimeType;\r\n\r\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\r\n        const sampleRateMatch = mimeType.match(/rate=(\\d+)/);\r\n        const sampleRate = sampleRateMatch ? parseInt(sampleRateMatch[1], 10) : 16000;\r\n        const pcmData = base64ToArrayBuffer(audioData);\r\n        const wavBlob = pcmToWav(pcmData, sampleRate);\r\n        const audioUrl = URL.createObjectURL(wavBlob);\r\n\r\n        if (audioRef.current) {\r\n          audioRef.current.src = audioUrl;\r\n          audioRef.current.play();\r\n          audioRef.current.onended = () => {\r\n            setIsSpeaking(false);\r\n            currentAudioIdRef.current = null;\r\n          };\r\n        }\r\n      } else {\r\n        console.error(\"TTS failed: No audio data received.\");\r\n        setError(\"TTS failed: No audio data received.\");\r\n        setIsSpeaking(false);\r\n        currentAudioIdRef.current = null;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error with TTS:\", error);\r\n      setError(`TTS error: ${error.message}`);\r\n      setIsSpeaking(false);\r\n      currentAudioIdRef.current = null;\r\n    }\r\n  };\r\n\r\n  // 16. Handle creative writing requests\r\n  const handleCreativeWriting = async (topic, style, tone) => {\r\n    setShowCreativeWriterModal(false);\r\n    if (!creativeTopic || isAIGenerating) return;\r\n\r\n    const conversationId = currentConversationId || generateId();\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n\r\n    if (!currentConversationId) {\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, conversationId);\r\n      await setDoc(newConversationDocRef, {\r\n        title: topic.substring(0, 50) + (topic.length > 50 ? '...' : ''),\r\n        createdAt: serverTimestamp(),\r\n        lastUpdated: serverTimestamp(),\r\n      });\r\n      setCurrentConversationId(conversationId);\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    const userMessageRef = doc(messagesCollectionRef);\r\n    await setDoc(userMessageRef, {\r\n      text: `Creative writing request: Topic: ${topic}, Style: ${style}, Tone: ${tone}`,\r\n      userId: user.uid,\r\n      userName: `User_${user.uid.substring(0, 5)}`,\r\n      timestamp: serverTimestamp(),\r\n      type: 'user-message',\r\n    });\r\n\r\n    const aiMessageRef = doc(messagesCollectionRef);\r\n    try {\r\n      await setDoc(aiMessageRef, {\r\n        text: 'Writing...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n      });\r\n\r\n      const prompt = `Write a creative piece on the topic \"${topic}\". The style should be a ${style} and the tone should be ${tone}.`;\r\n      const chatHistory = [{ role: \"user\", parts: [{ text: prompt }] }];\r\n\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n\r\n      if (systemInstruction) {\r\n        payload.systemInstruction = { parts: [{ text: systemInstruction }] };\r\n      }\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't write that piece.\";\r\n\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      await setDoc(aiMessageRef, {\r\n        text: responseText,\r\n        type: 'ai-response',\r\n      }, { merge: true });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error with creative writing:\", error);\r\n      await setDoc(aiMessageRef, {\r\n        text: `An error occurred while writing. Error: ${error.message}`,\r\n      }, { merge: true });\r\n      setError(`Creative writing error: ${error.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n\r\n  // Helper component for the modal\r\n  const Modal = ({ title, children, onClose }) => {\r\n    const modalContent = (\r\n      <div className=\"fixed inset-0 z-[100] flex items-center justify-center bg-gray-900 bg-opacity-50 dark:bg-opacity-75 p-4\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl w-full max-w-lg p-6 relative\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"absolute top-4 right-4 p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\r\n          >\r\n            <X className=\"w-5 h-5 text-gray-700 dark:text-gray-300\" />\r\n          </button>\r\n          <h2 className=\"text-2xl font-bold mb-4 text-gray-900 dark:text-gray-100\">{title}</h2>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n    return createPortal(modalContent, document.body);\r\n  };\r\n\r\n  // UI components\r\n  const AuthUI = () => (\r\n    <div className=\"flex flex-col items-center justify-center p-8 bg-gray-50 dark:bg-gray-900 rounded-2xl shadow-lg w-full max-w-sm mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-900 dark:text-gray-100\">AI Chatbot</h2>\r\n      {error && <div className=\"p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\" role=\"alert\">{error}</div>}\r\n      <div className=\"flex space-x-2 mb-6\">\r\n        <button onClick={() => setAuthMode('email-link')} className={`py-2 px-4 rounded-lg text-sm font-medium transition-colors ${authMode === 'email-link' ? 'bg-indigo-600 text-white shadow-md' : 'bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600'}`}>Email Link</button>\r\n        <button onClick={() => setAuthMode('email-password')} className={`py-2 px-4 rounded-lg text-sm font-medium transition-colors ${authMode === 'email-password' ? 'bg-indigo-600 text-white shadow-md' : 'bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600'}`}>Email/Password</button>\r\n      </div>\r\n      {authMode === 'email-link' ? (\r\n        <form onSubmit={handleSendSignInLink} className=\"w-full\">\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter your email\"\r\n            className=\"w-full p-3 mb-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-indigo-600 text-white p-3 rounded-lg shadow-md hover:bg-indigo-700 transition-colors duration-200 font-bold\"\r\n            disabled={emailSent}\r\n          >\r\n            {emailSent ? 'Link Sent! Check your email.' : 'Send Sign-in Link'}\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"w-full\">\r\n          <form onSubmit={handleEmailPasswordLogin} className=\"w-full\">\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n              className=\"w-full p-3 mb-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              className=\"w-full p-3 mb-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              required\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-indigo-600 text-white p-3 rounded-lg shadow-md hover:bg-indigo-700 transition-colors duration-200 font-bold\"\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n          <div className=\"mt-4 text-center text-sm text-gray-600 dark:text-gray-400\">\r\n            Don't have an account?\r\n            <button\r\n              onClick={handleEmailPasswordSignUp}\r\n              className=\"ml-1 text-indigo-600 hover:text-indigo-500 font-bold\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const Message = ({ text, type, isLast, imageUrl }) => {\r\n    const isUser = type === 'user-message';\r\n    const isImage = type === 'ai-image-response';\r\n    const isAi = !isUser && !isImage;\r\n\r\n    const messageClass = isUser\r\n      ? \"bg-indigo-500 text-white self-end rounded-br-none\"\r\n      : isImage\r\n      ? \"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 self-start rounded-bl-none\"\r\n      : \"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 self-start rounded-bl-none\";\r\n\r\n    const isPending = isAi && isLast && (isAIGenerating || isSummarizing || isGeneratingImage);\r\n\r\n    const messageText = isPending ? '...' : text;\r\n\r\n    return (\r\n      <div className={`flex flex-col mb-4 p-4 rounded-3xl max-w-[80%] break-words shadow-sm ${messageClass}`}>\r\n        <div className=\"flex items-center space-x-2 text-sm font-semibold mb-2\">\r\n          {isUser ? (\r\n            <>\r\n              <span className=\"text-white\">You</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Sparkles className=\"w-4 h-4 text-indigo-500\" />\r\n              <span className=\"text-gray-700 dark:text-gray-300\">AI Chatbot</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isImage && imageUrl && (\r\n          <div className=\"mt-2 rounded-xl overflow-hidden\">\r\n            <a href={imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img\r\n                src={imageUrl}\r\n                alt={text}\r\n                className=\"w-full h-auto rounded-xl\"\r\n              />\r\n              <div className=\"flex items-center justify-end p-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 text-xs\">\r\n                View full image <ExternalLink className=\"w-3 h-3 ml-1\" />\r\n              </div>\r\n            </a>\r\n          </div>\r\n        )}\r\n        {isImage && !imageUrl && (\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            {text}\r\n          </p>\r\n        )}\r\n        {!isImage && (\r\n          <div className=\"prose dark:prose-invert\">\r\n            <div\r\n              className=\"markdown-body\"\r\n              dangerouslySetInnerHTML={{ __html: marked.parse(messageText) }}\r\n            />\r\n          </div>\r\n        )}\r\n        {isAi && text && !isPending && (\r\n          <div className=\"flex items-center justify-between mt-2\">\r\n            <button\r\n              onClick={() => handleTextToSpeech(text, message.id)}\r\n              className=\"text-gray-500 dark:text-gray-400 hover:text-indigo-500 transition-colors\"\r\n            >\r\n              {isSpeaking && currentAudioIdRef.current === message.id ? <Pause className=\"w-4 h-4\" /> : <Play className=\"w-4 h-4\" />}\r\n            </button>\r\n            <audio ref={audioRef} className=\"hidden\"></audio>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ChatUI = () => (\r\n    <div className=\"flex flex-col h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100\">\r\n      <header className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 shadow-sm bg-white dark:bg-gray-800\">\r\n        <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"p-2 text-gray-500 dark:text-gray-400 hover:text-indigo-500 lg:hidden\">\r\n          <Menu className=\"w-6 h-6\" />\r\n        </button>\r\n        <h1 className=\"text-xl font-bold\">\r\n          {conversations.find(conv => conv.id === currentConversationId)?.title || 'New Chat'}\r\n        </h1>\r\n        <div className=\"flex items-center space-x-2\">\r\n          {user && (\r\n            <span className=\"text-sm text-gray-500 dark:text-gray-400 hidden sm:block\">\r\n              User ID: {user.uid}\r\n            </span>\r\n          )}\r\n          <button\r\n            onClick={() => setShowSettingsModal(true)}\r\n            className=\"p-2 text-gray-500 dark:text-gray-400 hover:text-indigo-500\"\r\n          >\r\n            <Settings className=\"w-5 h-5\" />\r\n          </button>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"p-2 text-sm text-red-500 hover:text-red-700 transition-colors font-semibold\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"flex-1 overflow-hidden flex\">\r\n        <div className={`transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static fixed inset-y-0 left-0 z-40 w-64 bg-gray-100 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 flex flex-col`}>\r\n          <div className=\"p-4 flex items-center justify-between border-b border-gray-200 dark:border-gray-700\">\r\n            <h2 className=\"text-lg font-semibold\">Conversations</h2>\r\n            <button onClick={startNewChat} className=\"p-2 text-indigo-500 hover:text-indigo-700\">\r\n              <Plus className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n          <ul className=\"flex-1 overflow-y-auto p-2 space-y-2\">\r\n            {conversations.map((conv) => (\r\n              <li key={conv.id}>\r\n                <button\r\n                  onClick={() => setCurrentConversationId(conv.id)}\r\n                  className={`block w-full text-left p-3 rounded-lg transition-colors duration-200 truncate ${currentConversationId === conv.id ? 'bg-indigo-500 text-white' : 'bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600'}`}\r\n                >\r\n                  {conv.title}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"flex-1 flex flex-col p-4 overflow-hidden\">\r\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n            {messages.map((message, index) => (\r\n              <Message\r\n                key={message.id}\r\n                text={message.text}\r\n                type={message.type}\r\n                isLast={index === messages.length - 1}\r\n                imageUrl={message.imageUrl}\r\n              />\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          <form onSubmit={handleSendMessage} className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\r\n            {selectedImage && (\r\n              <div className=\"relative mb-4\">\r\n                <img\r\n                  src={selectedImage}\r\n                  alt=\"Selected\"\r\n                  className=\"max-h-32 object-contain rounded-xl\"\r\n                />\r\n                <button\r\n                  onClick={() => setSelectedImage(null)}\r\n                  className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 shadow-md hover:bg-red-600 transition-colors\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            )}\r\n            <div className=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                className=\"flex-1 p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                placeholder=\"Type a message or command...\"\r\n                disabled={isAIGenerating || isSummarizing || isGeneratingImage}\r\n              />\r\n              <label className=\"cursor-pointer p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors\">\r\n                <Image className=\"w-6 h-6\" />\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageUpload}\r\n                  className=\"hidden\"\r\n                />\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                disabled={!newMessage.trim() && !selectedImage || isAIGenerating || isSummarizing || isGeneratingImage}\r\n              >\r\n                {isAIGenerating || isSummarizing || isGeneratingImage ? (\r\n                  <LoaderCircle className=\"animate-spin w-6 h-6\" />\r\n                ) : (\r\n                  <MessageSquareMore className=\"w-6 h-6\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </main>\r\n\r\n      {showSettingsModal && (\r\n        <Modal title=\"Advanced Settings\" onClose={() => setShowSettingsModal(false)}>\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-xl font-bold mt-4\">Gemini API Settings</h3>\r\n            <div className=\"flex flex-col\">\r\n              <label className=\"text-sm font-medium mb-1\">System Instruction (Custom Persona)</label>\r\n              <textarea\r\n                value={systemInstruction}\r\n                onChange={(e) => setSystemInstruction(e.target.value)}\r\n                placeholder=\"e.g., 'You are a friendly pirate, answering all questions in pirate jargon.'\"\r\n                className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                rows=\"3\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-medium mb-1\">Temperature</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={generationSettings.temperature}\r\n                  onChange={(e) => setGenerationSettings({ ...generationSettings, temperature: parseFloat(e.target.value) })}\r\n                  min=\"0\" max=\"1\" step=\"0.01\"\r\n                  className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-medium mb-1\">Top K</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={generationSettings.topK}\r\n                  onChange={(e) => setGenerationSettings({ ...generationSettings, topK: parseInt(e.target.value, 10) })}\r\n                  min=\"1\"\r\n                  className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-medium mb-1\">Top P</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={generationSettings.topP}\r\n                  onChange={(e) => setGenerationSettings({ ...generationSettings, topP: parseFloat(e.target.value) })}\r\n                  min=\"0\" max=\"1\" step=\"0.01\"\r\n                  className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <h3 className=\"text-xl font-bold mt-4\">TTS Settings</h3>\r\n            <div className=\"flex flex-col\">\r\n              <label className=\"text-sm font-medium mb-1\">Voice</label>\r\n              <select\r\n                value={voiceName}\r\n                onChange={(e) => setVoiceName(e.target.value)}\r\n                className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              >\r\n                {prebuiltVoices.map(voice => (\r\n                  <option key={voice} value={voice}>{voice}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n\r\n      {showGeminiModal && (\r\n        <Modal title=\"Creative Tools\" onClose={() => setShowGeminiModal(false)}>\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-xl font-bold mt-4\">Summarize Current Chat</h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Summarize the entire conversation history into a single, concise response.</p>\r\n            <button\r\n              onClick={handleSummarizeChat}\r\n              className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n              disabled={isSummarizing || isAIGenerating || isGeneratingImage}\r\n            >\r\n              {isSummarizing ? (\r\n                <LoaderCircle className=\"animate-spin w-5 h-5 mx-auto\" />\r\n              ) : (\r\n                'Summarize'\r\n              )}\r\n            </button>\r\n            <h3 className=\"text-xl font-bold mt-4\">Creative Writer</h3>\r\n            <form onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleCreativeWriting(creativeTopic, creativeStyle, creativeTone);\r\n            }} className=\"space-y-4\">\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"text-sm font-medium mb-1\">Topic</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={creativeTopic}\r\n                  onChange={(e) => setCreativeTopic(e.target.value)}\r\n                  placeholder=\"e.g., 'a robot discovering nature'\"\r\n                  className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"flex flex-col\">\r\n                  <label className=\"text-sm font-medium mb-1\">Style</label>\r\n                  <select\r\n                    value={creativeStyle}\r\n                    onChange={(e) => setCreativeStyle(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  >\r\n                    <option value=\"Poem\">Poem</option>\r\n                    <option value=\"Short Story\">Short Story</option>\r\n                    <option value=\"Song Lyrics\">Song Lyrics</option>\r\n                    <option value=\"Essay\">Essay</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"flex flex-col\">\r\n                  <label className=\"text-sm font-medium mb-1\">Tone</label>\r\n                  <select\r\n                    value={creativeTone}\r\n                    onChange={(e) => setCreativeTone(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  >\r\n                    <option value=\"Neutral\">Neutral</option>\r\n                    <option value=\"Happy\">Happy</option>\r\n                    <option value=\"Sad\">Sad</option>\r\n                    <option value=\"Excited\">Excited</option>\r\n                    <option value=\"Serious\">Serious</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                disabled={isAIGenerating || isSummarizing || isGeneratingImage}\r\n              >\r\n                {isAIGenerating ? (\r\n                  <LoaderCircle className=\"animate-spin w-5 h-5 mx-auto\" />\r\n                ) : (\r\n                  'Write'\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const markdownStyles = (\r\n    <style>{`\r\n      .markdown-body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n        line-height: 1.6;\r\n      }\r\n      .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {\r\n        font-weight: bold;\r\n        margin-top: 1.5rem;\r\n        margin-bottom: 1rem;\r\n      }\r\n      .markdown-body h1 { font-size: 1.5em; }\r\n      .markdown-body h2 { font-size: 1.25em; }\r\n      .markdown-body h3 { font-size: 1.125em; }\r\n      .markdown-body p {\r\n        margin-bottom: 1rem;\r\n        line-height: 1.5;\r\n      }\r\n      .markdown-body ul, .markdown-body ol {\r\n        margin-bottom: 1rem;\r\n        padding-left: 1.5rem;\r\n      }\r\n      .markdown-body li {\r\n        margin-bottom: 0.5rem;\r\n      }\r\n      .markdown-body blockquote {\r\n        border-left: 4px solid #4299e1;\r\n        padding-left: 1rem;\r\n        margin-left: 0;\r\n        color: #718096;\r\n      }\r\n      .dark .markdown-body blockquote {\r\n        color: #a0aec0;\r\n      }\r\n    `}</style>\r\n  );\r\n\r\n  if (loading || !isAuthReady) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900\">\r\n        <LoaderCircle className=\"animate-spin text-indigo-500 h-10 w-10\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"font-sans antialiased\">\r\n      {markdownStyles}\r\n      {user ? (\r\n        <ChatUI />\r\n      ) : (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100 dark:bg-gray-900 p-4\">\r\n          <AuthUI />\r\n        </div>\r\n      )}\r\n      <div className=\"fixed bottom-4 right-4 z-50\">\r\n        <button\r\n          onClick={() => setShowGeminiModal(true)}\r\n          className=\"p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors\"\r\n        >\r\n          <Sparkles className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}