{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token, marked */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, limit } from 'firebase/firestore';\n\n// --- Firebase Configuration ---\n// The global variables are provided by the Canvas environment.\n// We fall back to a local config for development purposes if they are not defined.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Utility function for generating unique IDs (like conversation IDs)\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\n// Converts a base64 string to an ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// Converts PCM audio data to a WAV blob\nfunction pcmToWav(pcmData, sampleRate) {\n  const pcm16 = new Int16Array(pcmData);\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\n  const view = new DataView(buffer);\n  const writeString = (view, offset, string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n  let offset = 0;\n  writeString(view, offset, 'RIFF');\n  offset += 4;\n  view.setUint32(offset, 36 + pcm16.length * 2, true);\n  offset += 4;\n  writeString(view, offset, 'WAVE');\n  offset += 4;\n  writeString(view, offset, 'fmt ');\n  offset += 4;\n  view.setUint32(offset, 16, true);\n  offset += 4; // Sub-chunk size\n  view.setUint16(offset, 1, true);\n  offset += 2; // Audio format (1 = PCM)\n  view.setUint16(offset, 1, true);\n  offset += 2; // Number of channels\n  view.setUint32(offset, sampleRate, true);\n  offset += 4; // Sample rate\n  view.setUint32(offset, sampleRate * 2, true);\n  offset += 4; // Byte rate\n  view.setUint16(offset, 2, true);\n  offset += 2; // Block align\n  view.setUint16(offset, 16, true);\n  offset += 2; // Bits per sample\n  writeString(view, offset, 'data');\n  offset += 4;\n  view.setUint32(offset, pcm16.length * 2, true);\n  offset += 4; // Data size\n\n  for (let i = 0; i < pcm16.length; i++) {\n    view.setInt16(offset, pcm16[i], true);\n    offset += 2;\n  }\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\n;\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [authMode, setAuthMode] = useState('email-link');\n\n  // New states for conversation history and sidebar\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const messagesEndRef = useRef(null);\n  const audioContextRef = useRef(null);\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Exponential backoff utility for API calls\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n      }\n      return response;\n    } catch (error) {\n      if (retries > 0 && error.message.includes(\"API error\")) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n      }\n      throw error;\n    }\n  };\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          setUser(currentUser);\n          setIsAuthReady(true);\n          setError(null);\n        } else {\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            try {\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n          setIsAuthReady(true);\n        }\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n      if (!storedEmail) {\n        // Using a custom modal instead of prompt\n        const modalDiv = document.createElement('div');\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\n        modalDiv.innerHTML = `\n          <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\n          </div>\n        `;\n        document.body.appendChild(modalDiv);\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\n        emailConfirmButton.onclick = () => {\n          storedEmail = emailConfirmInput.value;\n          if (storedEmail) {\n            document.body.removeChild(modalDiv);\n            continueSignIn(storedEmail);\n          } else {\n            console.error(\"Email not provided. Please try again.\");\n          }\n        };\n        const continueSignIn = emailToUse => {\n          signInWithEmailLink(auth, emailToUse, window.location.href).then(result => {\n            window.localStorage.removeItem('emailForSignIn');\n            setUser(result.user);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            setError(null);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          }).catch(error => {\n            setError(`Error completing sign-in with link: ${error.message}`);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          });\n        };\n        return; // Exit the effect to wait for user input\n      }\n      signInWithEmailLink(auth, storedEmail, window.location.href).then(result => {\n        window.localStorage.removeItem('emailForSignIn');\n        setUser(result.user);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        setError(null);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }).catch(error => {\n        setError(`Error completing sign-in with link: ${error.message}`);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      });\n    }\n  }, [auth, isAuthReady]);\n\n  // 3. Fetch conversations for the current user.\n  useEffect(() => {\n    if (!db || !user || !isAuthReady) return;\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const unsubscribe = onSnapshot(conversationsCollectionRef, querySnapshot => {\n      const fetchedConversations = [];\n      querySnapshot.forEach(doc => {\n        fetchedConversations.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedConversations.sort((a, b) => {\n        var _b$lastUpdated, _a$lastUpdated;\n        return (((_b$lastUpdated = b.lastUpdated) === null || _b$lastUpdated === void 0 ? void 0 : _b$lastUpdated.seconds) || 0) - (((_a$lastUpdated = a.lastUpdated) === null || _a$lastUpdated === void 0 ? void 0 : _a$lastUpdated.seconds) || 0);\n      });\n      setConversations(fetchedConversations);\n      if (!currentConversationId && fetchedConversations.length > 0) {\n        setCurrentConversationId(fetchedConversations[0].id);\n      } else if (fetchedConversations.length === 0) {\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }, firestoreError => {\n      setError(`Failed to load conversations: ${firestoreError.message}`);\n      console.error(\"Firestore conversations error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, isAuthReady, appId, currentConversationId]);\n\n  // 4. Fetch messages for the current conversation.\n  useEffect(() => {\n    if (!db || !user || !currentConversationId) {\n      setMessages([]); // Clear messages if no conversation is selected\n      return;\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n    const unsubscribe = onSnapshot(messagesCollectionRef, querySnapshot => {\n      const fetchedMessages = [];\n      querySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedMessages.sort((a, b) => {\n        var _a$timestamp, _b$timestamp;\n        return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.seconds) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.seconds) || 0);\n      });\n      setMessages(fetchedMessages);\n    }, firestoreError => {\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\n      console.error(\"Firestore messages error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, currentConversationId, appId]);\n\n  // New function to create a new conversation document in Firestore\n  const createNewConversation = async () => {\n    if (!db || !user) {\n      setError('Database or user not ready.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const newConvId = generateId();\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n    try {\n      await setDoc(newConversationDocRef, {\n        title: \"New Chat\",\n        createdAt: serverTimestamp(),\n        lastUpdated: serverTimestamp()\n      });\n      setCurrentConversationId(newConvId);\n    } catch (createError) {\n      setError(`Failed to create new conversation: ${createError.message}`);\n      console.error(\"Error creating new conversation:\", createError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 5. Start a new conversation.\n  // This function now just calls the new createNewConversation function\n  const startNewChat = () => {\n    createNewConversation();\n    setMessages([]);\n    setNewMessage('');\n    setError(null);\n    setIsAIGenerating(false);\n    setIsSummarizing(false);\n    setIsGeneratingImage(false);\n    setIsSidebarOpen(true);\n  };\n\n  // 6. Handle sending a new message (and creating a new conversation if needed).\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user || !db || isAIGenerating || !currentConversationId) {\n      // If there's no current conversation, start a new one before sending the message\n      if (!currentConversationId) {\n        setError(\"Please start a new chat first.\");\n        return;\n      }\n      return;\n    }\n    const userMessageText = newMessage;\n    setNewMessage('');\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: userMessageText,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message'\n      });\n      // Update the conversation's lastUpdated timestamp\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId);\n      await setDoc(conversationDocRef, {\n        lastUpdated: serverTimestamp()\n      }, {\n        merge: true\n      });\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n    }\n  };\n\n  // 7. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const actionCodeSettings = {\n      url: window.location.origin,\n      handleCodeInApp: true,\n      iOS: {\n        bundleId: 'com.example.ios'\n      },\n      android: {\n        packageName: 'com.example.android',\n        installApp: true,\n        minimumVersion: '12'\n      }\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email);\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Registration failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 9. Handle Email/Password Login\n  const handleEmailPasswordLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Login failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 10. Handle Logout\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUser(null);\n      setMessages([]);\n      setConversations([]);\n      setCurrentConversationId(null);\n      setEmailSent(false);\n      setIsSigningInWithLink(false);\n      setAuthMode('email-link');\n      setError(null);\n    } catch (error) {\n      setError(`Logout failed: ${error.message}`);\n    }\n  };\n\n  // 11. Handle summarization of the current chat using the Gemini API\n  const handleSummarizeChat = async () => {\n    if (!currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsSummarizing(true);\n    setError(null);\n    try {\n      const chatHistoryText = messages.filter(msg => msg.type === 'user-message' || msg.type === 'ai-response').map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`).join('\\n');\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\n      const chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }];\n      const payload = {\n        contents: chatHistory\n      };\n      const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a summary.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: `**Chat Summary:**\\n\\n${responseText}`,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n    } catch (error) {\n      console.error(\"Error summarizing chat:\", error);\n      setError(`Summarization error: ${error.message}`);\n    } finally {\n      setIsSummarizing(false);\n    }\n  };\n\n  // 12. Handle image generation using the Gemini API\n  const handleGenerateImage = async () => {\n    const lastUserMessage = messages.slice().reverse().find(msg => msg.userId === user.uid);\n    if (!currentConversationId || !lastUserMessage || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsGeneratingImage(true);\n    setError(null);\n    const imagePrompt = lastUserMessage.text;\n    try {\n      const payload = {\n        instances: {\n          prompt: imagePrompt\n        },\n        parameters: {\n          \"sampleCount\": 1\n        }\n      };\n      const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n        const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n        await addDoc(messagesCollectionRef, {\n          text: `Here is an image for your prompt: \"${imagePrompt}\"`,\n          image: imageUrl,\n          userId: 'bot',\n          userName: 'AI Image Bot',\n          timestamp: serverTimestamp(),\n          type: 'ai-image'\n        });\n      } else {\n        throw new Error(\"Invalid response from image generation API.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      setError(`Image generation error: ${error.message}`);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // 13. Handle Text-to-Speech using the Gemini API\n  const handleTextToSpeech = async text => {\n    if (currentAudio) {\n      currentAudio.pause();\n      currentAudio.currentTime = 0;\n      setCurrentAudio(null);\n      return;\n    }\n    try {\n      var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _part$inlineData, _part$inlineData2;\n      const payload = {\n        contents: [{\n          parts: [{\n            text: text\n          }]\n        }],\n        generationConfig: {\n          responseModalities: [\"AUDIO\"],\n          speechConfig: {\n            voiceConfig: {\n              prebuiltVoiceConfig: {\n                voiceName: \"Puck\"\n              }\n            }\n          }\n        },\n        model: \"gemini-2.5-flash-preview-tts\"\n      };\n      const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\"; // Replace with your actual key\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const part = result === null || result === void 0 ? void 0 : (_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : _result$candidates$$c2[0];\n      const audioData = part === null || part === void 0 ? void 0 : (_part$inlineData = part.inlineData) === null || _part$inlineData === void 0 ? void 0 : _part$inlineData.data;\n      const mimeType = part === null || part === void 0 ? void 0 : (_part$inlineData2 = part.inlineData) === null || _part$inlineData2 === void 0 ? void 0 : _part$inlineData2.mimeType;\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\n        const sampleRateMatch = mimeType.match(/rate=(\\d+)/);\n        const sampleRate = sampleRateMatch ? parseInt(sampleRateMatch[1], 10) : 16000;\n        const pcmData = base64ToArrayBuffer(audioData);\n        const wavBlob = pcmToWav(pcmData, sampleRate);\n        const audioUrl = URL.createObjectURL(wavBlob);\n        const audio = new Audio(audioUrl);\n        setCurrentAudio(audio);\n        audio.play();\n        audio.onended = () => setCurrentAudio(null);\n      } else {\n        throw new Error(\"Invalid audio response from TTS API.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating TTS audio:\", error);\n      setError(`Text-to-Speech error: ${error.message}`);\n      setCurrentAudio(null);\n    }\n  };\n\n  // Handle AI response generation\n  const getAIResponse = async (userMessage, conversationId) => {\n    setIsAIGenerating(true);\n    setError(null);\n    let conversationHistory = [];\n    if (conversationId) {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n      const q = query(messagesCollectionRef);\n      const snapshot = await getDocs(q);\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        conversationHistory.push({\n          role: data.userId === user.uid ? 'user' : 'model',\n          parts: [{\n            text: data.text\n          }]\n        });\n      });\n    }\n\n    // Filter to only include user and model messages for the API call\n    const chatHistory = conversationHistory.filter(msg => msg.role === 'user' || msg.role === 'model');\n\n    // Add the latest user message\n    chatHistory.push({\n      role: \"user\",\n      parts: [{\n        text: userMessage\n      }]\n    });\n    const payload = {\n      contents: chatHistory\n    };\n\n    // Placeholder for API key, will be replaced by the Canvas environment\n    const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\"; // Replace with your actual key\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n    try {\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a response.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await addDoc(collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages'), {\n        text: responseText,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n    } catch (e) {\n      console.error(\"Error fetching AI response:\", e);\n      setError(`Failed to get AI response: ${e.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n  const handleManualLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      setError(`Login failed: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDisplayName = userObj => {\n    if (!userObj) return \"Guest\";\n    if (userObj.email) return userObj.email.split('@')[0];\n    if (userObj.isAnonymous) return `Guest_${userObj.uid.substring(0, 5)}`;\n    return userObj.uid.substring(0, 5);\n  };\n  const MemoizedMessage = ({\n    message\n  }) => {\n    const isUser = message.userId === (user === null || user === void 0 ? void 0 : user.uid);\n    const isAI = message.userId === 'bot';\n    const getAvatar = () => {\n      if (isUser) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center text-white font-bold\",\n          children: getDisplayName(user)[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this);\n      } else if (isAI) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center text-white font-bold\",\n          children: \"AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this);\n      }\n      return null;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-start mb-4 ${isUser ? 'justify-end' : 'justify-start'}`,\n      children: [!isUser && getAvatar(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `max-w-[70%] p-3 rounded-lg shadow-md ${isUser ? 'bg-indigo-100 text-indigo-800 rounded-br-none' : 'bg-white text-gray-800 rounded-bl-none'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `font-bold text-xs mb-1 ${isUser ? 'text-right' : 'text-left'}`,\n          children: message.userName || getDisplayName(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), message.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.image,\n          alt: \"Generated\",\n          className: \"mt-2 rounded-lg max-w-full h-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: typeof marked !== 'undefined' ? marked.parse(message.text) : message.text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), isUser && getAvatar()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this);\n  };\n  const MemoizedConversationItem = ({\n    conversation,\n    isSelected,\n    onClick\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onClick,\n      className: `p-3 rounded-lg cursor-pointer transition-colors duration-200 ${isSelected ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: `font-semibold ${isSelected ? 'text-white' : 'text-gray-900'}`,\n        children: conversation.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-xs mt-1 truncate ${isSelected ? 'text-indigo-100' : 'text-gray-600'}`,\n        children: conversation.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAuthUI = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-white rounded-xl shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-extrabold text-center text-gray-900 mb-6\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-600 mb-8\",\n        children: authMode === 'email-link' ? 'Enter your email to receive a sign-in link.' : 'Sign in with your email and password.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authMode === 'email-link' ? handleSendSignInLink : authMode === 'password-login' ? handleEmailPasswordLogin : handleEmailPasswordSignUp,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          className: \"w-full p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 11\n        }, this), authMode !== 'email-link' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: \"w-full p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full p-4 bg-indigo-500 text-white rounded-xl shadow-lg hover:bg-indigo-600 transition-colors duration-200 font-bold text-lg\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this) : authMode === 'email-link' ? 'Send Sign-in Link' : authMode === 'password-login' ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-center\",\n        children: [authMode === 'email-link' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: [\"Check your email for the sign-in link.\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setAuthMode('password-login'),\n            className: \"ml-2 text-indigo-600 hover:text-indigo-800 font-medium\",\n            children: \"Prefer email/password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 13\n        }, this), authMode === 'password-login' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setAuthMode('email-link'),\n            className: \"text-indigo-600 hover:text-indigo-800 font-medium\",\n            children: \"Prefer a sign-in link?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mx-2 text-gray-400\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setAuthMode('password-signup'),\n            className: \"text-indigo-600 hover:text-indigo-800 font-medium\",\n            children: \"Don't have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this), authMode === 'password-signup' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setAuthMode('password-login'),\n            className: \"text-indigo-600 hover:text-indigo-800 font-medium\",\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-xs text-gray-400 mt-4\",\n        children: [\"User ID: \", (user === null || user === void 0 ? void 0 : user.uid) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 769,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-4 border-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If user is not logged in, show the authentication UI\n  if (!user || !isAuthReady) {\n    return renderAuthUI();\n  }\n  const userId = (user === null || user === void 0 ? void 0 : user.uid) || 'anonymous';\n  const userName = getDisplayName(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100 font-sans antialiased\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed inset-y-0 left-0 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} md:relative md:translate-x-0 transition-transform duration-300 ease-in-out bg-gray-800 text-white w-64 flex flex-col z-40`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Chat History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"md:hidden text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M4 6h16M4 12h16M4 18h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 flex flex-col space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewChat,\n          className: \"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 font-bold\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"w-full p-3 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200 font-bold\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-2\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(MemoizedConversationItem, {\n          conversation: conv,\n          isSelected: conv.id === currentConversationId,\n          onClick: () => setCurrentConversationId(conv.id)\n        }, conv.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-700 text-sm text-gray-400 truncate\",\n        children: [\"User ID: \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-gray-50 rounded-l-2xl shadow-xl overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white border-b border-gray-200 flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: currentConversationId ? ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || \"Loading...\" : \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"md:hidden text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M4 6h16M4 12h16M4 18h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-6 bg-gray-100 space-y-4\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-red-100 text-red-700 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), messages.map(message => /*#__PURE__*/_jsxDEV(MemoizedMessage, {\n          message: message\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 13\n        }, this)), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center text-white font-bold\",\n            children: \"AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[70%] p-3 ml-2 rounded-lg shadow-md bg-white text-gray-800 rounded-bl-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-bold text-xs mb-1 text-left\",\n              children: \"AI Chatbot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 13\n        }, this), isSummarizing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold\",\n            children: \"AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[70%] p-3 ml-2 rounded-lg shadow-md bg-white text-gray-800 rounded-bl-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-bold text-xs mb-1 text-left\",\n              children: \"AI Summarizer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this), isGeneratingImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 w-8 h-8 rounded-full bg-green-500 flex items-center justify-center text-white font-bold\",\n            children: \"AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[70%] p-3 ml-2 rounded-lg shadow-md bg-white text-gray-800 rounded-bl-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-bold text-xs mb-1 text-left\",\n              children: \"AI Image Bot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white border-t border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSendMessage(e);\n              }\n            },\n            placeholder: \"Type a message...\",\n            className: \"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors duration-200\",\n            disabled: isAIGenerating || isSummarizing || isGeneratingImage || !currentConversationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\",\n            disabled: isAIGenerating || isSummarizing || isGeneratingImage || !newMessage.trim() || !currentConversationId,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-6 w-6\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex space-x-2 justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSummarizeChat(),\n            disabled: !currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-full text-sm font-semibold hover:bg-blue-600 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed\",\n            children: \"Summarize Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleGenerateImage(),\n            disabled: !currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage,\n            className: \"px-4 py-2 bg-green-500 text-white rounded-full text-sm font-semibold hover:bg-green-600 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed\",\n            children: \"Generate Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 871,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MzxMuCs3JMeTaj/BRv34hewPtYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","limit","jsxDEV","_jsxDEV","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","generateId","replace","c","r","Math","random","v","toString","base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","pcmToWav","pcmData","sampleRate","pcm16","Int16Array","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","setInt16","Blob","type","App","_s","_conversations$find","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","currentAudio","setCurrentAudio","messagesEndRef","audioContextRef","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchWithExponentialBackoff","url","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","Error","message","statusText","includes","Promise","resolve","setTimeout","Object","keys","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","console","location","href","storedEmail","localStorage","getItem","modalDiv","document","createElement","className","innerHTML","body","appendChild","emailConfirmInput","querySelector","emailConfirmButton","onclick","value","removeChild","continueSignIn","emailToUse","then","result","removeItem","history","replaceState","title","pathname","catch","conversationsCollectionRef","uid","querySnapshot","fetchedConversations","forEach","push","id","data","sort","a","b","_b$lastUpdated","_a$lastUpdated","lastUpdated","seconds","firestoreError","messagesCollectionRef","fetchedMessages","_a$timestamp","_b$timestamp","timestamp","createNewConversation","newConvId","newConversationDocRef","createdAt","createError","startNewChat","handleSendMessage","preventDefault","trim","userMessageText","text","userId","userName","substring","conversationDocRef","merge","handleSendSignInLink","actionCodeSettings","origin","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","setItem","handleEmailPasswordSignUp","handleEmailPasswordLogin","handleLogout","handleSummarizeChat","chatHistoryText","filter","msg","map","join","prompt","chatHistory","role","parts","payload","contents","apiUrl","method","headers","stringify","responseText","candidates","content","handleGenerateImage","lastUserMessage","slice","reverse","find","imagePrompt","instances","parameters","predictions","bytesBase64Encoded","imageUrl","image","handleTextToSpeech","pause","currentTime","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_part$inlineData","_part$inlineData2","generationConfig","responseModalities","speechConfig","voiceConfig","prebuiltVoiceConfig","voiceName","model","part","audioData","inlineData","mimeType","startsWith","sampleRateMatch","match","parseInt","wavBlob","audioUrl","URL","createObjectURL","audio","Audio","play","onended","getAIResponse","userMessage","conversationId","conversationHistory","q","snapshot","getDocs","handleManualLogin","getDisplayName","userObj","split","isAnonymous","MemoizedMessage","isUser","isAI","getAvatar","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","dangerouslySetInnerHTML","__html","marked","MemoizedConversationItem","conversation","isSelected","onClick","renderAuthUI","onSubmit","onChange","target","placeholder","required","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","conv","ref","onKeyDown","key","shiftKey","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token, marked */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  limit\r\n} from 'firebase/firestore';\r\n\r\n// --- Firebase Configuration ---\r\n// The global variables are provided by the Canvas environment.\r\n// We fall back to a local config for development purposes if they are not defined.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Utility function for generating unique IDs (like conversation IDs)\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\n// Converts a base64 string to an ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// Converts PCM audio data to a WAV blob\r\nfunction pcmToWav(pcmData, sampleRate) {\r\n  const pcm16 = new Int16Array(pcmData);\r\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\r\n  const view = new DataView(buffer);\r\n  const writeString = (view, offset, string) => {\r\n      for (let i = 0; i < string.length; i++) {\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n  };\r\n\r\n  let offset = 0;\r\n  writeString(view, offset, 'RIFF'); offset += 4;\r\n  view.setUint32(offset, 36 + pcm16.length * 2, true); offset += 4;\r\n  writeString(view, offset, 'WAVE'); offset += 4;\r\n  writeString(view, offset, 'fmt '); offset += 4;\r\n  view.setUint32(offset, 16, true); offset += 4; // Sub-chunk size\r\n  view.setUint16(offset, 1, true); offset += 2; // Audio format (1 = PCM)\r\n  view.setUint16(offset, 1, true); offset += 2; // Number of channels\r\n  view.setUint32(offset, sampleRate, true); offset += 4; // Sample rate\r\n  view.setUint32(offset, sampleRate * 2, true); offset += 4; // Byte rate\r\n  view.setUint16(offset, 2, true); offset += 2; // Block align\r\n  view.setUint16(offset, 16, true); offset += 2; // Bits per sample\r\n  writeString(view, offset, 'data'); offset += 4;\r\n  view.setUint32(offset, pcm16.length * 2, true); offset += 4; // Data size\r\n\r\n  for (let i = 0; i < pcm16.length; i++) {\r\n      view.setInt16(offset, pcm16[i], true);\r\n      offset += 2;\r\n  }\r\n\r\n  return new Blob([view], { type: 'audio/wav' });\r\n};\r\n\r\n\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [authMode, setAuthMode] = useState('email-link');\r\n\r\n  // New states for conversation history and sidebar\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [currentAudio, setCurrentAudio] = useState(null);\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages whenever messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Exponential backoff utility for API calls\r\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n      if (retries > 0 && error.message.includes(\"API error\")) {\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          setIsAuthReady(true);\r\n          setError(null);\r\n        } else {\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) {\r\n            try {\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n        }\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      if (!storedEmail) {\r\n        // Using a custom modal instead of prompt\r\n        const modalDiv = document.createElement('div');\r\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\r\n        modalDiv.innerHTML = `\r\n          <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">\r\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\r\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\r\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\r\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(modalDiv);\r\n\r\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\r\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\r\n\r\n        emailConfirmButton.onclick = () => {\r\n          storedEmail = emailConfirmInput.value;\r\n          if (storedEmail) {\r\n            document.body.removeChild(modalDiv);\r\n            continueSignIn(storedEmail);\r\n          } else {\r\n            console.error(\"Email not provided. Please try again.\");\r\n          }\r\n        };\r\n\r\n        const continueSignIn = (emailToUse) => {\r\n          signInWithEmailLink(auth, emailToUse, window.location.href)\r\n            .then((result) => {\r\n              window.localStorage.removeItem('emailForSignIn');\r\n              setUser(result.user);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              setError(null);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            })\r\n            .catch((error) => {\r\n              setError(`Error completing sign-in with link: ${error.message}`);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            });\r\n        };\r\n        return; // Exit the effect to wait for user input\r\n      }\r\n\r\n      signInWithEmailLink(auth, storedEmail, window.location.href)\r\n        .then((result) => {\r\n          window.localStorage.removeItem('emailForSignIn');\r\n          setUser(result.user);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          setError(null);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch((error) => {\r\n          setError(`Error completing sign-in with link: ${error.message}`);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        });\r\n    }\r\n  }, [auth, isAuthReady]);\r\n\r\n  // 3. Fetch conversations for the current user.\r\n  useEffect(() => {\r\n    if (!db || !user || !isAuthReady) return;\r\n\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const unsubscribe = onSnapshot(conversationsCollectionRef, (querySnapshot) => {\r\n      const fetchedConversations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedConversations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedConversations.sort((a, b) => (b.lastUpdated?.seconds || 0) - (a.lastUpdated?.seconds || 0));\r\n\r\n      setConversations(fetchedConversations);\r\n\r\n      if (!currentConversationId && fetchedConversations.length > 0) {\r\n        setCurrentConversationId(fetchedConversations[0].id);\r\n      } else if (fetchedConversations.length === 0) {\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load conversations: ${firestoreError.message}`);\r\n      console.error(\"Firestore conversations error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, isAuthReady, appId, currentConversationId]);\r\n\r\n  // 4. Fetch messages for the current conversation.\r\n  useEffect(() => {\r\n    if (!db || !user || !currentConversationId) {\r\n      setMessages([]); // Clear messages if no conversation is selected\r\n      return;\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n    const unsubscribe = onSnapshot(messagesCollectionRef, (querySnapshot) => {\r\n      const fetchedMessages = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedMessages.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedMessages.sort((a, b) => (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0));\r\n\r\n      setMessages(fetchedMessages);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\r\n      console.error(\"Firestore messages error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, currentConversationId, appId]);\r\n\r\n  // New function to create a new conversation document in Firestore\r\n  const createNewConversation = async () => {\r\n    if (!db || !user) {\r\n      setError('Database or user not ready.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const newConvId = generateId();\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n\r\n    try {\r\n      await setDoc(newConversationDocRef, {\r\n        title: \"New Chat\",\r\n        createdAt: serverTimestamp(),\r\n        lastUpdated: serverTimestamp(),\r\n      });\r\n      setCurrentConversationId(newConvId);\r\n    } catch (createError) {\r\n      setError(`Failed to create new conversation: ${createError.message}`);\r\n      console.error(\"Error creating new conversation:\", createError);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  // 5. Start a new conversation.\r\n  // This function now just calls the new createNewConversation function\r\n  const startNewChat = () => {\r\n    createNewConversation();\r\n    setMessages([]);\r\n    setNewMessage('');\r\n    setError(null);\r\n    setIsAIGenerating(false);\r\n    setIsSummarizing(false);\r\n    setIsGeneratingImage(false);\r\n    setIsSidebarOpen(true);\r\n  };\r\n\r\n  // 6. Handle sending a new message (and creating a new conversation if needed).\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !user || !db || isAIGenerating || !currentConversationId) {\r\n      // If there's no current conversation, start a new one before sending the message\r\n      if (!currentConversationId) {\r\n        setError(\"Please start a new chat first.\");\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const userMessageText = newMessage;\r\n    setNewMessage('');\r\n\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: userMessageText,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message'\r\n      });\r\n      // Update the conversation's lastUpdated timestamp\r\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId);\r\n      await setDoc(conversationDocRef, { lastUpdated: serverTimestamp() }, { merge: true });\r\n\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  // 7. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    const actionCodeSettings = {\r\n      url: window.location.origin,\r\n      handleCodeInApp: true,\r\n      iOS: { bundleId: 'com.example.ios' },\r\n      android: { packageName: 'com.example.android', installApp: true, minimumVersion: '12' }\r\n    };\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Registration failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 9. Handle Email/Password Login\r\n  const handleEmailPasswordLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Login failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 10. Handle Logout\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setMessages([]);\r\n      setConversations([]);\r\n      setCurrentConversationId(null);\r\n      setEmailSent(false);\r\n      setIsSigningInWithLink(false);\r\n      setAuthMode('email-link');\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Logout failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 11. Handle summarization of the current chat using the Gemini API\r\n  const handleSummarizeChat = async () => {\r\n    if (!currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n    setIsSummarizing(true);\r\n    setError(null);\r\n    try {\r\n      const chatHistoryText = messages\r\n        .filter(msg => msg.type === 'user-message' || msg.type === 'ai-response')\r\n        .map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`)\r\n        .join('\\n');\r\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\r\n      const chatHistory = [{ role: \"user\", parts: [{ text: prompt }] }];\r\n      const payload = { contents: chatHistory };\r\n      const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't generate a summary.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: `**Chat Summary:**\\n\\n${responseText}`,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response'\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error summarizing chat:\", error);\r\n      setError(`Summarization error: ${error.message}`);\r\n    } finally {\r\n      setIsSummarizing(false);\r\n    }\r\n  };\r\n\r\n  // 12. Handle image generation using the Gemini API\r\n  const handleGenerateImage = async () => {\r\n    const lastUserMessage = messages.slice().reverse().find(msg => msg.userId === user.uid);\r\n    if (!currentConversationId || !lastUserMessage || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n    setIsGeneratingImage(true);\r\n    setError(null);\r\n    const imagePrompt = lastUserMessage.text;\r\n    try {\r\n      const payload = { instances: { prompt: imagePrompt }, parameters: { \"sampleCount\": 1} };\r\n      const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\r\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\r\n        const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n        await addDoc(messagesCollectionRef, {\r\n          text: `Here is an image for your prompt: \"${imagePrompt}\"`,\r\n          image: imageUrl,\r\n          userId: 'bot',\r\n          userName: 'AI Image Bot',\r\n          timestamp: serverTimestamp(),\r\n          type: 'ai-image'\r\n        });\r\n      } else {\r\n        throw new Error(\"Invalid response from image generation API.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating image:\", error);\r\n      setError(`Image generation error: ${error.message}`);\r\n    } finally {\r\n      setIsGeneratingImage(false);\r\n    }\r\n  };\r\n\r\n  // 13. Handle Text-to-Speech using the Gemini API\r\n  const handleTextToSpeech = async (text) => {\r\n    if (currentAudio) {\r\n      currentAudio.pause();\r\n      currentAudio.currentTime = 0;\r\n      setCurrentAudio(null);\r\n      return;\r\n    }\r\n    try {\r\n      const payload = {\r\n        contents: [{\r\n          parts: [{ text: text }]\r\n        }],\r\n        generationConfig: {\r\n          responseModalities: [\"AUDIO\"],\r\n          speechConfig: {\r\n            voiceConfig: {\r\n              prebuiltVoiceConfig: { voiceName: \"Puck\" }\r\n            }\r\n          }\r\n        },\r\n        model: \"gemini-2.5-flash-preview-tts\"\r\n      };\r\n      const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\"; // Replace with your actual key\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      const part = result?.candidates?.[0]?.content?.parts?.[0];\r\n      const audioData = part?.inlineData?.data;\r\n      const mimeType = part?.inlineData?.mimeType;\r\n\r\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\r\n        const sampleRateMatch = mimeType.match(/rate=(\\d+)/);\r\n        const sampleRate = sampleRateMatch ? parseInt(sampleRateMatch[1], 10) : 16000;\r\n        const pcmData = base64ToArrayBuffer(audioData);\r\n        const wavBlob = pcmToWav(pcmData, sampleRate);\r\n        const audioUrl = URL.createObjectURL(wavBlob);\r\n        const audio = new Audio(audioUrl);\r\n        setCurrentAudio(audio);\r\n        audio.play();\r\n        audio.onended = () => setCurrentAudio(null);\r\n      } else {\r\n        throw new Error(\"Invalid audio response from TTS API.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating TTS audio:\", error);\r\n      setError(`Text-to-Speech error: ${error.message}`);\r\n      setCurrentAudio(null);\r\n    }\r\n  };\r\n\r\n\r\n  // Handle AI response generation\r\n  const getAIResponse = async (userMessage, conversationId) => {\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n    let conversationHistory = [];\r\n    if (conversationId) {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n      const q = query(messagesCollectionRef);\r\n      const snapshot = await getDocs(q);\r\n      snapshot.forEach(doc => {\r\n        const data = doc.data();\r\n        conversationHistory.push({\r\n          role: data.userId === user.uid ? 'user' : 'model',\r\n          parts: [{ text: data.text }]\r\n        });\r\n      });\r\n    }\r\n\r\n    // Filter to only include user and model messages for the API call\r\n    const chatHistory = conversationHistory.filter(msg => msg.role === 'user' || msg.role === 'model');\r\n\r\n    // Add the latest user message\r\n    chatHistory.push({ role: \"user\", parts: [{ text: userMessage }] });\r\n\r\n    const payload = { contents: chatHistory };\r\n\r\n    // Placeholder for API key, will be replaced by the Canvas environment\r\n    const apiKey = \"AIzaSyCBBfnCqQlfrOCmSPzNuyC8F4jT0OHUX7g\"; // Replace with your actual key\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n    try {\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't generate a response.\";\r\n      if (result.candidates && result.candidates.length > 0 &&\r\n          result.candidates[0].content && result.candidates[0].content.parts &&\r\n          result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n      await addDoc(collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages'), {\r\n        text: responseText,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response'\r\n      });\r\n    } catch (e) {\r\n      console.error(\"Error fetching AI response:\", e);\r\n      setError(`Failed to get AI response: ${e.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleManualLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n    } catch (error) {\r\n      setError(`Login failed: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const getDisplayName = (userObj) => {\r\n    if (!userObj) return \"Guest\";\r\n    if (userObj.email) return userObj.email.split('@')[0];\r\n    if (userObj.isAnonymous) return `Guest_${userObj.uid.substring(0, 5)}`;\r\n    return userObj.uid.substring(0, 5);\r\n  };\r\n\r\n  const MemoizedMessage = ({ message }) => {\r\n    const isUser = message.userId === user?.uid;\r\n    const isAI = message.userId === 'bot';\r\n\r\n    const getAvatar = () => {\r\n      if (isUser) {\r\n        return (\r\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center text-white font-bold\">\r\n            {getDisplayName(user)[0].toUpperCase()}\r\n          </div>\r\n        );\r\n      } else if (isAI) {\r\n        return (\r\n          <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center text-white font-bold\">\r\n            AI\r\n          </div>\r\n        );\r\n      }\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <div className={`flex items-start mb-4 ${isUser ? 'justify-end' : 'justify-start'}`}>\r\n        {!isUser && getAvatar()}\r\n        <div className={`max-w-[70%] p-3 rounded-lg shadow-md ${isUser ? 'bg-indigo-100 text-indigo-800 rounded-br-none' : 'bg-white text-gray-800 rounded-bl-none'}`}>\r\n          <div className={`font-bold text-xs mb-1 ${isUser ? 'text-right' : 'text-left'}`}>\r\n            {message.userName || getDisplayName(user)}\r\n          </div>\r\n          {message.image && (\r\n            <img src={message.image} alt=\"Generated\" className=\"mt-2 rounded-lg max-w-full h-auto\" />\r\n          )}\r\n          {message.text && (\r\n            <div dangerouslySetInnerHTML={{ __html: (typeof marked !== 'undefined') ? marked.parse(message.text) : message.text }} />\r\n          )}\r\n        </div>\r\n        {isUser && getAvatar()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const MemoizedConversationItem = ({ conversation, isSelected, onClick }) => {\r\n    return (\r\n      <div\r\n        onClick={onClick}\r\n        className={`p-3 rounded-lg cursor-pointer transition-colors duration-200 ${\r\n          isSelected ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n        }`}\r\n      >\r\n        <h4 className={`font-semibold ${isSelected ? 'text-white' : 'text-gray-900'}`}>\r\n          {conversation.title}\r\n        </h4>\r\n        <p className={`text-xs mt-1 truncate ${isSelected ? 'text-indigo-100' : 'text-gray-600'}`}>\r\n          {conversation.id}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  const renderAuthUI = () => (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"p-8 bg-white rounded-xl shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-3xl font-extrabold text-center text-gray-900 mb-6\">\r\n          Sign In\r\n        </h2>\r\n        <p className=\"text-center text-gray-600 mb-8\">\r\n          {authMode === 'email-link' ? 'Enter your email to receive a sign-in link.' : 'Sign in with your email and password.'}\r\n        </p>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4\">\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={authMode === 'email-link' ? handleSendSignInLink : (authMode === 'password-login' ? handleEmailPasswordLogin : handleEmailPasswordSignUp)} className=\"space-y-6\">\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n            className=\"w-full p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            required\r\n          />\r\n          {authMode !== 'email-link' && (\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              className=\"w-full p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              required\r\n            />\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full p-4 bg-indigo-500 text-white rounded-xl shadow-lg hover:bg-indigo-600 transition-colors duration-200 font-bold text-lg\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white\"></div>\r\n              </div>\r\n            ) : (\r\n              authMode === 'email-link' ? 'Send Sign-in Link' : (authMode === 'password-login' ? 'Login' : 'Sign Up')\r\n            )}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-8 text-center\">\r\n          {authMode === 'email-link' && (\r\n            <p className=\"text-sm text-gray-500\">\r\n              Check your email for the sign-in link.\r\n              <a href=\"#\" onClick={() => setAuthMode('password-login')} className=\"ml-2 text-indigo-600 hover:text-indigo-800 font-medium\">\r\n                Prefer email/password?\r\n              </a>\r\n            </p>\r\n          )}\r\n          {authMode === 'password-login' && (\r\n            <p className=\"text-sm text-gray-500\">\r\n              <a href=\"#\" onClick={() => setAuthMode('email-link')} className=\"text-indigo-600 hover:text-indigo-800 font-medium\">\r\n                Prefer a sign-in link?\r\n              </a>\r\n              <span className=\"mx-2 text-gray-400\">|</span>\r\n              <a href=\"#\" onClick={() => setAuthMode('password-signup')} className=\"text-indigo-600 hover:text-indigo-800 font-medium\">\r\n                Don't have an account?\r\n              </a>\r\n            </p>\r\n          )}\r\n          {authMode === 'password-signup' && (\r\n            <p className=\"text-sm text-gray-500\">\r\n              <a href=\"#\" onClick={() => setAuthMode('password-login')} className=\"text-indigo-600 hover:text-indigo-800 font-medium\">\r\n                Already have an account?\r\n              </a>\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <p className=\"text-center text-xs text-gray-400 mt-4\">\r\n          User ID: {user?.uid || 'N/A'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-4 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If user is not logged in, show the authentication UI\r\n  if (!user || !isAuthReady) {\r\n    return renderAuthUI();\r\n  }\r\n\r\n  const userId = user?.uid || 'anonymous';\r\n  const userName = getDisplayName(user);\r\n\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100 font-sans antialiased\">\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed inset-y-0 left-0 transform ${\r\n          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'\r\n        } md:relative md:translate-x-0 transition-transform duration-300 ease-in-out bg-gray-800 text-white w-64 flex flex-col z-40`}\r\n      >\r\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-700\">\r\n          <h2 className=\"text-xl font-bold\">Chat History</h2>\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"md:hidden text-white\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"p-4 flex flex-col space-y-4\">\r\n          <button\r\n            onClick={startNewChat}\r\n            className=\"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 font-bold\"\r\n          >\r\n            New Chat\r\n          </button>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"w-full p-3 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200 font-bold\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\r\n          {conversations.map((conv) => (\r\n            <MemoizedConversationItem\r\n              key={conv.id}\r\n              conversation={conv}\r\n              isSelected={conv.id === currentConversationId}\r\n              onClick={() => setCurrentConversationId(conv.id)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"p-4 border-t border-gray-700 text-sm text-gray-400 truncate\">\r\n          User ID: {userId}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"flex-1 flex flex-col bg-gray-50 rounded-l-2xl shadow-xl overflow-hidden\">\r\n        {/* Chat Header */}\r\n        <div className=\"p-4 bg-white border-b border-gray-200 flex items-center justify-between\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">\r\n            {currentConversationId ? conversations.find(c => c.id === currentConversationId)?.title || \"Loading...\" : \"New Chat\"}\r\n          </h1>\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"md:hidden text-gray-600\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Chat Messages */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 bg-gray-100 space-y-4\">\r\n          {error && (\r\n            <div className=\"p-4 bg-red-100 text-red-700 rounded-lg shadow-md\">\r\n              <p className=\"font-semibold\">Error:</p>\r\n              <p>{error}</p>\r\n            </div>\r\n          )}\r\n          {messages.map((message) => (\r\n            <MemoizedMessage key={message.id} message={message} />\r\n          ))}\r\n\r\n          {isAIGenerating && (\r\n            <div className=\"flex items-start justify-start\">\r\n              <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center text-white font-bold\">\r\n                AI\r\n              </div>\r\n              <div className=\"max-w-[70%] p-3 ml-2 rounded-lg shadow-md bg-white text-gray-800 rounded-bl-none\">\r\n                <div className=\"font-bold text-xs mb-1 text-left\">\r\n                  AI Chatbot\r\n                </div>\r\n                <div className=\"dot-flashing\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {isSummarizing && (\r\n            <div className=\"flex items-start justify-start\">\r\n              <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold\">\r\n                AI\r\n              </div>\r\n              <div className=\"max-w-[70%] p-3 ml-2 rounded-lg shadow-md bg-white text-gray-800 rounded-bl-none\">\r\n                <div className=\"font-bold text-xs mb-1 text-left\">\r\n                  AI Summarizer\r\n                </div>\r\n                <div className=\"dot-flashing\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {isGeneratingImage && (\r\n            <div className=\"flex items-start justify-start\">\r\n              <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-green-500 flex items-center justify-center text-white font-bold\">\r\n                AI\r\n              </div>\r\n              <div className=\"max-w-[70%] p-3 ml-2 rounded-lg shadow-md bg-white text-gray-800 rounded-bl-none\">\r\n                <div className=\"font-bold text-xs mb-1 text-left\">\r\n                  AI Image Bot\r\n                </div>\r\n                <div className=\"dot-flashing\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Message Input */}\r\n        <div className=\"p-4 bg-white border-t border-gray-200\">\r\n          <form onSubmit={handleSendMessage} className=\"flex items-center\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' && !e.shiftKey) {\r\n                  e.preventDefault();\r\n                  handleSendMessage(e);\r\n                }\r\n              }}\r\n              placeholder=\"Type a message...\"\r\n              className=\"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors duration-200\"\r\n              disabled={isAIGenerating || isSummarizing || isGeneratingImage || !currentConversationId}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\"\r\n              disabled={isAIGenerating || isSummarizing || isGeneratingImage || !newMessage.trim() || !currentConversationId}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n              </svg>\r\n            </button>\r\n          </form>\r\n          {/* Action buttons */}\r\n          <div className=\"mt-4 flex space-x-2 justify-end\">\r\n            <button\r\n              onClick={() => handleSummarizeChat()}\r\n              disabled={!currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage}\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-full text-sm font-semibold hover:bg-blue-600 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n            >\r\n              Summarize Chat\r\n            </button>\r\n            <button\r\n              onClick={() => handleGenerateImage()}\r\n              disabled={!currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage}\r\n              className=\"px-4 py-2 bg-green-500 text-white rounded-full text-sm font-semibold hover:bg-green-600 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n            >\r\n              Generate Image\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}