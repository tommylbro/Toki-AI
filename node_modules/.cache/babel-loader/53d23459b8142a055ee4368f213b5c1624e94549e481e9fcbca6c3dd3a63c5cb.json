{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token, marked */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, limit } from 'firebase/firestore';\nimport { createPortal } from 'react-dom';\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus, Volume2 } from 'lucide-react';\n\n// --- Firebase Configuration ---\n// The global variables are provided by the Canvas environment.\n// We fall back to a local config for development purposes if they are not defined.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Utility function for generating unique IDs (like conversation IDs)\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\n// Converts a base64 string to an ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// Converts PCM audio data to a WAV blob\nfunction pcmToWav(pcmData, sampleRate) {\n  const pcm16 = new Int16Array(pcmData);\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\n  const view = new DataView(buffer);\n  const writeString = (view, offset, string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n  let offset = 0;\n  writeString(view, offset, 'RIFF');\n  offset += 4;\n  view.setUint32(offset, 36 + pcm16.length * 2, true);\n  offset += 4;\n  writeString(view, offset, 'WAVE');\n  offset += 4;\n  writeString(view, offset, 'fmt ');\n  offset += 4;\n  view.setUint32(offset, 16, true);\n  offset += 4; // Sub-chunk size\n  view.setUint16(offset, 1, true);\n  offset += 2; // Audio format (1 = PCM)\n  view.setUint16(offset, 1, true);\n  offset += 2; // Number of channels\n  view.setUint32(offset, sampleRate, true);\n  offset += 4; // Sample rate\n  view.setUint32(offset, sampleRate * 2, true);\n  offset += 4; // Byte rate\n  view.setUint16(offset, 2, true);\n  offset += 2; // Block align\n  view.setUint16(offset, 16, true);\n  offset += 2; // Bits per sample\n  writeString(view, offset, 'data');\n  offset += 4;\n  view.setUint32(offset, pcm16.length * 2, true);\n  offset += 4; // Data size\n\n  for (let i = 0; i < pcm16.length; i++) {\n    view.setInt16(offset, pcm16[i], true);\n    offset += 2;\n  }\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [authMode, setAuthMode] = useState('email-link');\n\n  // New states for conversation history and sidebar\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const messagesEndRef = useRef(null);\n  const audioContextRef = useRef(null);\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Exponential backoff utility for API calls\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n      }\n      return response;\n    } catch (error) {\n      if (retries > 0 && error.message.includes(\"API error\")) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n      }\n      throw error;\n    }\n  };\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          setUser(currentUser);\n          setIsAuthReady(true);\n          setError(null);\n        } else {\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            try {\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n          setIsAuthReady(true);\n        }\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n      if (!storedEmail) {\n        // Using a custom modal instead of prompt\n        const modalDiv = document.createElement('div');\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\n        modalDiv.innerHTML = `\n          <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\n          </div>\n        `;\n        document.body.appendChild(modalDiv);\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\n        emailConfirmButton.onclick = () => {\n          storedEmail = emailConfirmInput.value;\n          if (storedEmail) {\n            document.body.removeChild(modalDiv);\n            continueSignIn(storedEmail);\n          } else {\n            console.error(\"Email not provided. Please try again.\");\n          }\n        };\n        const continueSignIn = emailToUse => {\n          signInWithEmailLink(auth, emailToUse, window.location.href).then(result => {\n            window.localStorage.removeItem('emailForSignIn');\n            setUser(result.user);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            setError(null);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          }).catch(error => {\n            setError(`Error completing sign-in with link: ${error.message}`);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          });\n        };\n        return; // Exit the effect to wait for user input\n      }\n      signInWithEmailLink(auth, storedEmail, window.location.href).then(result => {\n        window.localStorage.removeItem('emailForSignIn');\n        setUser(result.user);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        setError(null);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }).catch(error => {\n        setError(`Error completing sign-in with link: ${error.message}`);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      });\n    }\n  }, [auth, isAuthReady]);\n\n  // 3. Fetch conversations for the current user.\n  useEffect(() => {\n    if (!db || !user || !isAuthReady) return;\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const unsubscribe = onSnapshot(conversationsCollectionRef, querySnapshot => {\n      const fetchedConversations = [];\n      querySnapshot.forEach(doc => {\n        fetchedConversations.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedConversations.sort((a, b) => {\n        var _b$lastUpdated, _a$lastUpdated;\n        return (((_b$lastUpdated = b.lastUpdated) === null || _b$lastUpdated === void 0 ? void 0 : _b$lastUpdated.seconds) || 0) - (((_a$lastUpdated = a.lastUpdated) === null || _a$lastUpdated === void 0 ? void 0 : _a$lastUpdated.seconds) || 0);\n      });\n      setConversations(fetchedConversations);\n      if (!currentConversationId && fetchedConversations.length > 0) {\n        setCurrentConversationId(fetchedConversations[0].id);\n      } else if (fetchedConversations.length === 0) {\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }, firestoreError => {\n      setError(`Failed to load conversations: ${firestoreError.message}`);\n      console.error(\"Firestore conversations error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, isAuthReady, appId, currentConversationId]);\n\n  // 4. Fetch messages for the current conversation.\n  useEffect(() => {\n    if (!db || !user || !currentConversationId) {\n      setMessages([]); // Clear messages if no conversation is selected\n      return;\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n    const unsubscribe = onSnapshot(messagesCollectionRef, querySnapshot => {\n      const fetchedMessages = [];\n      querySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedMessages.sort((a, b) => {\n        var _a$timestamp, _b$timestamp;\n        return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.seconds) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.seconds) || 0);\n      });\n      setMessages(fetchedMessages);\n    }, firestoreError => {\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\n      console.error(\"Firestore messages error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, currentConversationId, appId]);\n\n  // 5. Start a new conversation.\n  const startNewChat = () => {\n    setCurrentConversationId(null);\n    setMessages([]);\n    setNewMessage('');\n    setError(null);\n    setIsAIGenerating(false);\n    setIsSummarizing(false);\n    setIsGeneratingImage(false);\n    setIsSidebarOpen(false);\n  };\n\n  // 6. Handle sending a new message (and creating a new conversation if needed).\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user || !db || isAIGenerating) return;\n    let conversationIdToUse = currentConversationId;\n    const userMessageText = newMessage;\n    setNewMessage('');\n\n    // If no conversation is active, create a new one.\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      const initialTitle = userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '');\n      try {\n        await setDoc(newConversationDocRef, {\n          title: initialTitle,\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId);\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        console.error(\"Error creating new conversation:\", createError);\n        return;\n      }\n    } else {\n      // Otherwise, just update the lastUpdated timestamp of the current conversation.\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\n      try {\n        await setDoc(conversationDocRef, {\n          lastUpdated: serverTimestamp()\n        }, {\n          merge: true\n        });\n      } catch (updateError) {\n        console.error(\"Error updating conversation timestamp:\", updateError);\n      }\n    }\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: userMessageText,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message'\n      });\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n      return;\n    }\n    const command = userMessageText.toLowerCase().trim();\n    if (command === 'summarize') {\n      handleSummarizeChat();\n    } else if (command.startsWith('image of')) {\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\n      handleGenerateImage(imagePrompt);\n    } else {\n      handleAIResponse(userMessageText);\n    }\n  };\n\n  // 7. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const actionCodeSettings = {\n      url: window.location.origin,\n      handleCodeInApp: true\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email);\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Registration failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 9. Handle Email/Password Login\n  const handleEmailPasswordLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Login failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 10. Handle Logout\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUser(null);\n      setMessages([]);\n      setConversations([]);\n      setCurrentConversationId(null);\n      setEmailSent(false);\n      setIsSigningInWithLink(false);\n      setAuthMode('email-link');\n      setError(null);\n    } catch (error) {\n      setError(`Logout failed: ${error.message}`);\n    }\n  };\n\n  // 11. Handle summarization of the current chat using the Gemini API\n  const handleSummarizeChat = async () => {\n    if (!currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsSummarizing(true);\n    setError(null);\n    try {\n      const chatHistoryText = messages.filter(msg => msg.type === 'user-message' || msg.type === 'ai-response').map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`).join('\\n');\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\n      const chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }];\n      const payload = {\n        contents: chatHistory\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a summary.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: `**Chat Summary:**\\n\\n${responseText}`,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n    } catch (error) {\n      console.error(\"Error summarizing chat:\", error);\n      setError(`Summarization error: ${error.message}`);\n    } finally {\n      setIsSummarizing(false);\n    }\n  };\n\n  // 12. Handle image generation using the Gemini API\n  const handleGenerateImage = async imagePrompt => {\n    if (!currentConversationId || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsGeneratingImage(true);\n    setError(null);\n    let tempImageMessageRef = null;\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n      tempImageMessageRef = doc(messagesCollectionRef);\n\n      // Add a placeholder message immediately\n      await setDoc(tempImageMessageRef, {\n        text: `Generating an image for: \"${imagePrompt}\"...`,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response',\n        imageUrl: ''\n      });\n      const payload = {\n        instances: {\n          prompt: imagePrompt\n        },\n        parameters: {\n          \"sampleCount\": 1\n        }\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n        await setDoc(tempImageMessageRef, {\n          text: `Here is the image you requested for \"${imagePrompt}.\"`,\n          userId: 'bot',\n          userName: 'AI Chatbot',\n          timestamp: serverTimestamp(),\n          type: 'ai-response',\n          imageUrl: imageUrl\n        });\n      } else {\n        throw new Error('Unexpected API response structure or no image data.');\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      if (tempImageMessageRef) {\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages', tempImageMessageRef.id), {\n          text: `I couldn't generate the image. Please try again with a different prompt. Error: ${error.message}`,\n          userId: 'bot',\n          userName: 'AI Chatbot',\n          timestamp: serverTimestamp(),\n          type: 'ai-response',\n          imageUrl: ''\n        }, {\n          merge: true\n        });\n      }\n      setError(`Image generation error: ${error.message}`);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // 13. Handle text-to-speech\n  const handleTTS = async (text, msgId) => {\n    if (isSpeaking) return;\n    setIsSpeaking(true);\n    try {\n      var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _part$inlineData, _part$inlineData2;\n      const payload = {\n        contents: [{\n          parts: [{\n            text: `Say in a natural tone: ${text}`\n          }]\n        }],\n        generationConfig: {\n          responseModalities: [\"AUDIO\"],\n          speechConfig: {\n            voiceConfig: {\n              prebuiltVoiceConfig: {\n                voiceName: \"Puck\"\n              }\n            }\n          }\n        },\n        model: \"gemini-2.5-flash-preview-tts\"\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const part = result === null || result === void 0 ? void 0 : (_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : _result$candidates$$c2[0];\n      const audioData = part === null || part === void 0 ? void 0 : (_part$inlineData = part.inlineData) === null || _part$inlineData === void 0 ? void 0 : _part$inlineData.data;\n      const mimeType = part === null || part === void 0 ? void 0 : (_part$inlineData2 = part.inlineData) === null || _part$inlineData2 === void 0 ? void 0 : _part$inlineData2.mimeType;\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\n        const match = mimeType.match(/rate=(\\d+)/);\n        const sampleRate = match ? parseInt(match[1], 10) : 16000;\n        const pcmData = base64ToArrayBuffer(audioData);\n        const wavBlob = pcmToWav(pcmData, sampleRate);\n        const audioUrl = URL.createObjectURL(wavBlob);\n        const audio = new Audio(audioUrl);\n        setCurrentAudio(audio);\n        audio.play();\n        audio.onended = () => {\n          setIsSpeaking(false);\n          setCurrentAudio(null);\n        };\n      } else {\n        throw new Error(\"No audio data received from API.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating or playing TTS:\", error);\n      setError(`TTS failed: ${error.message}`);\n      setIsSpeaking(false);\n    }\n  };\n  const stopTTS = () => {\n    if (currentAudio) {\n      currentAudio.pause();\n      currentAudio.currentTime = 0;\n      setCurrentAudio(null);\n      setIsSpeaking(false);\n    }\n  };\n\n  // 14. Handle AI response for general chat\n  const handleAIResponse = async userMessage => {\n    setIsAIGenerating(true);\n    try {\n      var _result$candidates$0$, _result$candidates$0$2;\n      const chatHistory = messages.map(msg => ({\n        role: msg.userId === user.uid ? 'user' : 'model',\n        parts: [{\n          text: msg.text\n        }]\n      }));\n      const prompt = userMessage;\n      const payload = {\n        contents: [...chatHistory, {\n          role: \"user\",\n          parts: [{\n            text: prompt\n          }]\n        }]\n      };\n      const apiKey = ''; // Canvas will provide this\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        var _errorData$error2;\n        const errorData = await response.json();\n        throw new Error(`API error: ${((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.message) || response.statusText}`);\n      }\n      const result = await response.json();\n      let aiResponseText = \"Sorry, I'm having trouble connecting right now. Please try again later.\";\n      if (result.candidates && result.candidates.length > 0 && ((_result$candidates$0$ = result.candidates[0].content) === null || _result$candidates$0$ === void 0 ? void 0 : (_result$candidates$0$2 = _result$candidates$0$.parts) === null || _result$candidates$0$2 === void 0 ? void 0 : _result$candidates$0$2.length) > 0) {\n        aiResponseText = result.candidates[0].content.parts[0].text;\n      }\n      const messagesPath = `artifacts/${appId}/users/${user.uid}/conversations/${currentConversationId}/messages`;\n      await addDoc(collection(db, messagesPath), {\n        text: aiResponseText,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        type: 'ai-response',\n        timestamp: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error calling Gemini API:', error);\n      setError(`AI response error: ${error.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n  if (loading || !isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-4 border-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Auth UI based on user state\n  const renderAuthUI = () => {\n    if (user && user.isAnonymous) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 space-y-4 bg-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-600\",\n          children: \"You are signed in anonymously. For persistent chats, please sign in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAuthMode('email-link'),\n            className: `flex-1 p-3 rounded-lg shadow-md transition-colors duration-200 ${authMode === 'email-link' ? 'bg-indigo-600 text-white' : 'bg-white text-gray-800'}`,\n            children: \"Email Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAuthMode('email-password'),\n            className: `flex-1 p-3 rounded-lg shadow-md transition-colors duration-200 ${authMode === 'email-password' ? 'bg-indigo-600 text-white' : 'bg-white text-gray-800'}`,\n            children: \"Email/Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this), authMode === 'email-link' && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendSignInLink,\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\",\n            disabled: loading,\n            children: \"Send Sign-in Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 15\n          }, this), emailSent && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-green-600\",\n            children: \"Check your email for the sign-in link!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this), authMode === 'email-password' && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleEmailPasswordLogin,\n              className: \"flex-1 p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\",\n              disabled: loading,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleEmailPasswordSignUp,\n              className: \"flex-1 p-3 bg-green-500 text-white rounded-lg shadow-md hover:bg-green-600 transition-colors duration-200 disabled:bg-gray-400\",\n              disabled: loading,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100 font-sans antialiased text-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed inset-y-0 left-0 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} md:relative md:translate-x-0 transition-transform duration-300 ease-in-out bg-gray-900 text-white w-64 flex flex-col z-40 shadow-2xl`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-100\",\n          children: \"AI Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"md:hidden text-white\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewChat,\n          className: \"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 font-bold flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"h-5 w-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), \" New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-4 border-b border-gray-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this), conversations.map(conv => {\n          var _conv$lastUpdated;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setCurrentConversationId(conv.id);\n              setIsSidebarOpen(false); // Close sidebar on mobile\n            },\n            className: `p-3 rounded-lg cursor-pointer transition-colors duration-200 ${conv.id === currentConversationId ? 'bg-indigo-600 text-white shadow-lg' : 'bg-gray-700 text-gray-200 hover:bg-gray-800'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold truncate\",\n              children: conv.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs mt-1 truncate text-gray-400\",\n              children: new Date(((_conv$lastUpdated = conv.lastUpdated) === null || _conv$lastUpdated === void 0 ? void 0 : _conv$lastUpdated.seconds) * 1000).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 15\n            }, this)]\n          }, conv.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-700 text-sm text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"truncate\",\n          children: [\"User ID: \", (user === null || user === void 0 ? void 0 : user.uid) || \"Not authenticated\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"mt-2 w-full p-2 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200 font-bold\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-gray-50 rounded-l-2xl shadow-xl overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white border-b border-gray-200 flex items-center justify-between sticky top-0 z-10 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          className: \"md:hidden text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800 mx-auto\",\n          children: ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || \"Start a New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-6 bg-gray-100 space-y-4\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-red-100 text-red-700 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this), (user === null || user === void 0 ? void 0 : user.isAnonymous) && renderAuthUI(), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] p-3 rounded-xl shadow-md whitespace-pre-wrap ${msg.userId === user.uid ? 'bg-indigo-500 text-white rounded-br-none' : 'bg-white text-gray-800 rounded-bl-none'}`,\n            children: [msg.imageUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.imageUrl,\n                alt: \"Generated\",\n                className: \"mt-2 rounded-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: msg.imageUrl,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-sm text-indigo-200 hover:underline flex items-center mt-1\",\n                children: [\"View Full Image \", /*#__PURE__*/_jsxDEV(ExternalLink, {\n                  size: 14,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: msg.text ? typeof marked !== 'undefined' ? marked.parse(msg.text) : msg.text : ''\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 19\n            }, this), msg.userId !== user.uid && msg.text && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (isSpeaking) {\n                  stopTTS();\n                } else {\n                  handleTTS(msg.text, msg.id);\n                }\n              },\n              className: `ml-2 p-1 rounded-full ${isSpeaking && currentAudio ? 'bg-red-500 text-white' : 'bg-gray-200 text-gray-600'} hover:bg-gray-300 transition-colors duration-200`,\n              title: isSpeaking ? \"Stop Speaking\" : \"Read Aloud\",\n              children: /*#__PURE__*/_jsxDEV(Volume2, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this)), (isAIGenerating || isSummarizing || isGeneratingImage) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[70%] p-3 rounded-xl shadow-md bg-white text-gray-800 rounded-bl-none flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2\",\n              children: isSummarizing ? /*#__PURE__*/_jsxDEV(MessageSquareMore, {\n                className: \"animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 21\n              }, this) : isGeneratingImage ? /*#__PURE__*/_jsxDEV(Image, {\n                className: \"animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Sparkles, {\n                className: \"animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isSummarizing ? 'Summarizing chat...' : isGeneratingImage ? 'Generating image...' : 'AI is thinking...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-flashing ml-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-white border-t border-gray-200 flex items-center sticky bottom-0 z-10 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message... (e.g., 'summarize' or 'image of a cat')\",\n          className: \"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-shadow\",\n          disabled: isAIGenerating || isSummarizing || isGeneratingImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\",\n          disabled: isAIGenerating || isSummarizing || isGeneratingImage || !newMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .dot-flashing {\n          position: relative;\n          width: 5px;\n          height: 5px;\n          border-radius: 5px;\n          background-color: #a3a3a3;\n          color: #a3a3a3;\n          animation: dotFlashing 1s infinite linear alternate;\n          animation-delay: 0.5s;\n        }\n\n        .dot-flashing::before, .dot-flashing::after {\n          content: '';\n          display: inline-block;\n          position: absolute;\n          top: 0;\n        }\n\n        .dot-flashing::before {\n          left: -10px;\n          width: 5px;\n          height: 5px;\n          border-radius: 5px;\n          background-color: #a3a3a3;\n          color: #a3a3a3;\n          animation: dotFlashing 1s infinite alternate;\n          animation-delay: 0s;\n        }\n\n        .dot-flashing::after {\n          left: 10px;\n          width: 5px;\n          height: 5px;\n          border-radius: 5px;\n          background-color: #a3a3a3;\n          color: #a3a3a3;\n          animation: dotFlashing 1s infinite alternate;\n          animation-delay: 1s;\n        }\n\n        @keyframes dotFlashing {\n          0% {\n            background-color: #a3a3a3;\n          }\n          50%, 100% {\n            background-color: #e5e5e5;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 809,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P49/byaqhjs9O6sz21oMte6KQhk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","limit","createPortal","Sparkles","MessageSquareMore","Image","LoaderCircle","X","ExternalLink","Menu","Plus","Volume2","jsxDEV","_jsxDEV","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","generateId","replace","c","r","Math","random","v","toString","base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","pcmToWav","pcmData","sampleRate","pcm16","Int16Array","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","setInt16","Blob","type","App","_s","_conversations$find","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","currentAudio","setCurrentAudio","isSpeaking","setIsSpeaking","messagesEndRef","audioContextRef","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchWithExponentialBackoff","url","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","Error","message","statusText","includes","Promise","resolve","setTimeout","Object","keys","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","console","location","href","storedEmail","localStorage","getItem","modalDiv","document","createElement","className","innerHTML","body","appendChild","emailConfirmInput","querySelector","emailConfirmButton","onclick","value","removeChild","continueSignIn","emailToUse","then","result","removeItem","history","replaceState","title","pathname","catch","conversationsCollectionRef","uid","querySnapshot","fetchedConversations","forEach","push","id","data","sort","a","b","_b$lastUpdated","_a$lastUpdated","lastUpdated","seconds","firestoreError","messagesCollectionRef","fetchedMessages","_a$timestamp","_b$timestamp","timestamp","startNewChat","handleSendMessage","preventDefault","trim","conversationIdToUse","userMessageText","newConvId","newConversationDocRef","initialTitle","substring","createdAt","createError","conversationDocRef","merge","updateError","text","userId","userName","command","toLowerCase","handleSummarizeChat","startsWith","imagePrompt","handleGenerateImage","handleAIResponse","handleSendSignInLink","actionCodeSettings","origin","handleCodeInApp","setItem","handleEmailPasswordSignUp","handleEmailPasswordLogin","handleLogout","chatHistoryText","filter","msg","map","join","prompt","chatHistory","role","parts","payload","contents","apiUrl","method","headers","stringify","responseText","candidates","content","tempImageMessageRef","imageUrl","instances","parameters","predictions","bytesBase64Encoded","handleTTS","msgId","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_part$inlineData","_part$inlineData2","generationConfig","responseModalities","speechConfig","voiceConfig","prebuiltVoiceConfig","voiceName","model","part","audioData","inlineData","mimeType","match","parseInt","wavBlob","audioUrl","URL","createObjectURL","audio","Audio","play","onended","stopTTS","pause","currentTime","userMessage","_result$candidates$0$","_result$candidates$0$2","_errorData$error2","aiResponseText","messagesPath","children","fileName","_jsxFileName","lineNumber","columnNumber","renderAuthUI","isAnonymous","onClick","onSubmit","placeholder","onChange","target","required","disabled","conv","_conv$lastUpdated","Date","toLocaleString","find","src","alt","rel","size","dangerouslySetInnerHTML","__html","marked","ref","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token, marked */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  limit\r\n} from 'firebase/firestore';\r\nimport { createPortal } from 'react-dom';\r\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus, Volume2 } from 'lucide-react';\r\n\r\n// --- Firebase Configuration ---\r\n// The global variables are provided by the Canvas environment.\r\n// We fall back to a local config for development purposes if they are not defined.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Utility function for generating unique IDs (like conversation IDs)\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\n// Converts a base64 string to an ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// Converts PCM audio data to a WAV blob\r\nfunction pcmToWav(pcmData, sampleRate) {\r\n  const pcm16 = new Int16Array(pcmData);\r\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\r\n  const view = new DataView(buffer);\r\n  const writeString = (view, offset, string) => {\r\n      for (let i = 0; i < string.length; i++) {\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n  };\r\n\r\n  let offset = 0;\r\n  writeString(view, offset, 'RIFF'); offset += 4;\r\n  view.setUint32(offset, 36 + pcm16.length * 2, true); offset += 4;\r\n  writeString(view, offset, 'WAVE'); offset += 4;\r\n  writeString(view, offset, 'fmt '); offset += 4;\r\n  view.setUint32(offset, 16, true); offset += 4; // Sub-chunk size\r\n  view.setUint16(offset, 1, true); offset += 2; // Audio format (1 = PCM)\r\n  view.setUint16(offset, 1, true); offset += 2; // Number of channels\r\n  view.setUint32(offset, sampleRate, true); offset += 4; // Sample rate\r\n  view.setUint32(offset, sampleRate * 2, true); offset += 4; // Byte rate\r\n  view.setUint16(offset, 2, true); offset += 2; // Block align\r\n  view.setUint16(offset, 16, true); offset += 2; // Bits per sample\r\n  writeString(view, offset, 'data'); offset += 4;\r\n  view.setUint32(offset, pcm16.length * 2, true); offset += 4; // Data size\r\n\r\n  for (let i = 0; i < pcm16.length; i++) {\r\n      view.setInt16(offset, pcm16[i], true);\r\n      offset += 2;\r\n  }\r\n\r\n  return new Blob([view], { type: 'audio/wav' });\r\n}\r\n\r\n\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [authMode, setAuthMode] = useState('email-link');\r\n\r\n  // New states for conversation history and sidebar\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [currentAudio, setCurrentAudio] = useState(null);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages whenever messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Exponential backoff utility for API calls\r\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n      if (retries > 0 && error.message.includes(\"API error\")) {\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          setIsAuthReady(true);\r\n          setError(null);\r\n        } else {\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) {\r\n            try {\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n        }\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      if (!storedEmail) {\r\n        // Using a custom modal instead of prompt\r\n        const modalDiv = document.createElement('div');\r\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\r\n        modalDiv.innerHTML = `\r\n          <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">\r\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\r\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\r\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\r\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(modalDiv);\r\n\r\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\r\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\r\n\r\n        emailConfirmButton.onclick = () => {\r\n          storedEmail = emailConfirmInput.value;\r\n          if (storedEmail) {\r\n            document.body.removeChild(modalDiv);\r\n            continueSignIn(storedEmail);\r\n          } else {\r\n            console.error(\"Email not provided. Please try again.\");\r\n          }\r\n        };\r\n\r\n        const continueSignIn = (emailToUse) => {\r\n          signInWithEmailLink(auth, emailToUse, window.location.href)\r\n            .then((result) => {\r\n              window.localStorage.removeItem('emailForSignIn');\r\n              setUser(result.user);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              setError(null);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            })\r\n            .catch((error) => {\r\n              setError(`Error completing sign-in with link: ${error.message}`);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            });\r\n        };\r\n        return; // Exit the effect to wait for user input\r\n      }\r\n\r\n      signInWithEmailLink(auth, storedEmail, window.location.href)\r\n        .then((result) => {\r\n          window.localStorage.removeItem('emailForSignIn');\r\n          setUser(result.user);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          setError(null);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch((error) => {\r\n          setError(`Error completing sign-in with link: ${error.message}`);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        });\r\n    }\r\n  }, [auth, isAuthReady]);\r\n\r\n  // 3. Fetch conversations for the current user.\r\n  useEffect(() => {\r\n    if (!db || !user || !isAuthReady) return;\r\n\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const unsubscribe = onSnapshot(conversationsCollectionRef, (querySnapshot) => {\r\n      const fetchedConversations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedConversations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedConversations.sort((a, b) => (b.lastUpdated?.seconds || 0) - (a.lastUpdated?.seconds || 0));\r\n\r\n      setConversations(fetchedConversations);\r\n\r\n      if (!currentConversationId && fetchedConversations.length > 0) {\r\n        setCurrentConversationId(fetchedConversations[0].id);\r\n      } else if (fetchedConversations.length === 0) {\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load conversations: ${firestoreError.message}`);\r\n      console.error(\"Firestore conversations error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, isAuthReady, appId, currentConversationId]);\r\n\r\n  // 4. Fetch messages for the current conversation.\r\n  useEffect(() => {\r\n    if (!db || !user || !currentConversationId) {\r\n      setMessages([]); // Clear messages if no conversation is selected\r\n      return;\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n    const unsubscribe = onSnapshot(messagesCollectionRef, (querySnapshot) => {\r\n      const fetchedMessages = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedMessages.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedMessages.sort((a, b) => (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0));\r\n\r\n      setMessages(fetchedMessages);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\r\n      console.error(\"Firestore messages error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, currentConversationId, appId]);\r\n\r\n  // 5. Start a new conversation.\r\n  const startNewChat = () => {\r\n    setCurrentConversationId(null);\r\n    setMessages([]);\r\n    setNewMessage('');\r\n    setError(null);\r\n    setIsAIGenerating(false);\r\n    setIsSummarizing(false);\r\n    setIsGeneratingImage(false);\r\n    setIsSidebarOpen(false);\r\n  };\r\n\r\n  // 6. Handle sending a new message (and creating a new conversation if needed).\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !user || !db || isAIGenerating) return;\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n    const userMessageText = newMessage;\r\n    setNewMessage('');\r\n\r\n    // If no conversation is active, create a new one.\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      const initialTitle = userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '');\r\n\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: initialTitle,\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId);\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        console.error(\"Error creating new conversation:\", createError);\r\n        return;\r\n      }\r\n    } else {\r\n      // Otherwise, just update the lastUpdated timestamp of the current conversation.\r\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\r\n      try {\r\n        await setDoc(conversationDocRef, { lastUpdated: serverTimestamp() }, { merge: true });\r\n      } catch (updateError) {\r\n        console.error(\"Error updating conversation timestamp:\", updateError);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: userMessageText,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message'\r\n      });\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n      return;\r\n    }\r\n\r\n    const command = userMessageText.toLowerCase().trim();\r\n\r\n    if (command === 'summarize') {\r\n      handleSummarizeChat();\r\n    } else if (command.startsWith('image of')) {\r\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\r\n      handleGenerateImage(imagePrompt);\r\n    } else {\r\n      handleAIResponse(userMessageText);\r\n    }\r\n  };\r\n\r\n  // 7. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    const actionCodeSettings = {\r\n      url: window.location.origin,\r\n      handleCodeInApp: true,\r\n    };\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Registration failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 9. Handle Email/Password Login\r\n  const handleEmailPasswordLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Login failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 10. Handle Logout\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setMessages([]);\r\n      setConversations([]);\r\n      setCurrentConversationId(null);\r\n      setEmailSent(false);\r\n      setIsSigningInWithLink(false);\r\n      setAuthMode('email-link');\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Logout failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 11. Handle summarization of the current chat using the Gemini API\r\n  const handleSummarizeChat = async () => {\r\n    if (!currentConversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n    setIsSummarizing(true);\r\n    setError(null);\r\n    try {\r\n      const chatHistoryText = messages\r\n        .filter(msg => msg.type === 'user-message' || msg.type === 'ai-response')\r\n        .map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`)\r\n        .join('\\n');\r\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\r\n\r\n      const chatHistory = [{ role: \"user\", parts: [{ text: prompt }] }];\r\n      const payload = { contents: chatHistory };\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't generate a summary.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: `**Chat Summary:**\\n\\n${responseText}`,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response'\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error summarizing chat:\", error);\r\n      setError(`Summarization error: ${error.message}`);\r\n    } finally {\r\n      setIsSummarizing(false);\r\n    }\r\n  };\r\n\r\n  // 12. Handle image generation using the Gemini API\r\n  const handleGenerateImage = async (imagePrompt) => {\r\n    if (!currentConversationId || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n    setIsGeneratingImage(true);\r\n    setError(null);\r\n    let tempImageMessageRef = null;\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n      tempImageMessageRef = doc(messagesCollectionRef);\r\n\r\n      // Add a placeholder message immediately\r\n      await setDoc(tempImageMessageRef, {\r\n        text: `Generating an image for: \"${imagePrompt}\"...`,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n        imageUrl: '',\r\n      });\r\n\r\n      const payload = { instances: { prompt: imagePrompt }, parameters: { \"sampleCount\": 1} };\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\r\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\r\n\r\n        await setDoc(tempImageMessageRef, {\r\n          text: `Here is the image you requested for \"${imagePrompt}.\"`,\r\n          userId: 'bot',\r\n          userName: 'AI Chatbot',\r\n          timestamp: serverTimestamp(),\r\n          type: 'ai-response',\r\n          imageUrl: imageUrl,\r\n        });\r\n      } else {\r\n        throw new Error('Unexpected API response structure or no image data.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating image:\", error);\r\n      if (tempImageMessageRef) {\r\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages', tempImageMessageRef.id), {\r\n          text: `I couldn't generate the image. Please try again with a different prompt. Error: ${error.message}`,\r\n          userId: 'bot',\r\n          userName: 'AI Chatbot',\r\n          timestamp: serverTimestamp(),\r\n          type: 'ai-response',\r\n          imageUrl: '',\r\n        }, { merge: true });\r\n      }\r\n      setError(`Image generation error: ${error.message}`);\r\n    } finally {\r\n      setIsGeneratingImage(false);\r\n    }\r\n  };\r\n\r\n  // 13. Handle text-to-speech\r\n  const handleTTS = async (text, msgId) => {\r\n    if (isSpeaking) return;\r\n    setIsSpeaking(true);\r\n\r\n    try {\r\n      const payload = {\r\n          contents: [{ parts: [{ text: `Say in a natural tone: ${text}` }] }],\r\n          generationConfig: {\r\n              responseModalities: [\"AUDIO\"],\r\n              speechConfig: {\r\n                  voiceConfig: {\r\n                      prebuiltVoiceConfig: { voiceName: \"Puck\" }\r\n                  }\r\n              }\r\n          },\r\n          model: \"gemini-2.5-flash-preview-tts\"\r\n      };\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload)\r\n      });\r\n\r\n      const result = await response.json();\r\n      const part = result?.candidates?.[0]?.content?.parts?.[0];\r\n      const audioData = part?.inlineData?.data;\r\n      const mimeType = part?.inlineData?.mimeType;\r\n\r\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\r\n        const match = mimeType.match(/rate=(\\d+)/);\r\n        const sampleRate = match ? parseInt(match[1], 10) : 16000;\r\n        const pcmData = base64ToArrayBuffer(audioData);\r\n        const wavBlob = pcmToWav(pcmData, sampleRate);\r\n        const audioUrl = URL.createObjectURL(wavBlob);\r\n\r\n        const audio = new Audio(audioUrl);\r\n        setCurrentAudio(audio);\r\n        audio.play();\r\n\r\n        audio.onended = () => {\r\n          setIsSpeaking(false);\r\n          setCurrentAudio(null);\r\n        };\r\n      } else {\r\n        throw new Error(\"No audio data received from API.\");\r\n      }\r\n    } catch (error) {\r\n        console.error(\"Error generating or playing TTS:\", error);\r\n        setError(`TTS failed: ${error.message}`);\r\n        setIsSpeaking(false);\r\n    }\r\n  };\r\n\r\n  const stopTTS = () => {\r\n    if (currentAudio) {\r\n      currentAudio.pause();\r\n      currentAudio.currentTime = 0;\r\n      setCurrentAudio(null);\r\n      setIsSpeaking(false);\r\n    }\r\n  };\r\n\r\n\r\n  // 14. Handle AI response for general chat\r\n  const handleAIResponse = async (userMessage) => {\r\n    setIsAIGenerating(true);\r\n    try {\r\n      const chatHistory = messages.map(msg => ({\r\n        role: msg.userId === user.uid ? 'user' : 'model',\r\n        parts: [{ text: msg.text }]\r\n      }));\r\n      const prompt = userMessage;\r\n\r\n      const payload = { contents: [...chatHistory, { role: \"user\", parts: [{ text: prompt }] }] };\r\n      const apiKey = ''; // Canvas will provide this\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n      }\r\n      const result = await response.json();\r\n\r\n      let aiResponseText = \"Sorry, I'm having trouble connecting right now. Please try again later.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content?.parts?.length > 0) {\r\n        aiResponseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      const messagesPath = `artifacts/${appId}/users/${user.uid}/conversations/${currentConversationId}/messages`;\r\n      await addDoc(collection(db, messagesPath), {\r\n        text: aiResponseText,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        type: 'ai-response',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error calling Gemini API:', error);\r\n      setError(`AI response error: ${error.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n\r\n  if (loading || !isAuthReady) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-4 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Auth UI based on user state\r\n  const renderAuthUI = () => {\r\n    if (user && user.isAnonymous) {\r\n      return (\r\n        <div className=\"p-4 space-y-4 bg-gray-100\">\r\n          <div className=\"text-center text-gray-600\">\r\n            You are signed in anonymously. For persistent chats, please sign in.\r\n          </div>\r\n          <div className=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2\">\r\n            <button\r\n              onClick={() => setAuthMode('email-link')}\r\n              className={`flex-1 p-3 rounded-lg shadow-md transition-colors duration-200 ${authMode === 'email-link' ? 'bg-indigo-600 text-white' : 'bg-white text-gray-800'}`}\r\n            >\r\n              Email Link\r\n            </button>\r\n            <button\r\n              onClick={() => setAuthMode('email-password')}\r\n              className={`flex-1 p-3 rounded-lg shadow-md transition-colors duration-200 ${authMode === 'email-password' ? 'bg-indigo-600 text-white' : 'bg-white text-gray-800'}`}\r\n            >\r\n              Email/Password\r\n            </button>\r\n          </div>\r\n          {authMode === 'email-link' && (\r\n            <form onSubmit={handleSendSignInLink} className=\"space-y-2\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\"\r\n                disabled={loading}\r\n              >\r\n                Send Sign-in Link\r\n              </button>\r\n              {emailSent && <p className=\"text-sm text-green-600\">Check your email for the sign-in link!</p>}\r\n            </form>\r\n          )}\r\n          {authMode === 'email-password' && (\r\n            <form className=\"space-y-2\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                required\r\n              />\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleEmailPasswordLogin}\r\n                  className=\"flex-1 p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\"\r\n                  disabled={loading}\r\n                >\r\n                  Login\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleEmailPasswordSignUp}\r\n                  className=\"flex-1 p-3 bg-green-500 text-white rounded-lg shadow-md hover:bg-green-600 transition-colors duration-200 disabled:bg-gray-400\"\r\n                  disabled={loading}\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100 font-sans antialiased text-gray-800\">\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed inset-y-0 left-0 transform ${\r\n          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'\r\n        } md:relative md:translate-x-0 transition-transform duration-300 ease-in-out bg-gray-900 text-white w-64 flex flex-col z-40 shadow-2xl`}\r\n      >\r\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-700\">\r\n          <h2 className=\"text-xl font-bold text-gray-100\">AI Chatbot</h2>\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"md:hidden text-white\">\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\r\n          <button\r\n            onClick={startNewChat}\r\n            className=\"w-full p-3 bg-indigo-500 text-white rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200 font-bold flex items-center justify-center\"\r\n          >\r\n            <Plus className=\"h-5 w-5 mr-2\" /> New Chat\r\n          </button>\r\n          <div className=\"my-4 border-b border-gray-700\"></div>\r\n          {conversations.map((conv) => (\r\n            <div\r\n              key={conv.id}\r\n              onClick={() => {\r\n                setCurrentConversationId(conv.id);\r\n                setIsSidebarOpen(false); // Close sidebar on mobile\r\n              }}\r\n              className={`p-3 rounded-lg cursor-pointer transition-colors duration-200 ${\r\n                conv.id === currentConversationId ? 'bg-indigo-600 text-white shadow-lg' : 'bg-gray-700 text-gray-200 hover:bg-gray-800'\r\n              }`}\r\n            >\r\n              <h4 className=\"font-semibold truncate\">{conv.title}</h4>\r\n              <p className=\"text-xs mt-1 truncate text-gray-400\">{new Date(conv.lastUpdated?.seconds * 1000).toLocaleString()}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"p-4 border-t border-gray-700 text-sm text-gray-400\">\r\n          <p className=\"truncate\">User ID: {user?.uid || \"Not authenticated\"}</p>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"mt-2 w-full p-2 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200 font-bold\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"flex-1 flex flex-col bg-gray-50 rounded-l-2xl shadow-xl overflow-hidden\">\r\n        {/* Chat Header */}\r\n        <div className=\"p-4 bg-white border-b border-gray-200 flex items-center justify-between sticky top-0 z-10 shadow-sm\">\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"md:hidden text-gray-600\">\r\n            <Menu className=\"h-6 w-6\" />\r\n          </button>\r\n          <h1 className=\"text-2xl font-bold text-gray-800 mx-auto\">\r\n            {conversations.find(c => c.id === currentConversationId)?.title || \"Start a New Chat\"}\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Chat messages container */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 bg-gray-100 space-y-4\">\r\n          {error && (\r\n            <div className=\"p-4 bg-red-100 text-red-700 rounded-lg shadow-md\">\r\n              <p className=\"font-semibold\">Error:</p>\r\n              <p>{error}</p>\r\n            </div>\r\n          )}\r\n          {user?.isAnonymous && renderAuthUI()}\r\n\r\n          {messages.map((msg) => (\r\n            <div key={msg.id} className={`flex ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`}>\r\n              <div\r\n                className={`max-w-[70%] p-3 rounded-xl shadow-md whitespace-pre-wrap ${\r\n                  msg.userId === user.uid\r\n                    ? 'bg-indigo-500 text-white rounded-br-none'\r\n                    : 'bg-white text-gray-800 rounded-bl-none'\r\n                }`}\r\n              >\r\n                {msg.imageUrl ? (\r\n                  <div>\r\n                    <p>{msg.text}</p>\r\n                    <img src={msg.imageUrl} alt=\"Generated\" className=\"mt-2 rounded-lg\" />\r\n                    <a href={msg.imageUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-sm text-indigo-200 hover:underline flex items-center mt-1\">\r\n                      View Full Image <ExternalLink size={14} className=\"ml-1\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  <div dangerouslySetInnerHTML={{ __html: msg.text ? (typeof marked !== 'undefined' ? marked.parse(msg.text) : msg.text) : '' }} />\r\n                )}\r\n                 {msg.userId !== user.uid && msg.text && (\r\n                  <button\r\n                    onClick={() => {\r\n                      if (isSpeaking) {\r\n                        stopTTS();\r\n                      } else {\r\n                        handleTTS(msg.text, msg.id);\r\n                      }\r\n                    }}\r\n                    className={`ml-2 p-1 rounded-full ${isSpeaking && currentAudio ? 'bg-red-500 text-white' : 'bg-gray-200 text-gray-600'} hover:bg-gray-300 transition-colors duration-200`}\r\n                    title={isSpeaking ? \"Stop Speaking\" : \"Read Aloud\"}\r\n                  >\r\n                    <Volume2 className=\"h-4 w-4\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Loading indicators */}\r\n          {(isAIGenerating || isSummarizing || isGeneratingImage) && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"max-w-[70%] p-3 rounded-xl shadow-md bg-white text-gray-800 rounded-bl-none flex items-center\">\r\n                <span className=\"mr-2\">\r\n                  {isSummarizing ? (\r\n                    <MessageSquareMore className=\"animate-pulse\" />\r\n                  ) : isGeneratingImage ? (\r\n                    <Image className=\"animate-pulse\" />\r\n                  ) : (\r\n                    <Sparkles className=\"animate-pulse\" />\r\n                  )}\r\n                </span>\r\n                <span>\r\n                  {isSummarizing ? 'Summarizing chat...' : isGeneratingImage ? 'Generating image...' : 'AI is thinking...'}\r\n                </span>\r\n                <div className=\"dot-flashing ml-2\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Message Input */}\r\n        <form onSubmit={handleSendMessage} className=\"p-4 bg-white border-t border-gray-200 flex items-center sticky bottom-0 z-10 shadow-sm\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type your message... (e.g., 'summarize' or 'image of a cat')\"\r\n            className=\"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-shadow\"\r\n            disabled={isAIGenerating || isSummarizing || isGeneratingImage}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200 disabled:bg-gray-400\"\r\n            disabled={isAIGenerating || isSummarizing || isGeneratingImage || !newMessage.trim()}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n            </svg>\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Dot Flashing CSS Animation */}\r\n      <style>{`\r\n        .dot-flashing {\r\n          position: relative;\r\n          width: 5px;\r\n          height: 5px;\r\n          border-radius: 5px;\r\n          background-color: #a3a3a3;\r\n          color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite linear alternate;\r\n          animation-delay: 0.5s;\r\n        }\r\n\r\n        .dot-flashing::before, .dot-flashing::after {\r\n          content: '';\r\n          display: inline-block;\r\n          position: absolute;\r\n          top: 0;\r\n        }\r\n\r\n        .dot-flashing::before {\r\n          left: -10px;\r\n          width: 5px;\r\n          height: 5px;\r\n          border-radius: 5px;\r\n          background-color: #a3a3a3;\r\n          color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite alternate;\r\n          animation-delay: 0s;\r\n        }\r\n\r\n        .dot-flashing::after {\r\n          left: 10px;\r\n          width: 5px;\r\n          height: 5px;\r\n          border-radius: 5px;\r\n          background-color: #a3a3a3;\r\n          color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite alternate;\r\n          animation-delay: 1s;\r\n        }\r\n\r\n        @keyframes dotFlashing {\r\n          0% {\r\n            background-color: #a3a3a3;\r\n          }\r\n          50%, 100% {\r\n            background-color: #e5e5e5;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}