{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, orderBy,\n// Added orderBy for conversations, will sort in memory for messages\nlimit, getDocs, getDoc } from 'firebase/firestore';\n\n// --- Firebase Configuration ---\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Utility function for generating unique IDs (like conversation IDs)\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nfunction App() {\n  _s();\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [authMode, setAuthMode] = useState('email-link');\n\n  // New states for conversation history\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const messagesEndRef = useRef(null); // Ref for scrolling to bottom of messages\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          setUser(currentUser);\n          setIsAuthReady(true);\n          setError(null);\n        } else {\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            try {\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n          setIsAuthReady(true);\n        }\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n      if (!storedEmail) {\n        storedEmail = prompt('Please provide your email for confirmation');\n      }\n      if (!storedEmail) {\n        setError(\"Email not provided for sign-in link. Please restart the process.\");\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        window.history.replaceState({}, document.title, window.location.pathname);\n        return;\n      }\n      signInWithEmailLink(auth, storedEmail, window.location.href).then(result => {\n        window.localStorage.removeItem('emailForSignIn');\n        setUser(result.user);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        setError(null);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }).catch(error => {\n        setError(`Error completing sign-in with link: ${error.message}`);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      });\n    }\n  }, [auth, isAuthReady]);\n\n  // 3. Fetch conversations for the current user.\n  useEffect(() => {\n    if (!db || !user || !isAuthReady) return;\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const q = query(conversationsCollectionRef, orderBy('lastUpdated', 'desc')); // Order by last updated\n\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const fetchedConversations = [];\n      querySnapshot.forEach(doc => {\n        fetchedConversations.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setConversations(fetchedConversations);\n\n      // If no conversation is selected, and there are conversations, select the most recent one\n      if (!currentConversationId && fetchedConversations.length > 0) {\n        setCurrentConversationId(fetchedConversations[0].id);\n      } else if (fetchedConversations.length === 0) {\n        // If there are no conversations, clear current conversation\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }, firestoreError => {\n      setError(`Failed to load conversations: ${firestoreError.message}`);\n      console.error(\"Firestore conversations error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, isAuthReady, appId, currentConversationId]); // Added currentConversationId to re-evaluate default selection\n\n  // 4. Fetch messages for the current conversation.\n  useEffect(() => {\n    if (!db || !user || !currentConversationId) {\n      setMessages([]); // Clear messages if no conversation is selected\n      return;\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n    const q = query(messagesCollectionRef, orderBy('timestamp', 'asc')); // Order messages by timestamp\n\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const fetchedMessages = [];\n      querySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(fetchedMessages);\n    }, firestoreError => {\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\n      console.error(\"Firestore messages error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, currentConversationId, appId]);\n\n  // 5. Start a new conversation.\n  const startNewChat = () => {\n    setCurrentConversationId(null); // Clear current conversation\n    setMessages([]); // Clear displayed messages\n    setNewMessage(''); // Clear input\n    setError(null); // Clear any errors\n    setIsAIGenerating(false); // Reset AI loading state\n  };\n\n  // 6. Handle sending a new message (and creating a new conversation if needed).\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user || !db || isAIGenerating) return;\n    let conversationIdToUse = currentConversationId;\n\n    // If no conversation is active, create a new one\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      const initialTitle = newMessage.substring(0, 50) + (newMessage.length > 50 ? '...' : '');\n      try {\n        await setDoc(newConversationDocRef, {\n          title: initialTitle,\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId); // Set the new conversation as current\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        console.error(\"Error creating new conversation:\", createError);\n        return;\n      }\n    } else {\n      // Update lastUpdated for existing conversation\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\n      try {\n        await setDoc(conversationDocRef, {\n          lastUpdated: serverTimestamp()\n        }, {\n          merge: true\n        });\n      } catch (updateError) {\n        console.error(\"Error updating conversation timestamp:\", updateError);\n      }\n    }\n\n    // Add message to the conversation's messages subcollection\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: newMessage,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message' // Explicitly mark user messages\n      });\n      setNewMessage('');\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n    }\n  };\n\n  // 7. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const actionCodeSettings = {\n      url: window.location.origin,\n      handleCodeInApp: true,\n      iOS: {\n        bundleId: 'com.example.ios'\n      },\n      android: {\n        packageName: 'com.example.android',\n        installApp: true,\n        minimumVersion: '12'\n      }\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email);\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Registration failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 9. Handle Email/Password Login\n  const handleEmailPasswordLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Login failed: ${e.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 10. Handle Logout\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUser(null);\n      setMessages([]);\n      setConversations([]); // Clear conversations on logout\n      setCurrentConversationId(null); // Clear current conversation\n      setEmailSent(false);\n      setIsSigningInWithLink(false);\n      setAuthMode('email-link');\n      setError(null);\n    } catch (error) {\n      setError(`Logout failed: ${error.message}`);\n    }\n  };\n\n  // 11. AI Response Logic - New useEffect to trigger AI response\n  useEffect(() => {\n    if (!db || !isAuthReady || !user || messages.length === 0 || isAIGenerating || !currentConversationId) {\n      return;\n    }\n    const lastMessage = messages[messages.length - 1];\n    if (lastMessage.userId === user.uid && lastMessage.type === 'user-message') {\n      const getAIResponse = async () => {\n        setIsAIGenerating(true);\n        setError(null);\n        try {\n          // Filter chat history to only include user and AI messages for the model\n          const chatHistory = messages.filter(msg => msg.type === 'user-message' || msg.type === 'ai-response').map(msg => ({\n            role: msg.userId === user.uid ? 'user' : 'model',\n            parts: [{\n              text: msg.text\n            }]\n          }));\n          const payload = {\n            contents: chatHistory\n          };\n          const API_KEY = firebaseConfig.apiKey;\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${API_KEY}`;\n          const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n            try {\n              const response = await fetch(url, options);\n              if (!response.ok) {\n                var _errorData$error;\n                const errorData = await response.json();\n                throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n              }\n              return response;\n            } catch (error) {\n              if (retries > 0 && error.message.includes(\"API error\")) {\n                await new Promise(resolve => setTimeout(resolve, delay));\n                return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n              }\n              throw error;\n            }\n          };\n          const response = await fetchWithExponentialBackoff(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          });\n          const result = await response.json();\n          let responseText = \"Sorry, I couldn't generate a response.\";\n          if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n            responseText = result.candidates[0].content.parts[0].text;\n          }\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n          await addDoc(messagesCollectionRef, {\n            text: responseText,\n            userId: 'bot',\n            userName: 'AI Chatbot',\n            timestamp: serverTimestamp(),\n            type: 'ai-response'\n          });\n        } catch (e) {\n          console.error(\"Error getting AI response:\", e);\n          setError(`AI response error: ${e.message}`);\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n          await addDoc(messagesCollectionRef, {\n            text: `(AI Error: ${e.message})`,\n            userId: 'bot',\n            userName: 'AI Chatbot',\n            timestamp: serverTimestamp(),\n            type: 'ai-response'\n          });\n        } finally {\n          setIsAIGenerating(false);\n        }\n      };\n      getAIResponse();\n    }\n  }, [messages, db, isAuthReady, user, appId, isAIGenerating, currentConversationId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-4 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white rounded-2xl shadow-xl overflow-hidden flex h-[90vh]\",\n      children: [\" \", user &&\n      /*#__PURE__*/\n      // Only show sidebar if user is logged in\n      _jsxDEV(\"div\", {\n        className: \"w-1/4 bg-gray-800 text-white flex flex-col p-4 rounded-l-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewChat,\n          className: \"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg mb-4 hover:bg-indigo-700 transition-colors\",\n          children: \"+ New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto space-y-2\",\n          children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 text-sm\",\n            children: \"No conversations yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this) : conversations.map(conv => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentConversationId(conv.id),\n            className: `w-full text-left p-3 rounded-lg transition-colors ${currentConversationId === conv.id ? 'bg-indigo-700' : 'bg-gray-700 hover:bg-gray-600'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold text-sm truncate\",\n              children: conv.title || \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this), conv.lastUpdated && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: new Date(conv.lastUpdated.seconds * 1000).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 23\n            }, this)]\n          }, conv.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex-1 flex flex-col ${user ? 'rounded-r-2xl' : 'rounded-2xl'}`,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-r from-purple-600 to-indigo-600 text-white p-4 text-center text-2xl font-bold\",\n          children: \"AI Chatbot App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 text-gray-700 text-sm p-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"User ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono text-xs p-1 bg-gray-300 rounded-md truncate max-w-[70%]\",\n            children: user ? user.uid : 'Not signed in'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"ml-2 px-3 py-1 bg-red-500 text-white rounded-md text-xs hover:bg-red-600 transition-colors\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-lg text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"animate-spin h-8 w-8 text-indigo-500 mx-auto mb-2\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"opacity-25\",\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\",\n                stroke: \"currentColor\",\n                strokeWidth: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                className: \"opacity-75\",\n                fill: \"currentColor\",\n                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), isSigningInWithLink ? 'Completing sign-in with email link...' : 'Initializing Firebase...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative max-w-sm text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"font-bold block mb-1\",\n              children: \"Error!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"block sm:inline\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), !loading && !error && !user && !isSigningInWithLink && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex flex-col items-center justify-center p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setAuthMode('email-link'),\n              className: `px-4 py-2 rounded-l-lg font-semibold ${authMode === 'email-link' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n              children: \"Email Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setAuthMode('email-password-login'),\n              className: `px-4 py-2 font-semibold ${authMode === 'email-password-login' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setAuthMode('email-password-signup'),\n              className: `px-4 py-2 rounded-r-lg font-semibold ${authMode === 'email-password-signup' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), authMode === 'email-link' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-gray-700\",\n              children: \"Sign In with Email Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this), !emailSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSendSignInLink,\n              className: \"w-full max-w-sm flex flex-col items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                placeholder: \"Enter your email\",\n                className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n                children: \"Send Sign-in Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold mb-4 text-gray-700\",\n                children: \"Email Sent!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mb-4\",\n                children: [\"Please check your inbox at \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold text-indigo-600\",\n                  children: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 52\n                }, this), \" for your sign-in link.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEmailSent(false),\n                className: \"mt-6 bg-gray-200 text-gray-700 p-2 rounded-lg hover:bg-gray-300 transition-colors duration-200\",\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), (authMode === 'email-password-login' || authMode === 'email-password-signup') && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: authMode === 'email-password-signup' ? handleEmailPasswordSignUp : handleEmailPasswordLogin,\n            className: \"w-full max-w-sm flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-gray-700\",\n              children: [authMode === 'email-password-signup' ? 'Sign Up' : 'Log In', \" with Email & Password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"Password\",\n              className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n              children: authMode === 'email-password-signup' ? 'Sign Up' : 'Log In'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this), !loading && !error && user && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 p-4 overflow-y-auto space-y-4 bg-gray-50\",\n            children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center text-gray-400 mt-20\",\n              children: currentConversationId ? 'This conversation is empty. Send a message to start!' : 'Start a new chat to begin!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 19\n            }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-3 rounded-xl shadow-md max-w-xs sm:max-w-md break-words ${msg.userId === user.uid ? 'bg-blue-500 text-white rounded-br-none' : 'bg-gray-300 text-gray-800 rounded-bl-none'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold text-xs mb-1\",\n                  children: msg.userId === user.uid ? 'You' : msg.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this), msg.text, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right text-xs text-opacity-80 mt-1\",\n                  children: msg.timestamp ? new Date(msg.timestamp.seconds * 1000).toLocaleTimeString() : '...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this)\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 19\n            }, this)), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-start\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3 rounded-xl shadow-md bg-gray-300 text-gray-800 rounded-bl-none\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: \"AI is typing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dot-flashing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"p-4 bg-gray-100 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              placeholder: \"Type your message...\",\n              className: \"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              disabled: isAIGenerating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\",\n              disabled: isAIGenerating || !newMessage.trim(),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fIGir/Rxy+sG2pSNcCW5xvlHEkM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","orderBy","limit","getDocs","getDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","generateId","replace","c","r","Math","random","v","toString","App","_s","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","conversations","setConversations","currentConversationId","setCurrentConversationId","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","Object","keys","length","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","console","message","window","location","href","storedEmail","localStorage","getItem","prompt","history","replaceState","document","title","pathname","then","result","removeItem","catch","conversationsCollectionRef","uid","q","querySnapshot","fetchedConversations","forEach","push","id","data","firestoreError","messagesCollectionRef","fetchedMessages","startNewChat","handleSendMessage","preventDefault","trim","conversationIdToUse","newConvId","newConversationDocRef","initialTitle","substring","createdAt","lastUpdated","createError","conversationDocRef","merge","updateError","text","userId","userName","timestamp","type","handleSendSignInLink","actionCodeSettings","url","origin","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","setItem","handleEmailPasswordSignUp","handleEmailPasswordLogin","handleLogout","lastMessage","getAIResponse","chatHistory","filter","msg","map","role","parts","payload","contents","API_KEY","apiUrl","fetchWithExponentialBackoff","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","Error","statusText","includes","Promise","resolve","setTimeout","method","headers","body","stringify","responseText","candidates","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","conv","Date","seconds","toLocaleDateString","xmlns","fill","viewBox","cx","cy","stroke","strokeWidth","d","onSubmit","value","onChange","target","placeholder","required","toLocaleTimeString","ref","disabled","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  orderBy, // Added orderBy for conversations, will sort in memory for messages\r\n  limit,\r\n  getDocs,\r\n  getDoc\r\n} from 'firebase/firestore';\r\n\r\n// --- Firebase Configuration ---\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Utility function for generating unique IDs (like conversation IDs)\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [authMode, setAuthMode] = useState('email-link');\r\n\r\n  // New states for conversation history\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const messagesEndRef = useRef(null); // Ref for scrolling to bottom of messages\r\n\r\n  // Scroll to bottom of messages whenever messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          setIsAuthReady(true);\r\n          setError(null);\r\n        } else {\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) {\r\n            try {\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n        }\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      if (!storedEmail) {\r\n        storedEmail = prompt('Please provide your email for confirmation');\r\n      }\r\n\r\n      if (!storedEmail) {\r\n        setError(\"Email not provided for sign-in link. Please restart the process.\");\r\n        setIsSigningInWithLink(false);\r\n        setLoading(false);\r\n        window.history.replaceState({}, document.title, window.location.pathname);\r\n        return;\r\n      }\r\n\r\n      signInWithEmailLink(auth, storedEmail, window.location.href)\r\n        .then((result) => {\r\n          window.localStorage.removeItem('emailForSignIn');\r\n          setUser(result.user);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          setError(null);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch((error) => {\r\n          setError(`Error completing sign-in with link: ${error.message}`);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        });\r\n    }\r\n  }, [auth, isAuthReady]);\r\n\r\n  // 3. Fetch conversations for the current user.\r\n  useEffect(() => {\r\n    if (!db || !user || !isAuthReady) return;\r\n\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const q = query(conversationsCollectionRef, orderBy('lastUpdated', 'desc')); // Order by last updated\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const fetchedConversations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedConversations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setConversations(fetchedConversations);\r\n\r\n      // If no conversation is selected, and there are conversations, select the most recent one\r\n      if (!currentConversationId && fetchedConversations.length > 0) {\r\n        setCurrentConversationId(fetchedConversations[0].id);\r\n      } else if (fetchedConversations.length === 0) {\r\n        // If there are no conversations, clear current conversation\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load conversations: ${firestoreError.message}`);\r\n      console.error(\"Firestore conversations error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, isAuthReady, appId, currentConversationId]); // Added currentConversationId to re-evaluate default selection\r\n\r\n  // 4. Fetch messages for the current conversation.\r\n  useEffect(() => {\r\n    if (!db || !user || !currentConversationId) {\r\n      setMessages([]); // Clear messages if no conversation is selected\r\n      return;\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n    const q = query(messagesCollectionRef, orderBy('timestamp', 'asc')); // Order messages by timestamp\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const fetchedMessages = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedMessages.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setMessages(fetchedMessages);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\r\n      console.error(\"Firestore messages error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, currentConversationId, appId]);\r\n\r\n  // 5. Start a new conversation.\r\n  const startNewChat = () => {\r\n    setCurrentConversationId(null); // Clear current conversation\r\n    setMessages([]); // Clear displayed messages\r\n    setNewMessage(''); // Clear input\r\n    setError(null); // Clear any errors\r\n    setIsAIGenerating(false); // Reset AI loading state\r\n  };\r\n\r\n  // 6. Handle sending a new message (and creating a new conversation if needed).\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !user || !db || isAIGenerating) return;\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n\r\n    // If no conversation is active, create a new one\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      const initialTitle = newMessage.substring(0, 50) + (newMessage.length > 50 ? '...' : '');\r\n\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: initialTitle,\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId); // Set the new conversation as current\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        console.error(\"Error creating new conversation:\", createError);\r\n        return;\r\n      }\r\n    } else {\r\n      // Update lastUpdated for existing conversation\r\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\r\n      try {\r\n        await setDoc(conversationDocRef, { lastUpdated: serverTimestamp() }, { merge: true });\r\n      } catch (updateError) {\r\n        console.error(\"Error updating conversation timestamp:\", updateError);\r\n      }\r\n    }\r\n\r\n    // Add message to the conversation's messages subcollection\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: newMessage,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message' // Explicitly mark user messages\r\n      });\r\n      setNewMessage('');\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  // 7. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    const actionCodeSettings = {\r\n      url: window.location.origin,\r\n      handleCodeInApp: true,\r\n      iOS: { bundleId: 'com.example.ios' },\r\n      android: { packageName: 'com.example.android', installApp: true, minimumVersion: '12' }\r\n    };\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Registration failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 9. Handle Email/Password Login\r\n  const handleEmailPasswordLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Login failed: ${e.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 10. Handle Logout\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setMessages([]);\r\n      setConversations([]); // Clear conversations on logout\r\n      setCurrentConversationId(null); // Clear current conversation\r\n      setEmailSent(false);\r\n      setIsSigningInWithLink(false);\r\n      setAuthMode('email-link');\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Logout failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // 11. AI Response Logic - New useEffect to trigger AI response\r\n  useEffect(() => {\r\n    if (!db || !isAuthReady || !user || messages.length === 0 || isAIGenerating || !currentConversationId) {\r\n      return;\r\n    }\r\n\r\n    const lastMessage = messages[messages.length - 1];\r\n\r\n    if (lastMessage.userId === user.uid && lastMessage.type === 'user-message') {\r\n      const getAIResponse = async () => {\r\n        setIsAIGenerating(true);\r\n        setError(null);\r\n\r\n        try {\r\n          // Filter chat history to only include user and AI messages for the model\r\n          const chatHistory = messages\r\n            .filter(msg => msg.type === 'user-message' || msg.type === 'ai-response')\r\n            .map(msg => ({\r\n              role: msg.userId === user.uid ? 'user' : 'model',\r\n              parts: [{ text: msg.text }]\r\n            }));\r\n\r\n          const payload = { contents: chatHistory };\r\n          const API_KEY = firebaseConfig.apiKey;\r\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${API_KEY}`;\r\n\r\n          const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n            try {\r\n              const response = await fetch(url, options);\r\n              if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n              }\r\n              return response;\r\n            } catch (error) {\r\n              if (retries > 0 && error.message.includes(\"API error\")) {\r\n                await new Promise(resolve => setTimeout(resolve, delay));\r\n                return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n              }\r\n              throw error;\r\n            }\r\n          };\r\n\r\n          const response = await fetchWithExponentialBackoff(apiUrl, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(payload)\r\n          });\r\n\r\n          const result = await response.json();\r\n          let responseText = \"Sorry, I couldn't generate a response.\";\r\n\r\n          if (result.candidates && result.candidates.length > 0 &&\r\n              result.candidates[0].content && result.candidates[0].content.parts &&\r\n              result.candidates[0].content.parts.length > 0) {\r\n            responseText = result.candidates[0].content.parts[0].text;\r\n          }\r\n\r\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n          await addDoc(messagesCollectionRef, {\r\n            text: responseText,\r\n            userId: 'bot',\r\n            userName: 'AI Chatbot',\r\n            timestamp: serverTimestamp(),\r\n            type: 'ai-response'\r\n          });\r\n\r\n        } catch (e) {\r\n          console.error(\"Error getting AI response:\", e);\r\n          setError(`AI response error: ${e.message}`);\r\n          const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n          await addDoc(messagesCollectionRef, {\r\n            text: `(AI Error: ${e.message})`,\r\n            userId: 'bot',\r\n            userName: 'AI Chatbot',\r\n            timestamp: serverTimestamp(),\r\n            type: 'ai-response'\r\n          });\r\n        } finally {\r\n          setIsAIGenerating(false);\r\n        }\r\n      };\r\n      getAIResponse();\r\n    }\r\n  }, [messages, db, isAuthReady, user, appId, isAIGenerating, currentConversationId]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\r\n      <div className=\"w-full max-w-4xl bg-white rounded-2xl shadow-xl overflow-hidden flex h-[90vh]\"> {/* Increased max-w and height */}\r\n\r\n        {/* Sidebar */}\r\n        {user && ( // Only show sidebar if user is logged in\r\n          <div className=\"w-1/4 bg-gray-800 text-white flex flex-col p-4 rounded-l-2xl\">\r\n            <h3 className=\"text-xl font-bold mb-4\">Conversations</h3>\r\n            <button\r\n              onClick={startNewChat}\r\n              className=\"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg mb-4 hover:bg-indigo-700 transition-colors\"\r\n            >\r\n              + New Chat\r\n            </button>\r\n            <div className=\"flex-1 overflow-y-auto space-y-2\">\r\n              {conversations.length === 0 ? (\r\n                <p className=\"text-gray-400 text-sm\">No conversations yet.</p>\r\n              ) : (\r\n                conversations.map((conv) => (\r\n                  <button\r\n                    key={conv.id}\r\n                    onClick={() => setCurrentConversationId(conv.id)}\r\n                    className={`w-full text-left p-3 rounded-lg transition-colors ${\r\n                      currentConversationId === conv.id ? 'bg-indigo-700' : 'bg-gray-700 hover:bg-gray-600'\r\n                    }`}\r\n                  >\r\n                    <p className=\"font-semibold text-sm truncate\">{conv.title || \"New Chat\"}</p>\r\n                    {conv.lastUpdated && (\r\n                      <p className=\"text-xs text-gray-400\">\r\n                        {new Date(conv.lastUpdated.seconds * 1000).toLocaleDateString()}\r\n                      </p>\r\n                    )}\r\n                  </button>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Chat Area */}\r\n        <div className={`flex-1 flex flex-col ${user ? 'rounded-r-2xl' : 'rounded-2xl'}`}> {/* Adjust rounded corners based on sidebar presence */}\r\n          {/* Header */}\r\n          <div className=\"bg-gradient-to-r from-purple-600 to-indigo-600 text-white p-4 text-center text-2xl font-bold\">\r\n            AI Chatbot App\r\n          </div>\r\n\r\n          {/* User ID and Status */}\r\n          <div className=\"bg-gray-200 text-gray-700 text-sm p-2 flex justify-between items-center\">\r\n              <span className=\"font-semibold\">User ID:</span>\r\n              <span className=\"font-mono text-xs p-1 bg-gray-300 rounded-md truncate max-w-[70%]\">\r\n                  {user ? user.uid : 'Not signed in'}\r\n              </span>\r\n              {user && (\r\n                <button\r\n                  onClick={handleLogout}\r\n                  className=\"ml-2 px-3 py-1 bg-red-500 text-white rounded-md text-xs hover:bg-red-600 transition-colors\"\r\n                >\r\n                  Logout\r\n                </button>\r\n              )}\r\n          </div>\r\n\r\n          {/* Loading and Error Display */}\r\n          {loading && (\r\n            <div className=\"flex-1 flex items-center justify-center p-4\">\r\n              <div className=\"text-center text-lg text-gray-500\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"animate-spin h-8 w-8 text-indigo-500 mx-auto mb-2\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                {isSigningInWithLink ? 'Completing sign-in with email link...' : 'Initializing Firebase...'}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"flex-1 flex items-center justify-center p-4\">\r\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative max-w-sm text-center\">\r\n                <strong className=\"font-bold block mb-1\">Error!</strong>\r\n                <span className=\"block sm:inline\">{error}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Conditional Rendering: Authentication Forms or Chat */}\r\n          {!loading && !error && !user && !isSigningInWithLink && (\r\n            <div className=\"flex-1 flex flex-col items-center justify-center p-4\">\r\n              <div className=\"flex mb-6\">\r\n                <button\r\n                  onClick={() => setAuthMode('email-link')}\r\n                  className={`px-4 py-2 rounded-l-lg font-semibold ${authMode === 'email-link' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\r\n                >\r\n                  Email Link\r\n                </button>\r\n                <button\r\n                  onClick={() => setAuthMode('email-password-login')}\r\n                  className={`px-4 py-2 font-semibold ${authMode === 'email-password-login' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\r\n                >\r\n                  Login\r\n                </button>\r\n                <button\r\n                  onClick={() => setAuthMode('email-password-signup')}\r\n                  className={`px-4 py-2 rounded-r-lg font-semibold ${authMode === 'email-password-signup' ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n\r\n              {authMode === 'email-link' && (\r\n                <>\r\n                  <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Sign In with Email Link</h2>\r\n                  {!emailSent ? (\r\n                    <form onSubmit={handleSendSignInLink} className=\"w-full max-w-sm flex flex-col items-center\">\r\n                      <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        placeholder=\"Enter your email\"\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                        required\r\n                      />\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                      >\r\n                        Send Sign-in Link\r\n                      </button>\r\n                    </form>\r\n                  ) : (\r\n                    <div className=\"text-center\">\r\n                      <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Email Sent!</h2>\r\n                      <p className=\"text-gray-600 mb-4\">\r\n                        Please check your inbox at <span className=\"font-semibold text-indigo-600\">{email}</span> for your sign-in link.\r\n                      </p>\r\n                      <button\r\n                        onClick={() => setEmailSent(false)}\r\n                        className=\"mt-6 bg-gray-200 text-gray-700 p-2 rounded-lg hover:bg-gray-300 transition-colors duration-200\"\r\n                      >\r\n                        Go Back\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {(authMode === 'email-password-login' || authMode === 'email-password-signup') && (\r\n                <form onSubmit={authMode === 'email-password-signup' ? handleEmailPasswordSignUp : handleEmailPasswordLogin} className=\"w-full max-w-sm flex flex-col items-center\">\r\n                  <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">\r\n                    {authMode === 'email-password-signup' ? 'Sign Up' : 'Log In'} with Email & Password\r\n                  </h2>\r\n                  <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                    required\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                    required\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                  >\r\n                    {authMode === 'email-password-signup' ? 'Sign Up' : 'Log In'}\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Main Chat Area */}\r\n          {!loading && !error && user && (\r\n            <>\r\n              <div className=\"flex-1 p-4 overflow-y-auto space-y-4 bg-gray-50\">\r\n                {messages.length === 0 && (\r\n                  <div className=\"text-center text-gray-400 mt-20\">\r\n                    {currentConversationId ? 'This conversation is empty. Send a message to start!' : 'Start a new chat to begin!'}\r\n                  </div>\r\n                )}\r\n                {messages.map((msg) => (\r\n                  <div key={msg.id} className={`flex ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`}>\r\n                    <div className={`p-3 rounded-xl shadow-md max-w-xs sm:max-w-md break-words ${\r\n                      msg.userId === user.uid\r\n                        ? 'bg-blue-500 text-white rounded-br-none'\r\n                        : 'bg-gray-300 text-gray-800 rounded-bl-none'\r\n                    }`}>\r\n                      <div className=\"font-bold text-xs mb-1\">\r\n                        {msg.userId === user.uid ? 'You' : msg.userName}\r\n                      </div>\r\n                      {msg.text}\r\n                      <div className=\"text-right text-xs text-opacity-80 mt-1\">\r\n                        {msg.timestamp ? new Date(msg.timestamp.seconds * 1000).toLocaleTimeString() : '...'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                {/* AI Generating Indicator */}\r\n                {isAIGenerating && (\r\n                  <div className=\"flex justify-start\">\r\n                    <div className=\"p-3 rounded-xl shadow-md bg-gray-300 text-gray-800 rounded-bl-none\">\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"mr-2\">AI is typing</span>\r\n                        <div className=\"dot-flashing\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div ref={messagesEndRef} /> {/* Scroll to this element */}\r\n              </div>\r\n\r\n              {/* Message Input */}\r\n              <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-100 flex items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  placeholder=\"Type your message...\"\r\n                  className=\"flex-1 p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  disabled={isAIGenerating}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"ml-3 p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 transition-colors duration-200\"\r\n                  disabled={isAIGenerating || !newMessage.trim()}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n                  </svg>\r\n                </button>\r\n              </form>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,qBAAqB,EACrBC,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,mBAAmB,EACnBC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,QACF,eAAe;AACtB,SACEC,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,MAAM,EACNC,eAAe,EACfC,GAAG,EACHC,MAAM,EACNC,KAAK,EACLC,OAAO;AAAE;AACTC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,mBAAmB,GAAG;EAC1BC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,kCAAkC;EAC9CC,SAAS,EAAE,kBAAkB;EAC7BC,aAAa,EAAE,sCAAsC;EACrDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,cAAc,GAAG,OAAOC,iBAAiB,KAAK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACF,iBAAiB,CAAC,GAAGT,mBAAmB;AACrH,MAAMM,KAAK,GAAG,OAAOM,QAAQ,KAAK,WAAW,GAAGA,QAAQ,GAAG,gBAAgB;AAC3E,MAAMC,gBAAgB,GAAG,OAAOC,oBAAoB,KAAK,WAAW,GAAGA,oBAAoB,GAAG,IAAI;;AAElG;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,OAAO,sCAAsC,CAACC,OAAO,CAAC,OAAO,EAAE,UAASC,CAAC,EAAE;IACzE,MAAMC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MAAEC,CAAC,GAAGJ,CAAC,KAAK,GAAG,GAAGC,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAG,GAAI;IACrE,OAAOG,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACyD,IAAI,EAAEC,OAAO,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6D,IAAI,EAAEC,OAAO,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC+D,OAAO,EAAEC,UAAU,CAAC,GAAGhE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiE,KAAK,EAAEC,QAAQ,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmE,QAAQ,EAAEC,WAAW,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqE,UAAU,EAAEC,aAAa,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuE,KAAK,EAAEC,QAAQ,CAAC,GAAGxE,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyE,QAAQ,EAAEC,WAAW,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2E,SAAS,EAAEC,YAAY,CAAC,GAAG5E,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6E,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9E,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC+E,cAAc,EAAEC,iBAAiB,CAAC,GAAGhF,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiF,QAAQ,EAAEC,WAAW,CAAC,GAAGlF,QAAQ,CAAC,YAAY,CAAC;;EAEtD;EACA,MAAM,CAACmF,aAAa,EAAEC,gBAAgB,CAAC,GAAGpF,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqF,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtF,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAMuF,cAAc,GAAGrF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IAAA,IAAAuF,qBAAA;IACd,CAAAA,qBAAA,GAAAD,cAAc,CAACE,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACxB,QAAQ,CAAC,CAAC;;EAEd;EACAlE,SAAS,CAAC,MAAM;IACd,IAAI2F,MAAM,CAACC,IAAI,CAACvD,cAAc,CAAC,CAACwD,MAAM,KAAK,CAAC,IAAI,CAACxD,cAAc,CAACP,MAAM,EAAE;MACtEmC,QAAQ,CAAC,+HAA+H,CAAC;MACzIF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAM+B,WAAW,GAAG5F,aAAa,CAACmC,cAAc,CAAC;MACjD,MAAM0D,YAAY,GAAG5F,OAAO,CAAC2F,WAAW,CAAC;MACzC,MAAME,UAAU,GAAGnF,YAAY,CAACiF,WAAW,CAAC;MAE5CrC,OAAO,CAACsC,YAAY,CAAC;MACrBxC,KAAK,CAACyC,UAAU,CAAC;MAEjB,MAAMC,WAAW,GAAG3F,kBAAkB,CAACyF,YAAY,EAAE,MAAOG,WAAW,IAAK;QAC1E,IAAIA,WAAW,EAAE;UACfrC,OAAO,CAACqC,WAAW,CAAC;UACpBvC,cAAc,CAAC,IAAI,CAAC;UACpBM,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,MAAM;UACL,IAAIvB,gBAAgB,EAAE;YACnB,IAAI;cACF,MAAMtC,qBAAqB,CAAC2F,YAAY,EAAErD,gBAAgB,CAAC;YAC7D,CAAC,CAAC,OAAOyD,CAAC,EAAE;cACVC,OAAO,CAACpC,KAAK,CAAC,8BAA8B,EAAEmC,CAAC,CAAC;cAChDlC,QAAQ,CAAC,gCAAgCkC,CAAC,CAACE,OAAO,8EAA8E,CAAC;YACnI;UACH,CAAC,MAAM,IAAI,CAACzB,mBAAmB,EAAE;YAC/B,IAAI;cACF,MAAMvE,iBAAiB,CAAC0F,YAAY,CAAC;YACvC,CAAC,CAAC,OAAOI,CAAC,EAAE;cACVC,OAAO,CAACpC,KAAK,CAAC,2BAA2B,EAAEmC,CAAC,CAAC;cAC7ClC,QAAQ,CAAC,6BAA6BkC,CAAC,CAACE,OAAO,wFAAwF,CAAC;YAC1I;UACF;UACA1C,cAAc,CAAC,IAAI,CAAC;QACtB;QACAI,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;MACF,OAAO,MAAMkC,WAAW,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVlC,QAAQ,CAAC,kCAAkCkC,CAAC,CAACE,OAAO,8CAA8C,CAAC;MACnGtC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/D,SAAS,CAAC,MAAM;IACd,IAAI,CAACwD,IAAI,IAAI,CAACE,WAAW,EAAE;IAE3B,IAAIlD,qBAAqB,CAACgD,IAAI,EAAE8C,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,EAAE;MACrD3B,sBAAsB,CAAC,IAAI,CAAC;MAC5Bd,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI0C,WAAW,GAAGH,MAAM,CAACI,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAE/D,IAAI,CAACF,WAAW,EAAE;QAChBA,WAAW,GAAGG,MAAM,CAAC,4CAA4C,CAAC;MACpE;MAEA,IAAI,CAACH,WAAW,EAAE;QAChBxC,QAAQ,CAAC,kEAAkE,CAAC;QAC5EY,sBAAsB,CAAC,KAAK,CAAC;QAC7Bd,UAAU,CAAC,KAAK,CAAC;QACjBuC,MAAM,CAACO,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEV,MAAM,CAACC,QAAQ,CAACU,QAAQ,CAAC;QACzE;MACF;MAEAxG,mBAAmB,CAAC+C,IAAI,EAAEiD,WAAW,EAAEH,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CACzDU,IAAI,CAAEC,MAAM,IAAK;QAChBb,MAAM,CAACI,YAAY,CAACU,UAAU,CAAC,gBAAgB,CAAC;QAChDvD,OAAO,CAACsD,MAAM,CAACvD,IAAI,CAAC;QACpBiB,sBAAsB,CAAC,KAAK,CAAC;QAC7Bd,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAAC,IAAI,CAAC;QACdqC,MAAM,CAACO,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEV,MAAM,CAACC,QAAQ,CAACU,QAAQ,CAAC;MAC3E,CAAC,CAAC,CACDI,KAAK,CAAErD,KAAK,IAAK;QAChBC,QAAQ,CAAC,uCAAuCD,KAAK,CAACqC,OAAO,EAAE,CAAC;QAChExB,sBAAsB,CAAC,KAAK,CAAC;QAC7Bd,UAAU,CAAC,KAAK,CAAC;QACjBuC,MAAM,CAACO,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEV,MAAM,CAACC,QAAQ,CAACU,QAAQ,CAAC;MAC3E,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACzD,IAAI,EAAEE,WAAW,CAAC,CAAC;;EAEvB;EACA1D,SAAS,CAAC,MAAM;IACd,IAAI,CAACsD,EAAE,IAAI,CAACM,IAAI,IAAI,CAACF,WAAW,EAAE;IAElC,MAAM4D,0BAA0B,GAAGxG,UAAU,CAACwC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,CAAC;IACzG,MAAMC,CAAC,GAAGpG,KAAK,CAACkG,0BAA0B,EAAEjG,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;IAE7E,MAAM4E,WAAW,GAAGlF,UAAU,CAACyG,CAAC,EAAGC,aAAa,IAAK;MACnD,MAAMC,oBAAoB,GAAG,EAAE;MAC/BD,aAAa,CAACE,OAAO,CAAEzG,GAAG,IAAK;QAC7BwG,oBAAoB,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAE3G,GAAG,CAAC2G,EAAE;UAAE,GAAG3G,GAAG,CAAC4G,IAAI,CAAC;QAAE,CAAC,CAAC;MAC1D,CAAC,CAAC;MACF3C,gBAAgB,CAACuC,oBAAoB,CAAC;;MAEtC;MACA,IAAI,CAACtC,qBAAqB,IAAIsC,oBAAoB,CAAC7B,MAAM,GAAG,CAAC,EAAE;QAC7DR,wBAAwB,CAACqC,oBAAoB,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC;MACtD,CAAC,MAAM,IAAIH,oBAAoB,CAAC7B,MAAM,KAAK,CAAC,EAAE;QAC5C;QACAR,wBAAwB,CAAC,IAAI,CAAC;QAC9BlB,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,EAAG4D,cAAc,IAAK;MACrB9D,QAAQ,CAAC,iCAAiC8D,cAAc,CAAC1B,OAAO,EAAE,CAAC;MACnED,OAAO,CAACpC,KAAK,CAAC,gCAAgC,EAAE+D,cAAc,CAAC;IACjE,CAAC,CAAC;IAEF,OAAO,MAAM9B,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAAC3C,EAAE,EAAEM,IAAI,EAAEF,WAAW,EAAEvB,KAAK,EAAEiD,qBAAqB,CAAC,CAAC,CAAC,CAAC;;EAE3D;EACApF,SAAS,CAAC,MAAM;IACd,IAAI,CAACsD,EAAE,IAAI,CAACM,IAAI,IAAI,CAACwB,qBAAqB,EAAE;MAC1CjB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjB;IACF;IAEA,MAAM6D,qBAAqB,GAAGlH,UAAU,CAACwC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,EAAEnC,qBAAqB,EAAE,UAAU,CAAC;IACvI,MAAMoC,CAAC,GAAGpG,KAAK,CAAC4G,qBAAqB,EAAE3G,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;;IAErE,MAAM4E,WAAW,GAAGlF,UAAU,CAACyG,CAAC,EAAGC,aAAa,IAAK;MACnD,MAAMQ,eAAe,GAAG,EAAE;MAC1BR,aAAa,CAACE,OAAO,CAAEzG,GAAG,IAAK;QAC7B+G,eAAe,CAACL,IAAI,CAAC;UAAEC,EAAE,EAAE3G,GAAG,CAAC2G,EAAE;UAAE,GAAG3G,GAAG,CAAC4G,IAAI,CAAC;QAAE,CAAC,CAAC;MACrD,CAAC,CAAC;MACF3D,WAAW,CAAC8D,eAAe,CAAC;IAC9B,CAAC,EAAGF,cAAc,IAAK;MACrB9D,QAAQ,CAAC,6CAA6C8D,cAAc,CAAC1B,OAAO,EAAE,CAAC;MAC/ED,OAAO,CAACpC,KAAK,CAAC,2BAA2B,EAAE+D,cAAc,CAAC;IAC5D,CAAC,CAAC;IAEF,OAAO,MAAM9B,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAAC3C,EAAE,EAAEM,IAAI,EAAEwB,qBAAqB,EAAEjD,KAAK,CAAC,CAAC;;EAE5C;EACA,MAAM+F,YAAY,GAAGA,CAAA,KAAM;IACzB7C,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;IAChClB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACjBE,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACnBJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChBc,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMoD,iBAAiB,GAAG,MAAOhC,CAAC,IAAK;IACrCA,CAAC,CAACiC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAChE,UAAU,CAACiE,IAAI,CAAC,CAAC,IAAI,CAACzE,IAAI,IAAI,CAACN,EAAE,IAAIwB,cAAc,EAAE;IAE1D,IAAIwD,mBAAmB,GAAGlD,qBAAqB;;IAE/C;IACA,IAAI,CAACkD,mBAAmB,EAAE;MACxB,MAAMC,SAAS,GAAG3F,UAAU,CAAC,CAAC;MAC9B,MAAM0E,0BAA0B,GAAGxG,UAAU,CAACwC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,CAAC;MACzG,MAAMiB,qBAAqB,GAAGtH,GAAG,CAACoG,0BAA0B,EAAEiB,SAAS,CAAC;MACxE,MAAME,YAAY,GAAGrE,UAAU,CAACsE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAItE,UAAU,CAACyB,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;MAExF,IAAI;QACF,MAAM1E,MAAM,CAACqH,qBAAqB,EAAE;UAClCxB,KAAK,EAAEyB,YAAY;UACnBE,SAAS,EAAE1H,eAAe,CAAC,CAAC;UAC5B2H,WAAW,EAAE3H,eAAe,CAAC;QAC/B,CAAC,CAAC;QACFqH,mBAAmB,GAAGC,SAAS;QAC/BlD,wBAAwB,CAACkD,SAAS,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOM,WAAW,EAAE;QACpB5E,QAAQ,CAAC,sCAAsC4E,WAAW,CAACxC,OAAO,EAAE,CAAC;QACrED,OAAO,CAACpC,KAAK,CAAC,kCAAkC,EAAE6E,WAAW,CAAC;QAC9D;MACF;IACF,CAAC,MAAM;MACL;MACA,MAAMC,kBAAkB,GAAG5H,GAAG,CAACoC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,EAAEe,mBAAmB,CAAC;MAC/G,IAAI;QACF,MAAMnH,MAAM,CAAC2H,kBAAkB,EAAE;UAAEF,WAAW,EAAE3H,eAAe,CAAC;QAAE,CAAC,EAAE;UAAE8H,KAAK,EAAE;QAAK,CAAC,CAAC;MACvF,CAAC,CAAC,OAAOC,WAAW,EAAE;QACpB5C,OAAO,CAACpC,KAAK,CAAC,wCAAwC,EAAEgF,WAAW,CAAC;MACtE;IACF;;IAEA;IACA,IAAI;MACF,MAAMhB,qBAAqB,GAAGlH,UAAU,CAACwC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,EAAEe,mBAAmB,EAAE,UAAU,CAAC;MACrI,MAAMtH,MAAM,CAACgH,qBAAqB,EAAE;QAClCiB,IAAI,EAAE7E,UAAU;QAChB8E,MAAM,EAAEtF,IAAI,CAAC2D,GAAG;QAChB4B,QAAQ,EAAE,QAAQvF,IAAI,CAAC2D,GAAG,CAACmB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5CU,SAAS,EAAEnI,eAAe,CAAC,CAAC;QAC5BoI,IAAI,EAAE,cAAc,CAAC;MACvB,CAAC,CAAC;MACFhF,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAO8B,CAAC,EAAE;MACVlC,QAAQ,CAAC,2BAA2BkC,CAAC,CAACE,OAAO,EAAE,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMiD,oBAAoB,GAAG,MAAOnD,CAAC,IAAK;IACxCA,CAAC,CAACiC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5E,IAAI,IAAI,CAACc,KAAK,CAAC+D,IAAI,CAAC,CAAC,EAAE;MAC1BpE,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;IACAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMsF,kBAAkB,GAAG;MACzBC,GAAG,EAAElD,MAAM,CAACC,QAAQ,CAACkD,MAAM;MAC3BC,eAAe,EAAE,IAAI;MACrBC,GAAG,EAAE;QAAEC,QAAQ,EAAE;MAAkB,CAAC;MACpCC,OAAO,EAAE;QAAEC,WAAW,EAAE,qBAAqB;QAAEC,UAAU,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK;IACxF,CAAC;IACD,IAAI;MACF,MAAMzJ,qBAAqB,CAACiD,IAAI,EAAEc,KAAK,EAAEiF,kBAAkB,CAAC;MAC5D5E,YAAY,CAAC,IAAI,CAAC;MAClB2B,MAAM,CAACI,YAAY,CAACuD,OAAO,CAAC,gBAAgB,EAAE3F,KAAK,CAAC;MACpDP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAAC,gCAAgCD,KAAK,CAACqC,OAAO,EAAE,CAAC;MACzDtC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMmG,yBAAyB,GAAG,MAAO/D,CAAC,IAAK;IAC7CA,CAAC,CAACiC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5E,IAAI,IAAI,CAACc,KAAK,CAAC+D,IAAI,CAAC,CAAC,IAAI,CAAC7D,QAAQ,CAAC6D,IAAI,CAAC,CAAC,EAAE;MAC9CpE,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACF;IACAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMvD,8BAA8B,CAAC8C,IAAI,EAAEc,KAAK,EAAEE,QAAQ,CAAC;MAC3DD,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAAC,wBAAwBD,KAAK,CAACqC,OAAO,EAAE,CAAC;MACjDtC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMoG,wBAAwB,GAAG,MAAOhE,CAAC,IAAK;IAC5CA,CAAC,CAACiC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5E,IAAI,IAAI,CAACc,KAAK,CAAC+D,IAAI,CAAC,CAAC,IAAI,CAAC7D,QAAQ,CAAC6D,IAAI,CAAC,CAAC,EAAE;MAC9CpE,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACF;IACAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMtD,0BAA0B,CAAC6C,IAAI,EAAEc,KAAK,EAAEE,QAAQ,CAAC;MACvDD,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAAC,iBAAiBkC,CAAC,CAACE,OAAO,EAAE,CAAC;MACtCtC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC5G,IAAI,EAAE;IACX,IAAI;MACF,MAAM5C,OAAO,CAAC4C,IAAI,CAAC;MACnBK,OAAO,CAAC,IAAI,CAAC;MACbM,WAAW,CAAC,EAAE,CAAC;MACfgB,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;MACtBE,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;MAChCV,YAAY,CAAC,KAAK,CAAC;MACnBE,sBAAsB,CAAC,KAAK,CAAC;MAC7BI,WAAW,CAAC,YAAY,CAAC;MACzBhB,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,kBAAkBD,KAAK,CAACqC,OAAO,EAAE,CAAC;IAC7C;EACF,CAAC;;EAED;EACArG,SAAS,CAAC,MAAM;IACd,IAAI,CAACsD,EAAE,IAAI,CAACI,WAAW,IAAI,CAACE,IAAI,IAAIM,QAAQ,CAAC2B,MAAM,KAAK,CAAC,IAAIf,cAAc,IAAI,CAACM,qBAAqB,EAAE;MACrG;IACF;IAEA,MAAMiF,WAAW,GAAGnG,QAAQ,CAACA,QAAQ,CAAC2B,MAAM,GAAG,CAAC,CAAC;IAEjD,IAAIwE,WAAW,CAACnB,MAAM,KAAKtF,IAAI,CAAC2D,GAAG,IAAI8C,WAAW,CAAChB,IAAI,KAAK,cAAc,EAAE;MAC1E,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChCvF,iBAAiB,CAAC,IAAI,CAAC;QACvBd,QAAQ,CAAC,IAAI,CAAC;QAEd,IAAI;UACF;UACA,MAAMsG,WAAW,GAAGrG,QAAQ,CACzBsG,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACpB,IAAI,KAAK,cAAc,IAAIoB,GAAG,CAACpB,IAAI,KAAK,aAAa,CAAC,CACxEqB,GAAG,CAACD,GAAG,KAAK;YACXE,IAAI,EAAEF,GAAG,CAACvB,MAAM,KAAKtF,IAAI,CAAC2D,GAAG,GAAG,MAAM,GAAG,OAAO;YAChDqD,KAAK,EAAE,CAAC;cAAE3B,IAAI,EAAEwB,GAAG,CAACxB;YAAK,CAAC;UAC5B,CAAC,CAAC,CAAC;UAEL,MAAM4B,OAAO,GAAG;YAAEC,QAAQ,EAAEP;UAAY,CAAC;UACzC,MAAMQ,OAAO,GAAG1I,cAAc,CAACP,MAAM;UACrC,MAAMkJ,MAAM,GAAG,8GAA8GD,OAAO,EAAE;UAEtI,MAAME,2BAA2B,GAAG,MAAAA,CAAOzB,GAAG,EAAE0B,OAAO,EAAEC,OAAO,GAAG,CAAC,EAAEC,KAAK,GAAG,IAAI,KAAK;YACrF,IAAI;cACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC9B,GAAG,EAAE0B,OAAO,CAAC;cAC1C,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;gBAAA,IAAAC,gBAAA;gBAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;gBACvC,MAAM,IAAIC,KAAK,CAAC,cAAc,EAAAH,gBAAA,GAAAC,SAAS,CAACzH,KAAK,cAAAwH,gBAAA,uBAAfA,gBAAA,CAAiBnF,OAAO,KAAIgF,QAAQ,CAACO,UAAU,EAAE,CAAC;cAClF;cACA,OAAOP,QAAQ;YACjB,CAAC,CAAC,OAAOrH,KAAK,EAAE;cACd,IAAImH,OAAO,GAAG,CAAC,IAAInH,KAAK,CAACqC,OAAO,CAACwF,QAAQ,CAAC,WAAW,CAAC,EAAE;gBACtD,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEX,KAAK,CAAC,CAAC;gBACxD,OAAOH,2BAA2B,CAACzB,GAAG,EAAE0B,OAAO,EAAEC,OAAO,GAAG,CAAC,EAAEC,KAAK,GAAG,CAAC,CAAC;cAC1E;cACA,MAAMpH,KAAK;YACb;UACF,CAAC;UAED,MAAMqH,QAAQ,GAAG,MAAMJ,2BAA2B,CAACD,MAAM,EAAE;YACzDiB,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB,CAAC;YAC/CC,IAAI,EAAE5J,IAAI,CAAC6J,SAAS,CAACvB,OAAO;UAC9B,CAAC,CAAC;UAEF,MAAM1D,MAAM,GAAG,MAAMkE,QAAQ,CAACK,IAAI,CAAC,CAAC;UACpC,IAAIW,YAAY,GAAG,wCAAwC;UAE3D,IAAIlF,MAAM,CAACmF,UAAU,IAAInF,MAAM,CAACmF,UAAU,CAACzG,MAAM,GAAG,CAAC,IACjDsB,MAAM,CAACmF,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,IAAIpF,MAAM,CAACmF,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC3B,KAAK,IAClEzD,MAAM,CAACmF,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC3B,KAAK,CAAC/E,MAAM,GAAG,CAAC,EAAE;YACjDwG,YAAY,GAAGlF,MAAM,CAACmF,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC3B,KAAK,CAAC,CAAC,CAAC,CAAC3B,IAAI;UAC3D;UAEA,MAAMjB,qBAAqB,GAAGlH,UAAU,CAACwC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,EAAEnC,qBAAqB,EAAE,UAAU,CAAC;UACvI,MAAMpE,MAAM,CAACgH,qBAAqB,EAAE;YAClCiB,IAAI,EAAEoD,YAAY;YAClBnD,MAAM,EAAE,KAAK;YACbC,QAAQ,EAAE,YAAY;YACtBC,SAAS,EAAEnI,eAAe,CAAC,CAAC;YAC5BoI,IAAI,EAAE;UACR,CAAC,CAAC;QAEJ,CAAC,CAAC,OAAOlD,CAAC,EAAE;UACVC,OAAO,CAACpC,KAAK,CAAC,4BAA4B,EAAEmC,CAAC,CAAC;UAC9ClC,QAAQ,CAAC,sBAAsBkC,CAAC,CAACE,OAAO,EAAE,CAAC;UAC3C,MAAM2B,qBAAqB,GAAGlH,UAAU,CAACwC,EAAE,EAAE,WAAW,EAAEnB,KAAK,EAAE,OAAO,EAAEyB,IAAI,CAAC2D,GAAG,EAAE,eAAe,EAAEnC,qBAAqB,EAAE,UAAU,CAAC;UACvI,MAAMpE,MAAM,CAACgH,qBAAqB,EAAE;YAClCiB,IAAI,EAAE,cAAc9C,CAAC,CAACE,OAAO,GAAG;YAChC6C,MAAM,EAAE,KAAK;YACbC,QAAQ,EAAE,YAAY;YACtBC,SAAS,EAAEnI,eAAe,CAAC,CAAC;YAC5BoI,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,CAAC,SAAS;UACRtE,iBAAiB,CAAC,KAAK,CAAC;QAC1B;MACF,CAAC;MACDuF,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACpG,QAAQ,EAAEZ,EAAE,EAAEI,WAAW,EAAEE,IAAI,EAAEzB,KAAK,EAAE2C,cAAc,EAAEM,qBAAqB,CAAC,CAAC;EAEnF,oBACE1D,OAAA;IAAK8K,SAAS,EAAC,kFAAkF;IAAAC,QAAA,eAC/F/K,OAAA;MAAK8K,SAAS,EAAC,+EAA+E;MAAAC,QAAA,GAAC,GAAC,EAG7F7I,IAAI;MAAA;MAAM;MACTlC,OAAA;QAAK8K,SAAS,EAAC,8DAA8D;QAAAC,QAAA,gBAC3E/K,OAAA;UAAI8K,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDnL,OAAA;UACEoL,OAAO,EAAE5E,YAAa;UACtBsE,SAAS,EAAC,iGAAiG;UAAAC,QAAA,EAC5G;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnL,OAAA;UAAK8K,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAC9CvH,aAAa,CAACW,MAAM,KAAK,CAAC,gBACzBnE,OAAA;YAAG8K,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,GAE9D3H,aAAa,CAACwF,GAAG,CAAEqC,IAAI,iBACrBrL,OAAA;YAEEoL,OAAO,EAAEA,CAAA,KAAMzH,wBAAwB,CAAC0H,IAAI,CAAClF,EAAE,CAAE;YACjD2E,SAAS,EAAE,qDACTpH,qBAAqB,KAAK2H,IAAI,CAAClF,EAAE,GAAG,eAAe,GAAG,+BAA+B,EACpF;YAAA4E,QAAA,gBAEH/K,OAAA;cAAG8K,SAAS,EAAC,gCAAgC;cAAAC,QAAA,EAAEM,IAAI,CAAC/F,KAAK,IAAI;YAAU;cAAA0F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC3EE,IAAI,CAACnE,WAAW,iBACflH,OAAA;cAAG8K,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EACjC,IAAIO,IAAI,CAACD,IAAI,CAACnE,WAAW,CAACqE,OAAO,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CACJ;UAAA,GAXIE,IAAI,CAAClF,EAAE;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYN,CACT;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGDnL,OAAA;QAAK8K,SAAS,EAAE,wBAAwB5I,IAAI,GAAG,eAAe,GAAG,aAAa,EAAG;QAAA6I,QAAA,GAAC,GAAC,eAEjF/K,OAAA;UAAK8K,SAAS,EAAC,8FAA8F;UAAAC,QAAA,EAAC;QAE9G;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAGNnL,OAAA;UAAK8K,SAAS,EAAC,yEAAyE;UAAAC,QAAA,gBACpF/K,OAAA;YAAM8K,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/CnL,OAAA;YAAM8K,SAAS,EAAC,mEAAmE;YAAAC,QAAA,EAC9E7I,IAAI,GAAGA,IAAI,CAAC2D,GAAG,GAAG;UAAe;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,EACNjJ,IAAI,iBACHlC,OAAA;YACEoL,OAAO,EAAE1C,YAAa;YACtBoC,SAAS,EAAC,4FAA4F;YAAAC,QAAA,EACvG;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAGL/I,OAAO,iBACNpC,OAAA;UAAK8K,SAAS,EAAC,6CAA6C;UAAAC,QAAA,eAC1D/K,OAAA;YAAK8K,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAChD/K,OAAA;cAAKyL,KAAK,EAAC,4BAA4B;cAACX,SAAS,EAAC,mDAAmD;cAACY,IAAI,EAAC,MAAM;cAACC,OAAO,EAAC,WAAW;cAAAZ,QAAA,gBACnI/K,OAAA;gBAAQ8K,SAAS,EAAC,YAAY;gBAACc,EAAE,EAAC,IAAI;gBAACC,EAAE,EAAC,IAAI;gBAACxK,CAAC,EAAC,IAAI;gBAACyK,MAAM,EAAC,cAAc;gBAACC,WAAW,EAAC;cAAG;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eACrGnL,OAAA;gBAAM8K,SAAS,EAAC,YAAY;gBAACY,IAAI,EAAC,cAAc;gBAACM,CAAC,EAAC;cAAiH;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzK,CAAC,EACLjI,mBAAmB,GAAG,uCAAuC,GAAG,0BAA0B;UAAA;YAAA8H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEA7I,KAAK,iBACJtC,OAAA;UAAK8K,SAAS,EAAC,6CAA6C;UAAAC,QAAA,eAC1D/K,OAAA;YAAK8K,SAAS,EAAC,kGAAkG;YAAAC,QAAA,gBAC/G/K,OAAA;cAAQ8K,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxDnL,OAAA;cAAM8K,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEzI;YAAK;cAAA0I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGA,CAAC/I,OAAO,IAAI,CAACE,KAAK,IAAI,CAACJ,IAAI,IAAI,CAACgB,mBAAmB,iBAClDlD,OAAA;UAAK8K,SAAS,EAAC,sDAAsD;UAAAC,QAAA,gBACnE/K,OAAA;YAAK8K,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/K,OAAA;cACEoL,OAAO,EAAEA,CAAA,KAAM7H,WAAW,CAAC,YAAY,CAAE;cACzCuH,SAAS,EAAE,wCAAwCxH,QAAQ,KAAK,YAAY,GAAG,0BAA0B,GAAG,6CAA6C,EAAG;cAAAyH,QAAA,EAC7J;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnL,OAAA;cACEoL,OAAO,EAAEA,CAAA,KAAM7H,WAAW,CAAC,sBAAsB,CAAE;cACnDuH,SAAS,EAAE,2BAA2BxH,QAAQ,KAAK,sBAAsB,GAAG,0BAA0B,GAAG,6CAA6C,EAAG;cAAAyH,QAAA,EAC1J;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnL,OAAA;cACEoL,OAAO,EAAEA,CAAA,KAAM7H,WAAW,CAAC,uBAAuB,CAAE;cACpDuH,SAAS,EAAE,wCAAwCxH,QAAQ,KAAK,uBAAuB,GAAG,0BAA0B,GAAG,6CAA6C,EAAG;cAAAyH,QAAA,EACxK;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAEL7H,QAAQ,KAAK,YAAY,iBACxBtD,OAAA,CAAAE,SAAA;YAAA6K,QAAA,gBACE/K,OAAA;cAAI8K,SAAS,EAAC,0CAA0C;cAAAC,QAAA,EAAC;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACpF,CAACnI,SAAS,gBACThD,OAAA;cAAMiM,QAAQ,EAAErE,oBAAqB;cAACkD,SAAS,EAAC,4CAA4C;cAAAC,QAAA,gBAC1F/K,OAAA;gBACE2H,IAAI,EAAC,OAAO;gBACZuE,KAAK,EAAEtJ,KAAM;gBACbuJ,QAAQ,EAAG1H,CAAC,IAAK5B,QAAQ,CAAC4B,CAAC,CAAC2H,MAAM,CAACF,KAAK,CAAE;gBAC1CG,WAAW,EAAC,kBAAkB;gBAC9BvB,SAAS,EAAC,yGAAyG;gBACnHwB,QAAQ;cAAA;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACFnL,OAAA;gBACE2H,IAAI,EAAC,QAAQ;gBACbmD,SAAS,EAAC,6GAA6G;gBAAAC,QAAA,EACxH;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,gBAEPnL,OAAA;cAAK8K,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B/K,OAAA;gBAAI8K,SAAS,EAAC,0CAA0C;gBAAAC,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzEnL,OAAA;gBAAG8K,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,GAAC,6BACL,eAAA/K,OAAA;kBAAM8K,SAAS,EAAC,+BAA+B;kBAAAC,QAAA,EAAEnI;gBAAK;kBAAAoI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,2BAC3F;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJnL,OAAA;gBACEoL,OAAO,EAAEA,CAAA,KAAMnI,YAAY,CAAC,KAAK,CAAE;gBACnC6H,SAAS,EAAC,gGAAgG;gBAAAC,QAAA,EAC3G;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACN;UAAA,eACD,CACH,EAEA,CAAC7H,QAAQ,KAAK,sBAAsB,IAAIA,QAAQ,KAAK,uBAAuB,kBAC3EtD,OAAA;YAAMiM,QAAQ,EAAE3I,QAAQ,KAAK,uBAAuB,GAAGkF,yBAAyB,GAAGC,wBAAyB;YAACqC,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBACjK/K,OAAA;cAAI8K,SAAS,EAAC,0CAA0C;cAAAC,QAAA,GACrDzH,QAAQ,KAAK,uBAAuB,GAAG,SAAS,GAAG,QAAQ,EAAC,wBAC/D;YAAA;cAAA0H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLnL,OAAA;cACE2H,IAAI,EAAC,OAAO;cACZuE,KAAK,EAAEtJ,KAAM;cACbuJ,QAAQ,EAAG1H,CAAC,IAAK5B,QAAQ,CAAC4B,CAAC,CAAC2H,MAAM,CAACF,KAAK,CAAE;cAC1CG,WAAW,EAAC,OAAO;cACnBvB,SAAS,EAAC,yGAAyG;cACnHwB,QAAQ;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACFnL,OAAA;cACE2H,IAAI,EAAC,UAAU;cACfuE,KAAK,EAAEpJ,QAAS;cAChBqJ,QAAQ,EAAG1H,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAAC2H,MAAM,CAACF,KAAK,CAAE;cAC7CG,WAAW,EAAC,UAAU;cACtBvB,SAAS,EAAC,yGAAyG;cACnHwB,QAAQ;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACFnL,OAAA;cACE2H,IAAI,EAAC,QAAQ;cACbmD,SAAS,EAAC,6GAA6G;cAAAC,QAAA,EAEtHzH,QAAQ,KAAK,uBAAuB,GAAG,SAAS,GAAG;YAAQ;cAAA0H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,EAGA,CAAC/I,OAAO,IAAI,CAACE,KAAK,IAAIJ,IAAI,iBACzBlC,OAAA,CAAAE,SAAA;UAAA6K,QAAA,gBACE/K,OAAA;YAAK8K,SAAS,EAAC,iDAAiD;YAAAC,QAAA,GAC7DvI,QAAQ,CAAC2B,MAAM,KAAK,CAAC,iBACpBnE,OAAA;cAAK8K,SAAS,EAAC,iCAAiC;cAAAC,QAAA,EAC7CrH,qBAAqB,GAAG,sDAAsD,GAAG;YAA4B;cAAAsH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3G,CACN,EACA3I,QAAQ,CAACwG,GAAG,CAAED,GAAG,iBAChB/I,OAAA;cAAkB8K,SAAS,EAAE,QAAQ/B,GAAG,CAACvB,MAAM,KAAKtF,IAAI,CAAC2D,GAAG,GAAG,aAAa,GAAG,eAAe,EAAG;cAAAkF,QAAA,eAC/F/K,OAAA;gBAAK8K,SAAS,EAAE,6DACd/B,GAAG,CAACvB,MAAM,KAAKtF,IAAI,CAAC2D,GAAG,GACnB,wCAAwC,GACxC,2CAA2C,EAC9C;gBAAAkF,QAAA,gBACD/K,OAAA;kBAAK8K,SAAS,EAAC,wBAAwB;kBAAAC,QAAA,EACpChC,GAAG,CAACvB,MAAM,KAAKtF,IAAI,CAAC2D,GAAG,GAAG,KAAK,GAAGkD,GAAG,CAACtB;gBAAQ;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5C,CAAC,EACLpC,GAAG,CAACxB,IAAI,eACTvH,OAAA;kBAAK8K,SAAS,EAAC,yCAAyC;kBAAAC,QAAA,EACrDhC,GAAG,CAACrB,SAAS,GAAG,IAAI4D,IAAI,CAACvC,GAAG,CAACrB,SAAS,CAAC6D,OAAO,GAAG,IAAI,CAAC,CAACgB,kBAAkB,CAAC,CAAC,GAAG;gBAAK;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GAbEpC,GAAG,CAAC5C,EAAE;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcX,CACN,CAAC,EAED/H,cAAc,iBACbpD,OAAA;cAAK8K,SAAS,EAAC,oBAAoB;cAAAC,QAAA,eACjC/K,OAAA;gBAAK8K,SAAS,EAAC,oEAAoE;gBAAAC,QAAA,eACjF/K,OAAA;kBAAK8K,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAChC/K,OAAA;oBAAM8K,SAAS,EAAC,MAAM;oBAAAC,QAAA,EAAC;kBAAY;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC1CnL,OAAA;oBAAK8K,SAAS,EAAC;kBAAc;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN,eACDnL,OAAA;cAAKwM,GAAG,EAAE5I;YAAe;cAAAoH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eAGNnL,OAAA;YAAMiM,QAAQ,EAAExF,iBAAkB;YAACqE,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAC9E/K,OAAA;cACE2H,IAAI,EAAC,MAAM;cACXuE,KAAK,EAAExJ,UAAW;cAClByJ,QAAQ,EAAG1H,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAAC2H,MAAM,CAACF,KAAK,CAAE;cAC/CG,WAAW,EAAC,sBAAsB;cAClCvB,SAAS,EAAC,sGAAsG;cAChH2B,QAAQ,EAAErJ;YAAe;cAAA4H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACFnL,OAAA;cACE2H,IAAI,EAAC,QAAQ;cACbmD,SAAS,EAAC,6GAA6G;cACvH2B,QAAQ,EAAErJ,cAAc,IAAI,CAACV,UAAU,CAACiE,IAAI,CAAC,CAAE;cAAAoE,QAAA,eAE/C/K,OAAA;gBAAKyL,KAAK,EAAC,4BAA4B;gBAACX,SAAS,EAAC,SAAS;gBAACY,IAAI,EAAC,MAAM;gBAACC,OAAO,EAAC,WAAW;gBAACG,MAAM,EAAC,cAAc;gBAAAf,QAAA,eAC/G/K,OAAA;kBAAM0M,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC,OAAO;kBAACZ,WAAW,EAAE,CAAE;kBAACC,CAAC,EAAC;gBAAkC;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,eACP,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxJ,EAAA,CAnoBQD,GAAG;AAAAkL,EAAA,GAAHlL,GAAG;AAqoBZ,eAAeA,GAAG;AAAC,IAAAkL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}