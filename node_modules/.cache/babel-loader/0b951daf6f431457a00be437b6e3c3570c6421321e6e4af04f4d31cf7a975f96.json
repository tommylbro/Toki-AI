{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token */\n\n// import AppWindow from './index.js'; // (Unused import removed or comment out if not needed)\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, limit, getDocs } from 'firebase/firestore';\nimport { marked } from 'marked';\nimport { createPortal } from 'react-dom';\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus, Play, Pause, Mic, Settings, Volume2, PenTool, Copy } from 'lucide-react';\n\n// --- Firebase Configuration ---\n// The global variables are provided by the Canvas environment.\n// We fall back to a local config for development purposes if they are not defined.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Utility function for generating unique IDs (like conversation IDs)\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\n// Converts a base64 string to an ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// Converts PCM audio data to a WAV blob\nfunction pcmToWav(pcmData, sampleRate) {\n  const pcm16 = new Int16Array(pcmData);\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\n  const view = new DataView(buffer);\n  const writeString = (view, offset, string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n  let offset = 0;\n  writeString(view, offset, 'RIFF');\n  offset += 4;\n  view.setUint32(offset, 36 + pcm16.length * 2, true);\n  offset += 4;\n  writeString(view, offset, 'WAVE');\n  offset += 4;\n  writeString(view, offset, 'fmt ');\n  offset += 4;\n  view.setUint32(offset, 16, true);\n  offset += 4; // Sub-chunk size\n  view.setUint16(offset, 1, true);\n  offset += 2; // Audio format (1 = PCM)\n  view.setUint16(offset, 1, true);\n  offset += 2; // Number of channels\n  view.setUint32(offset, sampleRate, true);\n  offset += 4; // Sample rate\n  view.setUint32(offset, sampleRate * 2, true);\n  offset += 4; // Byte rate\n  view.setUint16(offset, 2, true);\n  offset += 2; // Block align\n  view.setUint16(offset, 16, true);\n  offset += 2; // Bits per sample\n  writeString(view, offset, 'data');\n  offset += 4;\n  view.setUint32(offset, pcm16.length * 2, true);\n  offset += 4; // Data size\n\n  for (let i = 0; i < pcm16.length; i++) {\n    view.setInt16(offset, pcm16[i], true);\n    offset += 2;\n  }\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\n\n// Prebuilt voices available for TTS\nconst prebuiltVoices = ['Kore', 'Puck', 'Charon', 'Fenrir', 'Leda', 'Orus', 'Aoede', 'Callirrhoe', 'Autonoe', 'Enceladus', 'Iapetus', 'Umbriel', 'Algieba', 'Despina', 'Erinome', 'Algenib', 'Rasalgethi', 'Laomedeia', 'Achernar', 'Alnilam', 'Schedar', 'Gacrux', 'Pulcherrima', 'Achird', 'Zubenelgenubi', 'Vindemiatrix', 'Sadachbia', 'Sadaltager', 'Sulafat'];\n\n// The main App component\nfunction App() {\n  _s();\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [authMode, setAuthMode] = useState('email-link');\n\n  // New states for conversation history and sidebar\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [voiceName, setVoiceName] = useState('Kore');\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  // New states for Gemini features\n  const [systemInstruction, setSystemInstruction] = useState('');\n  const [generationSettings, setGenerationSettings] = useState({\n    temperature: 0.9,\n    topK: 40,\n    topP: 0.95\n  });\n  const [showGeminiModal, setShowGeminiModal] = useState(false);\n  const [translationTargetLanguage, setTranslationTargetLanguage] = useState('en-US');\n  const [textToContinue, setTextToContinue] = useState('');\n  const [textToTranslate, setTextToTranslate] = useState('');\n\n  // New state for the creative writing feature\n  const [showCreativeWriterModal, setShowCreativeWriterModal] = useState(false);\n  const [creativeTopic, setCreativeTopic] = useState('');\n  const [creativeStyle, setCreativeStyle] = useState('Poem');\n  const [creativeTone, setCreativeTone] = useState('Neutral');\n\n  // New states for the coding feature\n  const [showCodeGeneratorModal, setShowCodeGeneratorModal] = useState(false);\n  const [codeGenerationPrompt, setCodeGenerationPrompt] = useState('');\n  const [codeLanguage, setCodeLanguage] = useState('JavaScript');\n  const messagesEndRef = useRef(null);\n  const audioRef = useRef(null);\n  const currentAudioIdRef = useRef(null);\n  const inputRef = useRef(null); // Added this ref for the input element\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Exponential backoff utility for API calls\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n      }\n      return response;\n    } catch (error) {\n      if (retries > 0 && error.message.includes(\"API error\")) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n      }\n      throw error;\n    }\n  };\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          setUser(currentUser);\n          setIsAuthReady(true);\n          setError(null);\n        } else {\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            try {\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n          setIsAuthReady(true);\n        }\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n      if (!storedEmail) {\n        // Using a custom modal instead of prompt\n        const modalDiv = document.createElement('div');\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\n        modalDiv.innerHTML = `\n          <div class=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg max-w-sm w-full\">\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\n          </div>\n        `;\n        document.body.appendChild(modalDiv);\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\n        emailConfirmButton.onclick = () => {\n          storedEmail = emailConfirmInput.value;\n          if (storedEmail) {\n            document.body.removeChild(modalDiv);\n            continueSignIn(storedEmail);\n          } else {\n            console.error(\"Email not provided. Please try again.\");\n          }\n        };\n        const continueSignIn = emailToUse => {\n          signInWithEmailLink(auth, emailToUse, window.location.href).then(result => {\n            window.localStorage.removeItem('emailForSignIn');\n            setUser(result.user);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            setError(null);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          }).catch(error => {\n            setError(`Error completing sign-in with link: ${error.message}`);\n            setIsSigningInWithLink(false);\n            setLoading(false);\n            window.history.replaceState({}, document.title, window.location.pathname);\n          });\n        };\n        return; // Exit the effect to wait for user input\n      }\n      signInWithEmailLink(auth, storedEmail, window.location.href).then(result => {\n        window.localStorage.removeItem('emailForSignIn');\n        setUser(result.user);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        setError(null);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }).catch(error => {\n        setError(`Error completing sign-in with link: ${error.message}`);\n        setIsSigningInWithLink(false);\n        setLoading(false);\n        window.history.replaceState({}, document.title, window.location.pathname);\n      });\n    }\n  }, [auth, isAuthReady]);\n\n  // 3. Fetch conversations for the current user.\n  useEffect(() => {\n    if (!db || !user || !isAuthReady) return;\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const unsubscribe = onSnapshot(conversationsCollectionRef, querySnapshot => {\n      const fetchedConversations = [];\n      querySnapshot.forEach(doc => {\n        fetchedConversations.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedConversations.sort((a, b) => {\n        var _b$lastUpdated, _a$lastUpdated;\n        return (((_b$lastUpdated = b.lastUpdated) === null || _b$lastUpdated === void 0 ? void 0 : _b$lastUpdated.seconds) || 0) - (((_a$lastUpdated = a.lastUpdated) === null || _a$lastUpdated === void 0 ? void 0 : _a$lastUpdated.seconds) || 0);\n      });\n      setConversations(fetchedConversations);\n      if (!currentConversationId && fetchedConversations.length > 0) {\n        setCurrentConversationId(fetchedConversations[0].id);\n      } else if (fetchedConversations.length === 0) {\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    }, firestoreError => {\n      setError(`Failed to load conversations: ${firestoreError.message}`);\n      console.error(\"Firestore conversations error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, isAuthReady, appId, currentConversationId]);\n\n  // 4. Fetch messages for the current conversation.\n  useEffect(() => {\n    if (!db || !user || !currentConversationId) {\n      setMessages([]); // Clear messages if no conversation is selected\n      return;\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n    const unsubscribe = onSnapshot(messagesCollectionRef, querySnapshot => {\n      const fetchedMessages = [];\n      querySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      fetchedMessages.sort((a, b) => {\n        var _a$timestamp, _b$timestamp;\n        return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.seconds) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.seconds) || 0);\n      });\n      setMessages(fetchedMessages);\n    }, firestoreError => {\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\n      console.error(\"Firestore messages error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, currentConversationId, appId]);\n\n  // 5. Start a new conversation.\n  const startNewChat = async () => {\n    if (!db || !user) {\n      setError(\"You must be logged in to start a new chat.\");\n      return;\n    }\n    setMessages([]);\n    setNewMessage('');\n    setSelectedImage(null);\n    setError(null);\n    setIsAIGenerating(false);\n    setIsSummarizing(false);\n    setIsGeneratingImage(false);\n    try {\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef);\n      const newConvId = newConversationDocRef.id;\n      await setDoc(newConversationDocRef, {\n        title: 'New Chat',\n        createdAt: serverTimestamp(),\n        lastUpdated: serverTimestamp()\n      });\n      setCurrentConversationId(newConvId);\n      setIsSidebarOpen(false);\n      // Immediately focus the input after starting a new chat\n      setTimeout(() => {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 0);\n    } catch (e) {\n      setError(`Failed to create a new chat: ${e.message}`);\n      console.error(\"Error creating new conversation:\", e);\n    }\n  };\n\n  // 6. Handle sending a new message (and creating a new conversation if needed).\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() && !selectedImage || !user || !db || isAIGenerating || isSpeaking) return;\n    let conversationIdToUse = currentConversationId;\n    const userMessageText = newMessage;\n    const imageToSend = selectedImage;\n    setNewMessage('');\n    setSelectedImage(null);\n\n    // After sending the message, immediately refocus the input field\n    setTimeout(() => {\n      var _inputRef$current2;\n      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n    }, 0);\n    const command = userMessageText.toLowerCase().trim();\n\n    // If no conversation is active, create a new one.\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      const initialTitle = userMessageText ? userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '') : 'New chat with image';\n      try {\n        await setDoc(newConversationDocRef, {\n          title: initialTitle,\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId);\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        console.error(\"Error creating new conversation:\", createError);\n        return;\n      }\n    } else {\n      // Otherwise, just update the lastUpdated timestamp of the current conversation.\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\n      try {\n        await setDoc(conversationDocRef, {\n          lastUpdated: serverTimestamp()\n        }, {\n          merge: true\n        });\n      } catch (updateError) {\n        console.error(\"Error updating conversation timestamp:\", updateError);\n      }\n    }\n\n    // Add user message to Firestore\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: userMessageText,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message',\n        imageData: imageToSend\n      });\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n      return;\n    }\n    if (imageToSend) {\n      handleImageAnalysis(userMessageText, imageToSend, conversationIdToUse);\n    } else if (command.startsWith('image of')) {\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\n      handleGenerateImage(imagePrompt, conversationIdToUse);\n    } else {\n      handleAIResponse(userMessageText, conversationIdToUse);\n    }\n  };\n\n  // Function to handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // 7. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const actionCodeSettings = {\n      url: window.location.origin,\n      handleCodeInApp: true\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email);\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to sign up: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 9. Handle Email/Password Login\n  const handleEmailPasswordSignIn = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to sign in: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 10. Handle sign-out.\n  const handleSignOut = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      // Reset states\n      setUser(null);\n      setConversations([]);\n      setMessages([]);\n      setCurrentConversationId(null);\n      setError(null);\n    } catch (error) {\n      setError(`Failed to sign out: ${error.message}`);\n      console.error(\"Sign out error:\", error);\n    }\n  };\n\n  // 11. Handle AI response using Gemini API.\n  const handleAIResponse = async (userPrompt, conversationId) => {\n    if (!user || !db || !conversationId) return;\n    setIsAIGenerating(true);\n    let promptText = userPrompt;\n    let newMessages = [...messages];\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    // Get the conversation history to provide context to the AI\n    let chatHistory = [];\n    try {\n      const q = query(messagesCollectionRef, limit(20));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.type === 'user-message') {\n          chatHistory.push({\n            role: 'user',\n            parts: [{\n              text: data.text\n            }]\n          });\n        } else if (data.type === 'ai-message') {\n          chatHistory.push({\n            role: 'model',\n            parts: [{\n              text: data.text\n            }]\n          });\n        }\n      });\n      // Add the latest user prompt\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: promptText\n        }]\n      });\n    } catch (e) {\n      console.error(\"Error fetching chat history:\", e);\n      // If fetching history fails, just use the current prompt\n      chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: promptText\n        }]\n      }];\n    }\n    const payload = {\n      contents: chatHistory,\n      generationConfig: {\n        temperature: generationSettings.temperature,\n        topK: generationSettings.topK,\n        topP: generationSettings.topP\n      },\n      systemInstruction: systemInstruction ? {\n        parts: [{\n          text: systemInstruction\n        }]\n      } : undefined\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n    try {\n      var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _result$candidates$$c3;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const aiResponseText = ((_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : (_result$candidates$$c3 = _result$candidates$$c2[0]) === null || _result$candidates$$c3 === void 0 ? void 0 : _result$candidates$$c3.text) || 'No response from AI.';\n      // Add AI response to Firestore\n      await addDoc(messagesCollectionRef, {\n        text: aiResponseText,\n        userId: 'ai',\n        userName: 'Gemini',\n        timestamp: serverTimestamp(),\n        type: 'ai-message'\n      });\n    } catch (e) {\n      console.error(\"Gemini API error:\", e);\n      setError(`Gemini API error: ${e.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // 12. Handle image analysis with Gemini Vision API\n  const handleImageAnalysis = async (userPrompt, imageData, conversationId) => {\n    if (!user || !db || !conversationId) return;\n    setIsAIGenerating(true);\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n    // Remove the data URL prefix \"data:image/png;base64,\"\n    const base64ImageData = imageData.split(',')[1];\n    const payload = {\n      contents: [{\n        role: \"user\",\n        parts: [{\n          text: userPrompt || 'What is in this image?'\n        }, {\n          inlineData: {\n            mimeType: \"image/png\",\n            // Assuming PNG, but should be dynamic if possible\n            data: base64ImageData\n          }\n        }]\n      }]\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n    try {\n      var _result$candidates2, _result$candidates2$, _result$candidates2$$, _result$candidates2$$2, _result$candidates2$$3;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const aiResponseText = ((_result$candidates2 = result.candidates) === null || _result$candidates2 === void 0 ? void 0 : (_result$candidates2$ = _result$candidates2[0]) === null || _result$candidates2$ === void 0 ? void 0 : (_result$candidates2$$ = _result$candidates2$.content) === null || _result$candidates2$$ === void 0 ? void 0 : (_result$candidates2$$2 = _result$candidates2$$.parts) === null || _result$candidates2$$2 === void 0 ? void 0 : (_result$candidates2$$3 = _result$candidates2$$2[0]) === null || _result$candidates2$$3 === void 0 ? void 0 : _result$candidates2$$3.text) || 'No response from AI.';\n      await addDoc(messagesCollectionRef, {\n        text: aiResponseText,\n        userId: 'ai',\n        userName: 'Gemini',\n        timestamp: serverTimestamp(),\n        type: 'ai-message'\n      });\n    } catch (e) {\n      console.error(\"Gemini Vision API error:\", e);\n      setError(`Gemini Vision API error: ${e.message}`);\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // 13. Handle image generation with Gemini API\n  const handleGenerateImage = async (imagePrompt, conversationId) => {\n    if (!user || !db || !conversationId) return;\n    setIsGeneratingImage(true);\n    let conversationIdToUse = currentConversationId;\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      try {\n        await setDoc(newConversationDocRef, {\n          title: imagePrompt.substring(0, 50) + '...',\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId);\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        console.error(\"Error creating new conversation:\", createError);\n        return;\n      }\n    }\n\n    // Add user prompt to Firestore\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: imagePrompt,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'image-prompt-message'\n      });\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n      return;\n    }\n    const payload = {\n      instances: {\n        prompt: imagePrompt\n      },\n      parameters: {\n        \"sampleCount\": 1\n      }\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n    try {\n      var _result$predictions, _result$predictions$;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const base64Data = result === null || result === void 0 ? void 0 : (_result$predictions = result.predictions) === null || _result$predictions === void 0 ? void 0 : (_result$predictions$ = _result$predictions[0]) === null || _result$predictions$ === void 0 ? void 0 : _result$predictions$.bytesBase64Encoded;\n      if (!base64Data) {\n        throw new Error('Image generation failed: No image data received.');\n      }\n      const imageUrl = `data:image/png;base64,${base64Data}`;\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        imageUrl: imageUrl,\n        userId: 'ai',\n        userName: 'Gemini',\n        timestamp: serverTimestamp(),\n        type: 'image-message'\n      });\n    } catch (e) {\n      console.error(\"Gemini Image generation API error:\", e);\n      setError(`Gemini Image generation API error: ${e.message}`);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // 14. Handle TTS generation and playback.\n  const handleTTS = async textToSpeak => {\n    if (isSpeaking) {\n      var _audioRef$current;\n      (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n      setIsSpeaking(false);\n      return;\n    }\n    setIsSpeaking(true);\n    const utteranceId = generateId();\n    currentAudioIdRef.current = utteranceId;\n    const payload = {\n      contents: [{\n        parts: [{\n          text: textToSpeak\n        }]\n      }],\n      generationConfig: {\n        responseModalities: [\"AUDIO\"],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: {\n              voiceName: voiceName\n            }\n          }\n        }\n      },\n      model: \"gemini-2.5-flash-preview-tts\"\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\n    try {\n      var _result$candidates3, _result$candidates3$, _result$candidates3$$, _result$candidates3$$2, _part$inlineData, _part$inlineData2;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const part = result === null || result === void 0 ? void 0 : (_result$candidates3 = result.candidates) === null || _result$candidates3 === void 0 ? void 0 : (_result$candidates3$ = _result$candidates3[0]) === null || _result$candidates3$ === void 0 ? void 0 : (_result$candidates3$$ = _result$candidates3$.content) === null || _result$candidates3$$ === void 0 ? void 0 : (_result$candidates3$$2 = _result$candidates3$$.parts) === null || _result$candidates3$$2 === void 0 ? void 0 : _result$candidates3$$2[0];\n      const audioData = part === null || part === void 0 ? void 0 : (_part$inlineData = part.inlineData) === null || _part$inlineData === void 0 ? void 0 : _part$inlineData.data;\n      const mimeType = part === null || part === void 0 ? void 0 : (_part$inlineData2 = part.inlineData) === null || _part$inlineData2 === void 0 ? void 0 : _part$inlineData2.mimeType;\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\n        const sampleRate = parseInt(mimeType.match(/rate=(\\d+)/)[1], 10);\n        const pcmData = base64ToArrayBuffer(audioData);\n        const wavBlob = pcmToWav(pcmData, sampleRate);\n        const audioUrl = URL.createObjectURL(wavBlob);\n        if (currentAudioIdRef.current !== utteranceId) {\n          URL.revokeObjectURL(audioUrl);\n          return;\n        }\n        if (audioRef.current) {\n          audioRef.current.src = audioUrl;\n          audioRef.current.onended = () => {\n            setIsSpeaking(false);\n            URL.revokeObjectURL(audioUrl);\n          };\n          audioRef.current.play();\n        }\n      } else {\n        throw new Error(\"No audio data received from API.\");\n      }\n    } catch (e) {\n      console.error(\"TTS API error:\", e);\n      setError(`TTS API error: ${e.message}`);\n      setIsSpeaking(false);\n    }\n  };\n\n  // 15. Handle code generation with Gemini API.\n  const handleGenerateCode = async () => {\n    if (!user || !db || !codeGenerationPrompt || isAIGenerating) return;\n    setIsAIGenerating(true);\n    setShowCodeGeneratorModal(false);\n    let conversationIdToUse = currentConversationId;\n    const userPrompt = codeGenerationPrompt;\n    const language = codeLanguage;\n\n    // Create a new conversation if one doesn't exist\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      try {\n        await setDoc(newConversationDocRef, {\n          title: userPrompt.substring(0, 50) + '...',\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId);\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        console.error(\"Error creating new conversation:\", createError);\n        setIsAIGenerating(false);\n        return;\n      }\n    }\n\n    // Add user's code request to Firestore\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: `Generate a complete code snippet in ${language} for the following request: \\n\\n${userPrompt}`,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'code-request'\n      });\n    } catch (e) {\n      setError(`Failed to send code request: ${e.message}`);\n      setIsAIGenerating(false);\n      return;\n    }\n\n    // Prepare the prompt for the Gemini API\n    const finalPrompt = `Generate a complete, well-commented code snippet in ${language} for the following request: ${userPrompt}. The output must be a single markdown code block.`;\n    const payload = {\n      contents: [{\n        role: \"user\",\n        parts: [{\n          text: finalPrompt\n        }]\n      }],\n      generationConfig: {\n        temperature: 0.7,\n        topK: 40,\n        topP: 0.95\n      }\n    };\n    const apiKey = \"\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n    try {\n      var _result$candidates4, _result$candidates4$, _result$candidates4$$, _result$candidates4$$2, _result$candidates4$$3;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const aiResponseText = ((_result$candidates4 = result.candidates) === null || _result$candidates4 === void 0 ? void 0 : (_result$candidates4$ = _result$candidates4[0]) === null || _result$candidates4$ === void 0 ? void 0 : (_result$candidates4$$ = _result$candidates4$.content) === null || _result$candidates4$$ === void 0 ? void 0 : (_result$candidates4$$2 = _result$candidates4$$.parts) === null || _result$candidates4$$2 === void 0 ? void 0 : (_result$candidates4$$3 = _result$candidates4$$2[0]) === null || _result$candidates4$$3 === void 0 ? void 0 : _result$candidates4$$3.text) || 'No code generated.';\n\n      // Add AI's code response to Firestore\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: aiResponseText,\n        userId: 'ai',\n        userName: 'Gemini',\n        timestamp: serverTimestamp(),\n        type: 'code-response',\n        language: language\n      });\n    } catch (e) {\n      console.error(\"Gemini Code generation API error:\", e);\n      setError(`Gemini Code generation API error: ${e.message}`);\n    } finally {\n      setIsAIGenerating(false);\n      setCodeGenerationPrompt('');\n    }\n  };\n\n  // Copy to clipboard handler\n  const handleCopyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      // You could add a small visual cue here\n      console.log('Code copied to clipboard!');\n    }).catch(err => {\n      console.error('Failed to copy text: ', err);\n    });\n  };\n  const renderMessage = (message, isLastMessage) => {\n    var _message$timestamp;\n    const isUser = message.userId === (user === null || user === void 0 ? void 0 : user.uid);\n    const isAi = message.userId === 'ai';\n    const isCodeResponse = message.type === 'code-response';\n    const messageClasses = isUser ? 'bg-indigo-500 text-white self-end rounded-br-none' : isAi ? 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 self-start rounded-bl-none' : '';\n    const nameClasses = isUser ? 'text-indigo-400 text-right' : 'text-gray-500 dark:text-gray-400';\n    const messageContent = () => {\n      if (message.imageData) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-start space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium text-gray-700 dark:text-gray-300\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.imageData,\n            alt: \"User uploaded\",\n            className: \"max-w-xs rounded-lg shadow-md\",\n            style: {\n              maxHeight: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 11\n        }, this);\n      } else if (message.imageUrl) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.imageUrl,\n          alt: \"AI generated\",\n          className: \"max-w-full rounded-lg shadow-md\",\n          style: {\n            maxHeight: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 11\n        }, this);\n      } else if (isCodeResponse) {\n        // Find the code block and extract the content\n        const codeBlockMatch = message.text.match(/```(?:\\w+)?\\n([\\s\\S]*?)```/);\n        const codeContent = codeBlockMatch ? codeBlockMatch[1] : message.text;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-gray-800 text-white rounded-t-xl overflow-x-auto relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCopyToClipboard(codeContent),\n              className: \"absolute top-2 right-2 p-1 text-gray-400 hover:text-white bg-gray-700 rounded-md transition-colors\",\n              title: \"Copy to clipboard\",\n              children: /*#__PURE__*/_jsxDEV(Copy, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: marked.parse(message.text)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 13\n          }, this), message.text.length > 500 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 dark:text-gray-400 mt-2\",\n            children: \"Scroll to view the full code snippet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: marked.parse(message.text)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 14\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col p-4 space-y-1 ${isUser ? 'items-end' : 'items-start'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `text-xs font-semibold ${nameClasses}`,\n        children: isUser ? 'You' : 'Gemini'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `max-w-3xl p-3 rounded-xl shadow-md whitespace-pre-wrap ${messageClasses} ${isCodeResponse ? 'w-full' : 'max-w-3xl'}`,\n        children: messageContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 mt-1\",\n        children: [isAi && message.text && !isCodeResponse && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTTS(message.text),\n          className: \"text-gray-500 dark:text-gray-400 hover:text-indigo-500 transition-colors\",\n          children: isSpeaking && currentAudioIdRef.current === message.id ? /*#__PURE__*/_jsxDEV(Pause, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 73\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 95\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500 dark:text-gray-400\",\n          children: (_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate().toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 7\n    }, this);\n  };\n  const MemoizedMessages = /*#__PURE__*/React.memo(({\n    messages\n  }) => {\n    if (messages.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full text-center text-gray-400 dark:text-gray-600 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(MessageSquareMore, {\n          className: \"h-16 w-16 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2\",\n          children: \"Start a new conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"max-w-sm\",\n          children: \"Ask me anything, generate images, or get help writing code.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [messages.map((message, index) => renderMessage(message, index === messages.length - 1)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  });\n  const AuthUI = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8 w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-6\",\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAuthMode('email-link'),\n          className: `flex-1 p-3 rounded-xl font-semibold transition-colors ${authMode === 'email-link' ? 'bg-indigo-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200'}`,\n          children: \"Magic Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAuthMode('email-password'),\n          className: `flex-1 p-3 rounded-xl font-semibold transition-colors ${authMode === 'email-password' ? 'bg-indigo-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200'}`,\n          children: \"Email/Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 9\n      }, this), authMode === 'email-link' ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendSignInLink,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          required: true,\n          className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(LoaderCircle, {\n            className: \"animate-spin h-5 w-5 mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 26\n          }, this) : 'Send Sign-in Link'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEmailPasswordSignIn,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            required: true,\n            className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true,\n            className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(LoaderCircle, {\n              className: \"animate-spin h-5 w-5 mx-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 28\n            }, this) : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEmailPasswordSignUp,\n          className: \"w-full text-indigo-500 p-3 rounded-lg hover:bg-indigo-100 dark:hover:bg-indigo-900 transition-colors duration-200\",\n          children: \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 11\n      }, this), emailSent && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-center text-sm text-green-600 dark:text-green-400\",\n        children: \"A sign-in link has been sent to your email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1056,\n    columnNumber: 5\n  }, this);\n  const UserModal = ({\n    isOpen,\n    onClose,\n    title,\n    children\n  }) => {\n    if (!isOpen) return null;\n    return /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-900 rounded-xl shadow-lg p-6 w-full max-w-md mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"p-1 rounded-full text-gray-500 hover:bg-gray-200 dark:hover:bg-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 7\n    }, this), document.body);\n  };\n  const CodeGeneratorModal = ({\n    isOpen,\n    onClose,\n    onGenerate\n  }) => {\n    if (!isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      title: \"Code Generator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: codeLanguage,\n            onChange: e => setCodeLanguage(e.target.value),\n            className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"JavaScript\",\n              children: \"JavaScript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"HTML\",\n              children: \"HTML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CSS\",\n              children: \"CSS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"React\",\n              children: \"React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"C++\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Go\",\n              children: \"Go\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Swift\",\n              children: \"Swift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n            children: \"Code Prompt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: codeGenerationPrompt,\n            onChange: e => setCodeGenerationPrompt(e.target.value),\n            placeholder: \"e.g., 'A function that reverses a string' or 'A simple HTML layout with a header and footer'\",\n            rows: \"5\",\n            className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onGenerate,\n          className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n          disabled: isAIGenerating || !codeGenerationPrompt,\n          children: isAIGenerating ? /*#__PURE__*/_jsxDEV(LoaderCircle, {\n            className: \"animate-spin h-5 w-5 mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 15\n          }, this) : 'Generate Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 7\n    }, this);\n  };\n  const ChatWindow = () => {\n    var _conversations$find;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed inset-y-0 left-0 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} lg:translate-x-0 lg:static lg:inset-y-0 w-64 bg-white dark:bg-gray-800 transition-transform duration-300 ease-in-out z-40 flex flex-col`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 flex items-center justify-between border-b dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewChat,\n            className: \"p-2 rounded-full bg-indigo-500 text-white shadow-md hover:bg-indigo-600 transition-colors\",\n            title: \"New Chat\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-2\",\n          children: conversations.length > 0 ? conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setCurrentConversationId(conv.id);\n              setIsSidebarOpen(false);\n            },\n            className: `p-3 my-2 rounded-xl cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors truncate ${currentConversationId === conv.id ? 'bg-indigo-100 dark:bg-indigo-900 font-semibold' : 'bg-gray-100 dark:bg-gray-800'}`,\n            title: conv.title,\n            children: conv.title\n          }, conv.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-sm text-gray-400 mt-4\",\n            children: \"No conversations yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-semibold text-gray-500\",\n            children: [\"User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs break-all\",\n              children: user.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1245,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1244,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignOut,\n            className: \"mt-4 w-full bg-red-500 text-white p-3 rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200\",\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col lg:ml-64\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"bg-white dark:bg-gray-800 shadow-md p-4 flex items-center justify-between lg:hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSidebarOpen(!isSidebarOpen),\n            className: \"p-2 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(Menu, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-lg font-bold truncate\",\n            children: ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || 'New Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1261,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSettingsModal(true),\n            className: \"p-2 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(Settings, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(MemoizedMessages, {\n            messages: messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 11\n          }, this), (isAIGenerating || isGeneratingImage) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex flex-col p-4 space-y-1 items-start`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-xs font-semibold text-gray-500 dark:text-gray-400`,\n              children: \"Gemini\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-3xl p-3 rounded-xl shadow-md whitespace-pre-wrap bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-bl-none`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(LoaderCircle, {\n                  className: \"animate-spin\",\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: isGeneratingImage ? 'Generating image...' : 'Thinking...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1279,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"bg-white dark:bg-gray-800 p-4 border-t dark:border-gray-700\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800 flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setError(null),\n              className: \"text-red-700 dark:text-red-800 hover:text-red-900\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowCodeGeneratorModal(true),\n              className: \"p-3 bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-xl hover:bg-indigo-500 hover:text-white transition-colors\",\n              title: \"Generate Code\",\n              children: /*#__PURE__*/_jsxDEV(PenTool, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1303,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"p-3 bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-xl hover:bg-indigo-500 hover:text-white transition-colors cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1306,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"hidden\",\n                onChange: handleImageUpload,\n                accept: \"image/*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1307,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1305,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: inputRef,\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyDown: e => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage(e);\n                  }\n                },\n                className: \"w-full p-3 pr-12 border border-gray-300 dark:border-gray-600 rounded-xl bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 resize-none\",\n                rows: 1,\n                placeholder: selectedImage ? 'Ask about the image...' : 'Message Gemini...',\n                disabled: isAIGenerating || isGeneratingImage,\n                style: {\n                  maxHeight: '150px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1310,\n                columnNumber: 15\n              }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-2 right-2 p-1 bg-white dark:bg-gray-800 rounded-full shadow\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setSelectedImage(null),\n                  className: \"text-gray-500 hover:text-gray-700\",\n                  children: /*#__PURE__*/_jsxDEV(X, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1329,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1328,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"p-3 bg-indigo-500 text-white rounded-xl shadow-md hover:bg-indigo-600 transition-colors\",\n              disabled: isAIGenerating || isGeneratingImage || !newMessage.trim() && !selectedImage,\n              children: /*#__PURE__*/_jsxDEV(Sparkles, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1339,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n        isOpen: showSettingsModal,\n        onClose: () => setShowSettingsModal(false),\n        title: \"App Settings\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"TTS Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n              children: \"Voice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1349,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: voiceName,\n              onChange: e => setVoiceName(e.target.value),\n              className: \"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n              children: prebuiltVoices.map(voice => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: voice,\n                children: voice\n              }, voice, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1356,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1350,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CodeGeneratorModal, {\n        isOpen: showCodeGeneratorModal,\n        onClose: () => setShowCodeGeneratorModal(false),\n        onGenerate: handleGenerateCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 5\n    }, this);\n  };\n  if (loading || !isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(LoaderCircle, {\n        className: \"animate-spin h-12 w-12 text-indigo-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8 w-full max-w-md text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 dark:text-red-400 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\",\n          children: \"Refresh Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1378,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-sans\",\n    children: [!user ? /*#__PURE__*/_jsxDEV(AuthUI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(ChatWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      className: \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1393,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bHhfpd68qxAH1Y5TChqceEkUMrU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","limit","getDocs","marked","createPortal","Sparkles","MessageSquareMore","Image","LoaderCircle","X","ExternalLink","Menu","Plus","Play","Pause","Mic","Settings","Volume2","PenTool","Copy","jsxDEV","_jsxDEV","Fragment","_Fragment","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","generateId","replace","c","r","Math","random","v","toString","base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","pcmToWav","pcmData","sampleRate","pcm16","Int16Array","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","setInt16","Blob","type","prebuiltVoices","App","_s","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","isSpeaking","setIsSpeaking","voiceName","setVoiceName","showSettingsModal","setShowSettingsModal","selectedImage","setSelectedImage","systemInstruction","setSystemInstruction","generationSettings","setGenerationSettings","temperature","topK","topP","showGeminiModal","setShowGeminiModal","translationTargetLanguage","setTranslationTargetLanguage","textToContinue","setTextToContinue","textToTranslate","setTextToTranslate","showCreativeWriterModal","setShowCreativeWriterModal","creativeTopic","setCreativeTopic","creativeStyle","setCreativeStyle","creativeTone","setCreativeTone","showCodeGeneratorModal","setShowCodeGeneratorModal","codeGenerationPrompt","setCodeGenerationPrompt","codeLanguage","setCodeLanguage","messagesEndRef","audioRef","currentAudioIdRef","inputRef","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchWithExponentialBackoff","url","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","Error","message","statusText","includes","Promise","resolve","setTimeout","Object","keys","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","console","location","href","storedEmail","localStorage","getItem","modalDiv","document","createElement","className","innerHTML","body","appendChild","emailConfirmInput","querySelector","emailConfirmButton","onclick","value","removeChild","continueSignIn","emailToUse","then","result","removeItem","history","replaceState","title","pathname","catch","conversationsCollectionRef","uid","querySnapshot","fetchedConversations","forEach","push","id","data","sort","a","b","_b$lastUpdated","_a$lastUpdated","lastUpdated","seconds","firestoreError","messagesCollectionRef","fetchedMessages","_a$timestamp","_b$timestamp","timestamp","startNewChat","newConversationDocRef","newConvId","createdAt","_inputRef$current","focus","handleSendMessage","preventDefault","trim","conversationIdToUse","userMessageText","imageToSend","_inputRef$current2","command","toLowerCase","initialTitle","substring","createError","conversationDocRef","merge","updateError","text","userId","userName","imageData","handleImageAnalysis","startsWith","imagePrompt","handleGenerateImage","handleAIResponse","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","readAsDataURL","handleSendSignInLink","actionCodeSettings","origin","handleCodeInApp","setItem","handleEmailPasswordSignUp","handleEmailPasswordSignIn","handleSignOut","userPrompt","conversationId","promptText","newMessages","chatHistory","q","role","parts","payload","contents","generationConfig","undefined","apiUrl","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","method","headers","stringify","aiResponseText","candidates","content","base64ImageData","split","inlineData","mimeType","_result$candidates2","_result$candidates2$","_result$candidates2$$","_result$candidates2$$2","_result$candidates2$$3","instances","prompt","parameters","_result$predictions","_result$predictions$","base64Data","predictions","bytesBase64Encoded","imageUrl","handleTTS","textToSpeak","_audioRef$current","pause","utteranceId","responseModalities","speechConfig","voiceConfig","prebuiltVoiceConfig","model","_result$candidates3","_result$candidates3$","_result$candidates3$$","_result$candidates3$$2","_part$inlineData","_part$inlineData2","part","audioData","parseInt","match","wavBlob","audioUrl","URL","createObjectURL","revokeObjectURL","src","onended","play","handleGenerateCode","language","finalPrompt","_result$candidates4","_result$candidates4$","_result$candidates4$$","_result$candidates4$$2","_result$candidates4$$3","handleCopyToClipboard","navigator","clipboard","writeText","log","err","renderMessage","isLastMessage","_message$timestamp","isUser","isAi","isCodeResponse","messageClasses","nameClasses","messageContent","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","style","maxHeight","codeBlockMatch","codeContent","onClick","size","dangerouslySetInnerHTML","__html","toDate","toLocaleTimeString","hour","minute","MemoizedMessages","memo","map","index","ref","AuthUI","onSubmit","onChange","placeholder","required","disabled","UserModal","isOpen","onClose","CodeGeneratorModal","onGenerate","rows","ChatWindow","_conversations$find","conv","find","accept","onKeyDown","key","shiftKey","voice","reload","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token */\r\n\r\n// import AppWindow from './index.js'; // (Unused import removed or comment out if not needed)\r\nimport React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  limit,\r\n  getDocs\r\n} from 'firebase/firestore';\r\nimport { marked } from 'marked';\r\nimport { createPortal } from 'react-dom';\r\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, ExternalLink, Menu, Plus, Play, Pause, Mic, Settings, Volume2, PenTool, Copy } from 'lucide-react';\r\n\r\n\r\n// --- Firebase Configuration ---\r\n// The global variables are provided by the Canvas environment.\r\n// We fall back to a local config for development purposes if they are not defined.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Utility function for generating unique IDs (like conversation IDs)\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\n// Converts a base64 string to an ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// Converts PCM audio data to a WAV blob\r\nfunction pcmToWav(pcmData, sampleRate) {\r\n  const pcm16 = new Int16Array(pcmData);\r\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\r\n  const view = new DataView(buffer);\r\n  const writeString = (view, offset, string) => {\r\n      for (let i = 0; i < string.length; i++) {\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n  };\r\n\r\n  let offset = 0;\r\n  writeString(view, offset, 'RIFF'); offset += 4;\r\n  view.setUint32(offset, 36 + pcm16.length * 2, true); offset += 4;\r\n  writeString(view, offset, 'WAVE'); offset += 4;\r\n  writeString(view, offset, 'fmt '); offset += 4;\r\n  view.setUint32(offset, 16, true); offset += 4; // Sub-chunk size\r\n  view.setUint16(offset, 1, true); offset += 2; // Audio format (1 = PCM)\r\n  view.setUint16(offset, 1, true); offset += 2; // Number of channels\r\n  view.setUint32(offset, sampleRate, true); offset += 4; // Sample rate\r\n  view.setUint32(offset, sampleRate * 2, true); offset += 4; // Byte rate\r\n  view.setUint16(offset, 2, true); offset += 2; // Block align\r\n  view.setUint16(offset, 16, true); offset += 2; // Bits per sample\r\n  writeString(view, offset, 'data'); offset += 4;\r\n  view.setUint32(offset, pcm16.length * 2, true); offset += 4; // Data size\r\n\r\n  for (let i = 0; i < pcm16.length; i++) {\r\n      view.setInt16(offset, pcm16[i], true);\r\n      offset += 2;\r\n  }\r\n\r\n  return new Blob([view], { type: 'audio/wav' });\r\n}\r\n\r\n// Prebuilt voices available for TTS\r\nconst prebuiltVoices = [\r\n  'Kore', 'Puck', 'Charon', 'Fenrir', 'Leda', 'Orus', 'Aoede', 'Callirrhoe', 'Autonoe',\r\n  'Enceladus', 'Iapetus', 'Umbriel', 'Algieba', 'Despina', 'Erinome', 'Algenib',\r\n  'Rasalgethi', 'Laomedeia', 'Achernar', 'Alnilam', 'Schedar', 'Gacrux',\r\n  'Pulcherrima', 'Achird', 'Zubenelgenubi', 'Vindemiatrix', 'Sadachbia', 'Sadaltager', 'Sulafat'\r\n];\r\n\r\n// The main App component\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [authMode, setAuthMode] = useState('email-link');\r\n\r\n  // New states for conversation history and sidebar\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [voiceName, setVoiceName] = useState('Kore');\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  // New states for Gemini features\r\n  const [systemInstruction, setSystemInstruction] = useState('');\r\n  const [generationSettings, setGenerationSettings] = useState({\r\n    temperature: 0.9,\r\n    topK: 40,\r\n    topP: 0.95\r\n  });\r\n  const [showGeminiModal, setShowGeminiModal] = useState(false);\r\n  const [translationTargetLanguage, setTranslationTargetLanguage] = useState('en-US');\r\n  const [textToContinue, setTextToContinue] = useState('');\r\n  const [textToTranslate, setTextToTranslate] = useState('');\r\n\r\n  // New state for the creative writing feature\r\n  const [showCreativeWriterModal, setShowCreativeWriterModal] = useState(false);\r\n  const [creativeTopic, setCreativeTopic] = useState('');\r\n  const [creativeStyle, setCreativeStyle] = useState('Poem');\r\n  const [creativeTone, setCreativeTone] = useState('Neutral');\r\n\r\n  // New states for the coding feature\r\n  const [showCodeGeneratorModal, setShowCodeGeneratorModal] = useState(false);\r\n  const [codeGenerationPrompt, setCodeGenerationPrompt] = useState('');\r\n  const [codeLanguage, setCodeLanguage] = useState('JavaScript');\r\n\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n  const currentAudioIdRef = useRef(null);\r\n  const inputRef = useRef(null); // Added this ref for the input element\r\n\r\n  // Scroll to bottom of messages whenever messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Exponential backoff utility for API calls\r\n  const fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n      if (retries > 0 && error.message.includes(\"API error\")) {\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          setIsAuthReady(true);\r\n          setError(null);\r\n        } else {\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. This usually means the token is invalid or expired. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) {\r\n            try {\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n        }\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      if (!storedEmail) {\r\n        // Using a custom modal instead of prompt\r\n        const modalDiv = document.createElement('div');\r\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\r\n        modalDiv.innerHTML = `\r\n          <div class=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg max-w-sm w-full\">\r\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\r\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\r\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\r\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(modalDiv);\r\n\r\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\r\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\r\n\r\n        emailConfirmButton.onclick = () => {\r\n          storedEmail = emailConfirmInput.value;\r\n          if (storedEmail) {\r\n            document.body.removeChild(modalDiv);\r\n            continueSignIn(storedEmail);\r\n          } else {\r\n            console.error(\"Email not provided. Please try again.\");\r\n          }\r\n        };\r\n\r\n        const continueSignIn = (emailToUse) => {\r\n          signInWithEmailLink(auth, emailToUse, window.location.href)\r\n            .then((result) => {\r\n              window.localStorage.removeItem('emailForSignIn');\r\n              setUser(result.user);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              setError(null);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            })\r\n            .catch((error) => {\r\n              setError(`Error completing sign-in with link: ${error.message}`);\r\n              setIsSigningInWithLink(false);\r\n              setLoading(false);\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            });\r\n        };\r\n        return; // Exit the effect to wait for user input\r\n      }\r\n\r\n      signInWithEmailLink(auth, storedEmail, window.location.href)\r\n        .then((result) => {\r\n          window.localStorage.removeItem('emailForSignIn');\r\n          setUser(result.user);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          setError(null);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        })\r\n        .catch((error) => {\r\n          setError(`Error completing sign-in with link: ${error.message}`);\r\n          setIsSigningInWithLink(false);\r\n          setLoading(false);\r\n          window.history.replaceState({}, document.title, window.location.pathname);\r\n        });\r\n    }\r\n  }, [auth, isAuthReady]);\r\n\r\n  // 3. Fetch conversations for the current user.\r\n  useEffect(() => {\r\n    if (!db || !user || !isAuthReady) return;\r\n\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const unsubscribe = onSnapshot(conversationsCollectionRef, (querySnapshot) => {\r\n      const fetchedConversations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedConversations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedConversations.sort((a, b) => (b.lastUpdated?.seconds || 0) - (a.lastUpdated?.seconds || 0));\r\n\r\n      setConversations(fetchedConversations);\r\n\r\n      if (!currentConversationId && fetchedConversations.length > 0) {\r\n        setCurrentConversationId(fetchedConversations[0].id);\r\n      } else if (fetchedConversations.length === 0) {\r\n        setCurrentConversationId(null);\r\n        setMessages([]);\r\n      }\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load conversations: ${firestoreError.message}`);\r\n      console.error(\"Firestore conversations error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, isAuthReady, appId, currentConversationId]);\r\n\r\n  // 4. Fetch messages for the current conversation.\r\n  useEffect(() => {\r\n    if (!db || !user || !currentConversationId) {\r\n      setMessages([]); // Clear messages if no conversation is selected\r\n      return;\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n    const unsubscribe = onSnapshot(messagesCollectionRef, (querySnapshot) => {\r\n      const fetchedMessages = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedMessages.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      fetchedMessages.sort((a, b) => (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0));\r\n\r\n      setMessages(fetchedMessages);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\r\n      console.error(\"Firestore messages error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, currentConversationId, appId]);\r\n\r\n  // 5. Start a new conversation.\r\n  const startNewChat = async () => {\r\n    if (!db || !user) {\r\n      setError(\"You must be logged in to start a new chat.\");\r\n      return;\r\n    }\r\n\r\n    setMessages([]);\r\n    setNewMessage('');\r\n    setSelectedImage(null);\r\n    setError(null);\r\n    setIsAIGenerating(false);\r\n    setIsSummarizing(false);\r\n    setIsGeneratingImage(false);\r\n\r\n    try {\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef);\r\n      const newConvId = newConversationDocRef.id;\r\n\r\n      await setDoc(newConversationDocRef, {\r\n        title: 'New Chat',\r\n        createdAt: serverTimestamp(),\r\n        lastUpdated: serverTimestamp(),\r\n      });\r\n      setCurrentConversationId(newConvId);\r\n      setIsSidebarOpen(false);\r\n      // Immediately focus the input after starting a new chat\r\n      setTimeout(() => {\r\n        inputRef.current?.focus();\r\n      }, 0);\r\n    } catch (e) {\r\n      setError(`Failed to create a new chat: ${e.message}`);\r\n      console.error(\"Error creating new conversation:\", e);\r\n    }\r\n  };\r\n\r\n  // 6. Handle sending a new message (and creating a new conversation if needed).\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() && !selectedImage || !user || !db || isAIGenerating || isSpeaking) return;\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n    const userMessageText = newMessage;\r\n    const imageToSend = selectedImage;\r\n\r\n    setNewMessage('');\r\n    setSelectedImage(null);\r\n\r\n    // After sending the message, immediately refocus the input field\r\n    setTimeout(() => {\r\n      inputRef.current?.focus();\r\n    }, 0);\r\n\r\n    const command = userMessageText.toLowerCase().trim();\r\n\r\n    // If no conversation is active, create a new one.\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      const initialTitle = userMessageText ? (userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '')) : 'New chat with image';\r\n\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: initialTitle,\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId);\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        console.error(\"Error creating new conversation:\", createError);\r\n        return;\r\n      }\r\n    } else {\r\n      // Otherwise, just update the lastUpdated timestamp of the current conversation.\r\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\r\n      try {\r\n        await setDoc(conversationDocRef, { lastUpdated: serverTimestamp() }, { merge: true });\r\n      } catch (updateError) {\r\n        console.error(\"Error updating conversation timestamp:\", updateError);\r\n      }\r\n    }\r\n\r\n    // Add user message to Firestore\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: userMessageText,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message',\r\n        imageData: imageToSend\r\n      });\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n      return;\r\n    }\r\n\r\n    if (imageToSend) {\r\n      handleImageAnalysis(userMessageText, imageToSend, conversationIdToUse);\r\n    } else if (command.startsWith('image of')) {\r\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\r\n      handleGenerateImage(imagePrompt, conversationIdToUse);\r\n    } else {\r\n      handleAIResponse(userMessageText, conversationIdToUse);\r\n    }\r\n  };\r\n\r\n  // Function to handle image upload\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // 7. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    const actionCodeSettings = {\r\n      url: window.location.origin,\r\n      handleCodeInApp: true,\r\n    };\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to sign up: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 9. Handle Email/Password Login\r\n  const handleEmailPasswordSignIn = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to sign in: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 10. Handle sign-out.\r\n  const handleSignOut = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      // Reset states\r\n      setUser(null);\r\n      setConversations([]);\r\n      setMessages([]);\r\n      setCurrentConversationId(null);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Failed to sign out: ${error.message}`);\r\n      console.error(\"Sign out error:\", error);\r\n    }\r\n  };\r\n\r\n  // 11. Handle AI response using Gemini API.\r\n  const handleAIResponse = async (userPrompt, conversationId) => {\r\n    if (!user || !db || !conversationId) return;\r\n    setIsAIGenerating(true);\r\n    let promptText = userPrompt;\r\n    let newMessages = [...messages];\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    // Get the conversation history to provide context to the AI\r\n    let chatHistory = [];\r\n    try {\r\n      const q = query(messagesCollectionRef, limit(20));\r\n      const querySnapshot = await getDocs(q);\r\n      querySnapshot.forEach(doc => {\r\n        const data = doc.data();\r\n        if (data.type === 'user-message') {\r\n          chatHistory.push({ role: 'user', parts: [{ text: data.text }] });\r\n        } else if (data.type === 'ai-message') {\r\n          chatHistory.push({ role: 'model', parts: [{ text: data.text }] });\r\n        }\r\n      });\r\n      // Add the latest user prompt\r\n      chatHistory.push({ role: \"user\", parts: [{ text: promptText }] });\r\n    } catch (e) {\r\n      console.error(\"Error fetching chat history:\", e);\r\n      // If fetching history fails, just use the current prompt\r\n      chatHistory = [{ role: \"user\", parts: [{ text: promptText }] }];\r\n    }\r\n    const payload = {\r\n      contents: chatHistory,\r\n      generationConfig: {\r\n        temperature: generationSettings.temperature,\r\n        topK: generationSettings.topK,\r\n        topP: generationSettings.topP,\r\n      },\r\n      systemInstruction: systemInstruction ? { parts: [{ text: systemInstruction }] } : undefined,\r\n    };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n    try {\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const aiResponseText = result.candidates?.[0]?.content?.parts?.[0]?.text || 'No response from AI.';\r\n      // Add AI response to Firestore\r\n      await addDoc(messagesCollectionRef, {\r\n        text: aiResponseText,\r\n        userId: 'ai',\r\n        userName: 'Gemini',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-message'\r\n      });\r\n    } catch (e) {\r\n      console.error(\"Gemini API error:\", e);\r\n      setError(`Gemini API error: ${e.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n  // 12. Handle image analysis with Gemini Vision API\r\n  const handleImageAnalysis = async (userPrompt, imageData, conversationId) => {\r\n    if (!user || !db || !conversationId) return;\r\n    setIsAIGenerating(true);\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n    // Remove the data URL prefix \"data:image/png;base64,\"\r\n    const base64ImageData = imageData.split(',')[1];\r\n    const payload = {\r\n      contents: [\r\n        {\r\n          role: \"user\",\r\n          parts: [\r\n            { text: userPrompt || 'What is in this image?' },\r\n            {\r\n              inlineData: {\r\n                mimeType: \"image/png\", // Assuming PNG, but should be dynamic if possible\r\n                data: base64ImageData\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n    };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n    try {\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const aiResponseText = result.candidates?.[0]?.content?.parts?.[0]?.text || 'No response from AI.';\r\n\r\n      await addDoc(messagesCollectionRef, {\r\n        text: aiResponseText,\r\n        userId: 'ai',\r\n        userName: 'Gemini',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-message'\r\n      });\r\n    } catch (e) {\r\n      console.error(\"Gemini Vision API error:\", e);\r\n      setError(`Gemini Vision API error: ${e.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n\r\n  // 13. Handle image generation with Gemini API\r\n  const handleGenerateImage = async (imagePrompt, conversationId) => {\r\n    if (!user || !db || !conversationId) return;\r\n    setIsGeneratingImage(true);\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: imagePrompt.substring(0, 50) + '...',\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId);\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        console.error(\"Error creating new conversation:\", createError);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add user prompt to Firestore\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: imagePrompt,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'image-prompt-message'\r\n      });\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      instances: { prompt: imagePrompt },\r\n      parameters: { \"sampleCount\": 1 }\r\n    };\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n\r\n    try {\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const base64Data = result?.predictions?.[0]?.bytesBase64Encoded;\r\n\r\n      if (!base64Data) {\r\n        throw new Error('Image generation failed: No image data received.');\r\n      }\r\n\r\n      const imageUrl = `data:image/png;base64,${base64Data}`;\r\n\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        imageUrl: imageUrl,\r\n        userId: 'ai',\r\n        userName: 'Gemini',\r\n        timestamp: serverTimestamp(),\r\n        type: 'image-message'\r\n      });\r\n\r\n    } catch (e) {\r\n      console.error(\"Gemini Image generation API error:\", e);\r\n      setError(`Gemini Image generation API error: ${e.message}`);\r\n    } finally {\r\n      setIsGeneratingImage(false);\r\n    }\r\n  };\r\n\r\n  // 14. Handle TTS generation and playback.\r\n  const handleTTS = async (textToSpeak) => {\r\n    if (isSpeaking) {\r\n      audioRef.current?.pause();\r\n      setIsSpeaking(false);\r\n      return;\r\n    }\r\n    setIsSpeaking(true);\r\n    const utteranceId = generateId();\r\n    currentAudioIdRef.current = utteranceId;\r\n\r\n    const payload = {\r\n      contents: [{\r\n        parts: [{ text: textToSpeak }]\r\n      }],\r\n      generationConfig: {\r\n        responseModalities: [\"AUDIO\"],\r\n        speechConfig: {\r\n          voiceConfig: {\r\n            prebuiltVoiceConfig: { voiceName: voiceName }\r\n          }\r\n        }\r\n      },\r\n      model: \"gemini-2.5-flash-preview-tts\"\r\n    };\r\n\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\r\n\r\n    try {\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const part = result?.candidates?.[0]?.content?.parts?.[0];\r\n      const audioData = part?.inlineData?.data;\r\n      const mimeType = part?.inlineData?.mimeType;\r\n\r\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\r\n        const sampleRate = parseInt(mimeType.match(/rate=(\\d+)/)[1], 10);\r\n        const pcmData = base64ToArrayBuffer(audioData);\r\n        const wavBlob = pcmToWav(pcmData, sampleRate);\r\n        const audioUrl = URL.createObjectURL(wavBlob);\r\n\r\n        if (currentAudioIdRef.current !== utteranceId) {\r\n          URL.revokeObjectURL(audioUrl);\r\n          return;\r\n        }\r\n\r\n        if (audioRef.current) {\r\n          audioRef.current.src = audioUrl;\r\n          audioRef.current.onended = () => {\r\n            setIsSpeaking(false);\r\n            URL.revokeObjectURL(audioUrl);\r\n          };\r\n          audioRef.current.play();\r\n        }\r\n      } else {\r\n        throw new Error(\"No audio data received from API.\");\r\n      }\r\n    } catch (e) {\r\n      console.error(\"TTS API error:\", e);\r\n      setError(`TTS API error: ${e.message}`);\r\n      setIsSpeaking(false);\r\n    }\r\n  };\r\n\r\n  // 15. Handle code generation with Gemini API.\r\n  const handleGenerateCode = async () => {\r\n    if (!user || !db || !codeGenerationPrompt || isAIGenerating) return;\r\n    setIsAIGenerating(true);\r\n    setShowCodeGeneratorModal(false);\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n    const userPrompt = codeGenerationPrompt;\r\n    const language = codeLanguage;\r\n\r\n    // Create a new conversation if one doesn't exist\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: userPrompt.substring(0, 50) + '...',\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId);\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        console.error(\"Error creating new conversation:\", createError);\r\n        setIsAIGenerating(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add user's code request to Firestore\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: `Generate a complete code snippet in ${language} for the following request: \\n\\n${userPrompt}`,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'code-request'\r\n      });\r\n    } catch (e) {\r\n      setError(`Failed to send code request: ${e.message}`);\r\n      setIsAIGenerating(false);\r\n      return;\r\n    }\r\n\r\n    // Prepare the prompt for the Gemini API\r\n    const finalPrompt = `Generate a complete, well-commented code snippet in ${language} for the following request: ${userPrompt}. The output must be a single markdown code block.`;\r\n    const payload = {\r\n      contents: [{ role: \"user\", parts: [{ text: finalPrompt }] }],\r\n      generationConfig: {\r\n        temperature: 0.7,\r\n        topK: 40,\r\n        topP: 0.95,\r\n      }\r\n    };\r\n\r\n    const apiKey = \"\";\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n    try {\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const aiResponseText = result.candidates?.[0]?.content?.parts?.[0]?.text || 'No code generated.';\r\n\r\n      // Add AI's code response to Firestore\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: aiResponseText,\r\n        userId: 'ai',\r\n        userName: 'Gemini',\r\n        timestamp: serverTimestamp(),\r\n        type: 'code-response',\r\n        language: language,\r\n      });\r\n\r\n    } catch (e) {\r\n      console.error(\"Gemini Code generation API error:\", e);\r\n      setError(`Gemini Code generation API error: ${e.message}`);\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n      setCodeGenerationPrompt('');\r\n    }\r\n  };\r\n\r\n  // Copy to clipboard handler\r\n  const handleCopyToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text).then(() => {\r\n      // You could add a small visual cue here\r\n      console.log('Code copied to clipboard!');\r\n    }).catch(err => {\r\n      console.error('Failed to copy text: ', err);\r\n    });\r\n  };\r\n\r\n  const renderMessage = (message, isLastMessage) => {\r\n    const isUser = message.userId === user?.uid;\r\n    const isAi = message.userId === 'ai';\r\n    const isCodeResponse = message.type === 'code-response';\r\n\r\n    const messageClasses = isUser\r\n      ? 'bg-indigo-500 text-white self-end rounded-br-none'\r\n      : isAi\r\n        ? 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 self-start rounded-bl-none'\r\n        : '';\r\n    const nameClasses = isUser\r\n      ? 'text-indigo-400 text-right'\r\n      : 'text-gray-500 dark:text-gray-400';\r\n\r\n    const messageContent = () => {\r\n      if (message.imageData) {\r\n        return (\r\n          <div className=\"flex flex-col items-start space-y-2\">\r\n            <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              {message.text}\r\n            </p>\r\n            <img\r\n              src={message.imageData}\r\n              alt=\"User uploaded\"\r\n              className=\"max-w-xs rounded-lg shadow-md\"\r\n              style={{ maxHeight: '300px' }}\r\n            />\r\n          </div>\r\n        );\r\n      } else if (message.imageUrl) {\r\n        return (\r\n          <img\r\n            src={message.imageUrl}\r\n            alt=\"AI generated\"\r\n            className=\"max-w-full rounded-lg shadow-md\"\r\n            style={{ maxHeight: '400px' }}\r\n          />\r\n        );\r\n      } else if (isCodeResponse) {\r\n        // Find the code block and extract the content\r\n        const codeBlockMatch = message.text.match(/```(?:\\w+)?\\n([\\s\\S]*?)```/);\r\n        const codeContent = codeBlockMatch ? codeBlockMatch[1] : message.text;\r\n\r\n        return (\r\n          <div className=\"flex flex-col w-full\">\r\n            <div className=\"p-4 bg-gray-800 text-white rounded-t-xl overflow-x-auto relative\">\r\n              <button\r\n                onClick={() => handleCopyToClipboard(codeContent)}\r\n                className=\"absolute top-2 right-2 p-1 text-gray-400 hover:text-white bg-gray-700 rounded-md transition-colors\"\r\n                title=\"Copy to clipboard\"\r\n              >\r\n                <Copy size={16} />\r\n              </button>\r\n              <div dangerouslySetInnerHTML={{ __html: marked.parse(message.text) }} />\r\n            </div>\r\n            {message.text.length > 500 && (\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                Scroll to view the full code snippet.\r\n              </p>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n      return <div dangerouslySetInnerHTML={{ __html: marked.parse(message.text) }} />;\r\n    };\r\n\r\n    return (\r\n      <div\r\n        key={message.id}\r\n        className={`flex flex-col p-4 space-y-1 ${isUser ? 'items-end' : 'items-start'\r\n          }`}\r\n      >\r\n        <span className={`text-xs font-semibold ${nameClasses}`}>\r\n          {isUser ? 'You' : 'Gemini'}\r\n        </span>\r\n        <div\r\n          className={`max-w-3xl p-3 rounded-xl shadow-md whitespace-pre-wrap ${messageClasses} ${isCodeResponse ? 'w-full' : 'max-w-3xl'}`}\r\n        >\r\n          {messageContent()}\r\n        </div>\r\n        <div className=\"flex items-center space-x-2 mt-1\">\r\n          {isAi && message.text && !isCodeResponse && (\r\n            <button\r\n              onClick={() => handleTTS(message.text)}\r\n              className=\"text-gray-500 dark:text-gray-400 hover:text-indigo-500 transition-colors\"\r\n            >\r\n              {isSpeaking && currentAudioIdRef.current === message.id ? <Pause size={16} /> : <Play size={16} />}\r\n            </button>\r\n          )}\r\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            {message.timestamp?.toDate().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const MemoizedMessages = React.memo(({ messages }) => {\r\n    if (messages.length === 0) {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center h-full text-center text-gray-400 dark:text-gray-600 p-4\">\r\n          <MessageSquareMore className=\"h-16 w-16 mb-4\" />\r\n          <h2 className=\"text-xl font-bold mb-2\">Start a new conversation</h2>\r\n          <p className=\"max-w-sm\">\r\n            Ask me anything, generate images, or get help writing code.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {messages.map((message, index) =>\r\n          renderMessage(message, index === messages.length - 1)\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </>\r\n    );\r\n  });\r\n\r\n  const AuthUI = () => (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 p-4\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8 w-full max-w-md\">\r\n        <h1 className=\"text-3xl font-bold text-center mb-6\">Welcome</h1>\r\n        {error && (\r\n          <div className=\"p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <div className=\"flex space-x-2 mb-6\">\r\n          <button\r\n            onClick={() => setAuthMode('email-link')}\r\n            className={`flex-1 p-3 rounded-xl font-semibold transition-colors ${authMode === 'email-link' ? 'bg-indigo-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200'\r\n              }`}\r\n          >\r\n            Magic Link\r\n          </button>\r\n          <button\r\n            onClick={() => setAuthMode('email-password')}\r\n            className={`flex-1 p-3 rounded-xl font-semibold transition-colors ${authMode === 'email-password' ? 'bg-indigo-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200'\r\n              }`}\r\n          >\r\n            Email/Password\r\n          </button>\r\n        </div>\r\n        {authMode === 'email-link' ? (\r\n          <form onSubmit={handleSendSignInLink} className=\"space-y-4\">\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter your email\"\r\n              required\r\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? <LoaderCircle className=\"animate-spin h-5 w-5 mx-auto\" /> : 'Send Sign-in Link'}\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            <form onSubmit={handleEmailPasswordSignIn} className=\"space-y-4\">\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter your email\"\r\n                required\r\n                className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Enter your password\"\r\n                required\r\n                className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? <LoaderCircle className=\"animate-spin h-5 w-5 mx-auto\" /> : 'Sign In'}\r\n              </button>\r\n            </form>\r\n            <button\r\n              onClick={handleEmailPasswordSignUp}\r\n              className=\"w-full text-indigo-500 p-3 rounded-lg hover:bg-indigo-100 dark:hover:bg-indigo-900 transition-colors duration-200\"\r\n            >\r\n              Don't have an account? Sign Up\r\n            </button>\r\n          </div>\r\n        )}\r\n        {emailSent && (\r\n          <p className=\"mt-4 text-center text-sm text-green-600 dark:text-green-400\">\r\n            A sign-in link has been sent to your email!\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const UserModal = ({ isOpen, onClose, title, children }) => {\r\n    if (!isOpen) return null;\r\n    return createPortal(\r\n      <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white dark:bg-gray-900 rounded-xl shadow-lg p-6 w-full max-w-md mx-4\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-xl font-bold\">{title}</h2>\r\n            <button onClick={onClose} className=\"p-1 rounded-full text-gray-500 hover:bg-gray-200 dark:hover:bg-gray-700\">\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>,\r\n      document.body\r\n    );\r\n  };\r\n\r\n  const CodeGeneratorModal = ({ isOpen, onClose, onGenerate }) => {\r\n    if (!isOpen) return null;\r\n    return (\r\n      <UserModal isOpen={isOpen} onClose={onClose} title=\"Code Generator\">\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Language\r\n            </label>\r\n            <select\r\n              value={codeLanguage}\r\n              onChange={(e) => setCodeLanguage(e.target.value)}\r\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            >\r\n              <option value=\"JavaScript\">JavaScript</option>\r\n              <option value=\"Python\">Python</option>\r\n              <option value=\"HTML\">HTML</option>\r\n              <option value=\"CSS\">CSS</option>\r\n              <option value=\"React\">React</option>\r\n              <option value=\"Java\">Java</option>\r\n              <option value=\"C++\">C++</option>\r\n              <option value=\"Go\">Go</option>\r\n              <option value=\"Swift\">Swift</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Code Prompt\r\n            </label>\r\n            <textarea\r\n              value={codeGenerationPrompt}\r\n              onChange={(e) => setCodeGenerationPrompt(e.target.value)}\r\n              placeholder=\"e.g., 'A function that reverses a string' or 'A simple HTML layout with a header and footer'\"\r\n              rows=\"5\"\r\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            ></textarea>\r\n          </div>\r\n          <button\r\n            onClick={onGenerate}\r\n            className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n            disabled={isAIGenerating || !codeGenerationPrompt}\r\n          >\r\n            {isAIGenerating ? (\r\n              <LoaderCircle className=\"animate-spin h-5 w-5 mx-auto\" />\r\n            ) : (\r\n              'Generate Code'\r\n            )}\r\n          </button>\r\n        </div>\r\n      </UserModal>\r\n    );\r\n  };\r\n\r\n  const ChatWindow = () => (\r\n    <div className=\"flex flex-col h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100\">\r\n      <div className={`fixed inset-y-0 left-0 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} lg:translate-x-0 lg:static lg:inset-y-0 w-64 bg-white dark:bg-gray-800 transition-transform duration-300 ease-in-out z-40 flex flex-col`}>\r\n        <div className=\"p-4 flex items-center justify-between border-b dark:border-gray-700\">\r\n          <h2 className=\"text-xl font-bold\">Conversations</h2>\r\n          <button\r\n            onClick={startNewChat}\r\n            className=\"p-2 rounded-full bg-indigo-500 text-white shadow-md hover:bg-indigo-600 transition-colors\"\r\n            title=\"New Chat\"\r\n          >\r\n            <Plus className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-1 overflow-y-auto p-2\">\r\n          {conversations.length > 0 ? (\r\n            conversations.map((conv) => (\r\n              <div\r\n                key={conv.id}\r\n                onClick={() => { setCurrentConversationId(conv.id); setIsSidebarOpen(false); }}\r\n                className={`p-3 my-2 rounded-xl cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors truncate ${currentConversationId === conv.id ? 'bg-indigo-100 dark:bg-indigo-900 font-semibold' : 'bg-gray-100 dark:bg-gray-800'\r\n                  }`}\r\n                title={conv.title}\r\n              >\r\n                {conv.title}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-center text-sm text-gray-400 mt-4\">No conversations yet.</p>\r\n          )}\r\n        </div>\r\n        <div className=\"p-4 border-t dark:border-gray-700\">\r\n          <p className=\"text-sm font-semibold text-gray-500\">\r\n            User ID: <span className=\"text-xs break-all\">{user.uid}</span>\r\n          </p>\r\n          <button\r\n            onClick={handleSignOut}\r\n            className=\"mt-4 w-full bg-red-500 text-white p-3 rounded-lg shadow-md hover:bg-red-600 transition-colors duration-200\"\r\n          >\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-1 flex flex-col lg:ml-64\">\r\n        <header className=\"bg-white dark:bg-gray-800 shadow-md p-4 flex items-center justify-between lg:hidden\">\r\n          <button onClick={() => setIsSidebarOpen(!isSidebarOpen)} className=\"p-2 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg\">\r\n            <Menu className=\"h-6 w-6\" />\r\n          </button>\r\n          <h1 className=\"text-lg font-bold truncate\">\r\n            {conversations.find(c => c.id === currentConversationId)?.title || 'New Chat'}\r\n          </h1>\r\n          <button onClick={() => setShowSettingsModal(true)} className=\"p-2 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg\">\r\n            <Settings className=\"h-6 w-6\" />\r\n          </button>\r\n        </header>\r\n\r\n        <main className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n          <MemoizedMessages messages={messages} />\r\n          {(isAIGenerating || isGeneratingImage) && (\r\n            <div className={`flex flex-col p-4 space-y-1 items-start`}>\r\n              <span className={`text-xs font-semibold text-gray-500 dark:text-gray-400`}>\r\n                Gemini\r\n              </span>\r\n              <div className={`max-w-3xl p-3 rounded-xl shadow-md whitespace-pre-wrap bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-bl-none`}>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <LoaderCircle className=\"animate-spin\" size={20} />\r\n                  <span>{isGeneratingImage ? 'Generating image...' : 'Thinking...'}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </main>\r\n\r\n        <footer className=\"bg-white dark:bg-gray-800 p-4 border-t dark:border-gray-700\">\r\n          {error && (\r\n            <div className=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800 flex items-center justify-between\">\r\n              <span>{error}</span>\r\n              <button onClick={() => setError(null)} className=\"text-red-700 dark:text-red-800 hover:text-red-900\">\r\n                <X size={16} />\r\n              </button>\r\n            </div>\r\n          )}\r\n          <form onSubmit={handleSendMessage} className=\"flex space-x-2\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowCodeGeneratorModal(true)}\r\n              className=\"p-3 bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-xl hover:bg-indigo-500 hover:text-white transition-colors\"\r\n              title=\"Generate Code\"\r\n            >\r\n              <PenTool size={24} />\r\n            </button>\r\n            <label className=\"p-3 bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-xl hover:bg-indigo-500 hover:text-white transition-colors cursor-pointer\">\r\n              <Image size={24} />\r\n              <input type=\"file\" className=\"hidden\" onChange={handleImageUpload} accept=\"image/*\" />\r\n            </label>\r\n            <div className=\"relative flex-1\">\r\n              <textarea\r\n                ref={inputRef}\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter' && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    handleSendMessage(e);\r\n                  }\r\n                }}\r\n                className=\"w-full p-3 pr-12 border border-gray-300 dark:border-gray-600 rounded-xl bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 resize-none\"\r\n                rows={1}\r\n                placeholder={selectedImage ? 'Ask about the image...' : 'Message Gemini...'}\r\n                disabled={isAIGenerating || isGeneratingImage}\r\n                style={{ maxHeight: '150px' }}\r\n              />\r\n              {selectedImage && (\r\n                <div className=\"absolute top-2 right-2 p-1 bg-white dark:bg-gray-800 rounded-full shadow\">\r\n                  <button type=\"button\" onClick={() => setSelectedImage(null)} className=\"text-gray-500 hover:text-gray-700\">\r\n                    <X size={16} />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"p-3 bg-indigo-500 text-white rounded-xl shadow-md hover:bg-indigo-600 transition-colors\"\r\n              disabled={isAIGenerating || isGeneratingImage || (!newMessage.trim() && !selectedImage)}\r\n            >\r\n              <Sparkles size={24} />\r\n            </button>\r\n          </form>\r\n        </footer>\r\n      </div>\r\n\r\n      <UserModal isOpen={showSettingsModal} onClose={() => setShowSettingsModal(false)} title=\"App Settings\">\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold mb-2\">TTS Settings</h3>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Voice</label>\r\n            <select\r\n              value={voiceName}\r\n              onChange={(e) => setVoiceName(e.target.value)}\r\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n            >\r\n              {prebuiltVoices.map((voice) => (\r\n                <option key={voice} value={voice}>{voice}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </UserModal>\r\n\r\n      <CodeGeneratorModal isOpen={showCodeGeneratorModal} onClose={() => setShowCodeGeneratorModal(false)} onGenerate={handleGenerateCode} />\r\n\r\n    </div>\r\n  );\r\n\r\n  if (loading || !isAuthReady) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100\">\r\n        <LoaderCircle className=\"animate-spin h-12 w-12 text-indigo-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && !user) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900 p-4\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8 w-full max-w-md text-center\">\r\n          <p className=\"text-red-500 dark:text-red-400 mb-4\">{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\"\r\n          >\r\n            Refresh Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-sans\">\r\n      {!user ? <AuthUI /> : <ChatWindow />}\r\n      <audio ref={audioRef} className=\"hidden\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}