{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\OneDrive\\\\Documents\\\\GitHub\\\\Toki-AI\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom/client'; // Changed to modern React 18 root API\n\n// New modular Firebase v9 imports\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, onSnapshot, query, serverTimestamp } from 'firebase/firestore';\n\n// Initialize Firebase with your config\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseApp = initializeApp(__firebase_config);\nconst auth = getAuth(firebaseApp);\nconst db = getFirestore(firebaseApp);\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState(null);\n  const messageInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  // Authenticate user anonymously on component mount\n  useEffect(() => {\n    // Set up a listener for auth state changes\n    const unsubscribeAuth = onAuthStateChanged(auth, async currentUser => {\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        // Sign in anonymously if no user is signed in\n        try {\n          const anonymousUser = await signInAnonymously(auth);\n          setUser(anonymousUser.user);\n        } catch (error) {\n          console.error(\"Error signing in anonymously: \", error);\n        }\n      }\n    });\n\n    // Clean up the auth listener on component unmount\n    return () => unsubscribeAuth();\n  }, []); // Empty dependency array to run only once on mount\n\n  // Fetch messages from Firestore in real-time\n  useEffect(() => {\n    // Create a query to order messages by timestamp\n    const q = query(collection(db, 'messages'));\n\n    // Set up a real-time listener for the messages collection\n    const unsubscribeSnapshot = onSnapshot(q, snapshot => {\n      const newMessages = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(newMessages);\n      scrollToBottom();\n    }, error => {\n      console.error(\"Error fetching messages: \", error);\n    });\n\n    // Clean up the snapshot listener on component unmount\n    return () => unsubscribeSnapshot();\n  }, [db]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const messageText = messageInputRef.current.value;\n    if (messageText.trim() === '') return;\n    if (user) {\n      try {\n        await addDoc(collection(db, 'messages'), {\n          text: messageText,\n          uid: user.uid,\n          timestamp: serverTimestamp() // Use serverTimestamp for accuracy\n        });\n        messageInputRef.current.value = '';\n      } catch (error) {\n        console.error(\"Error adding document: \", error);\n      }\n    } else {\n      console.error(\"No user is signed in. Message not sent.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.uid === (user === null || user === void 0 ? void 0 : user.uid) ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: messageInputRef,\n          type: \"text\",\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n// Use ReactDOM.createRoot for modern React rendering\n_s(App, \"bqWwB57F6OLdVv+EP1tjj1VOtxM=\");\n_c = App;\nconst container = document.getElementById('root');\nconst root = ReactDOM.createRoot(container);\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 13\n}, this));\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactDOM","initializeApp","getAuth","signInAnonymously","onAuthStateChanged","getFirestore","collection","addDoc","onSnapshot","query","serverTimestamp","jsxDEV","_jsxDEV","firebaseApp","__firebase_config","auth","db","App","_s","messages","setMessages","user","setUser","messageInputRef","messagesEndRef","unsubscribeAuth","currentUser","anonymousUser","error","console","q","unsubscribeSnapshot","snapshot","newMessages","docs","map","doc","id","data","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","messageText","value","trim","text","uid","timestamp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","ref","onSubmit","type","placeholder","_c","container","document","getElementById","root","createRoot","render","$RefreshReg$"],"sources":["C:/Users/Tommy/OneDrive/Documents/GitHub/Toki-AI/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom/client'; // Changed to modern React 18 root API\r\n\r\n// New modular Firebase v9 imports\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, collection, addDoc, onSnapshot, query, serverTimestamp } from 'firebase/firestore';\r\n\r\n// Initialize Firebase with your config\r\nconst firebaseApp = initializeApp(__firebase_config);\r\nconst auth = getAuth(firebaseApp);\r\nconst db = getFirestore(firebaseApp);\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const messageInputRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Authenticate user anonymously on component mount\r\n  useEffect(() => {\r\n    // Set up a listener for auth state changes\r\n    const unsubscribeAuth = onAuthStateChanged(auth, async (currentUser) => {\r\n      if (currentUser) {\r\n        setUser(currentUser);\r\n      } else {\r\n        // Sign in anonymously if no user is signed in\r\n        try {\r\n          const anonymousUser = await signInAnonymously(auth);\r\n          setUser(anonymousUser.user);\r\n        } catch (error) {\r\n          console.error(\"Error signing in anonymously: \", error);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Clean up the auth listener on component unmount\r\n    return () => unsubscribeAuth();\r\n  }, []); // Empty dependency array to run only once on mount\r\n\r\n  // Fetch messages from Firestore in real-time\r\n  useEffect(() => {\r\n    // Create a query to order messages by timestamp\r\n    const q = query(collection(db, 'messages'));\r\n\r\n    // Set up a real-time listener for the messages collection\r\n    const unsubscribeSnapshot = onSnapshot(q, (snapshot) => {\r\n      const newMessages = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setMessages(newMessages);\r\n      scrollToBottom();\r\n    }, (error) => {\r\n      console.error(\"Error fetching messages: \", error);\r\n    });\r\n\r\n    // Clean up the snapshot listener on component unmount\r\n    return () => unsubscribeSnapshot();\r\n  }, [db]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const messageText = messageInputRef.current.value;\r\n\r\n    if (messageText.trim() === '') return;\r\n\r\n    if (user) {\r\n      try {\r\n        await addDoc(collection(db, 'messages'), {\r\n          text: messageText,\r\n          uid: user.uid,\r\n          timestamp: serverTimestamp(), // Use serverTimestamp for accuracy\r\n        });\r\n        messageInputRef.current.value = '';\r\n      } catch (error) {\r\n        console.error(\"Error adding document: \", error);\r\n      }\r\n    } else {\r\n      console.error(\"No user is signed in. Message not sent.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Chat App</h1>\r\n      </header>\r\n      <main>\r\n        <div className=\"message-list\">\r\n          {messages.map(msg => (\r\n            <div key={msg.id} className={`message ${msg.uid === user?.uid ? 'sent' : 'received'}`}>\r\n              <p>{msg.text}</p>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <form onSubmit={handleSendMessage}>\r\n          <input ref={messageInputRef} type=\"text\" placeholder=\"Type a message...\" />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Use ReactDOM.createRoot for modern React rendering\r\nconst container = document.getElementById('root');\r\nconst root = ReactDOM.createRoot(container);\r\nroot.render(<App />);\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}