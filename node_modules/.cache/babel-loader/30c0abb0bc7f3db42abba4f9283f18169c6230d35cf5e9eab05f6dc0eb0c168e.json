{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// This line tells ESLint to ignore the following global variables that are provided by the Canvas environment.\n/* global __app_id, __firebase_config, __initial_auth_token */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\nimport { SendHorizonal, Bot } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIChatbot = ({\n  db,\n  userId,\n  appId\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Custom CSS for dot-flashing animation, since we can't import App.css\n  const dotFlashingCss = `\n    .dot-flashing {\n      position: relative;\n      width: 10px;\n      height: 10px;\n      border-radius: 5px;\n      background-color: #9880ff;\n      color: #9880ff;\n      animation: dotFlashing 1s infinite linear alternate;\n      animation-delay: .5s;\n      margin-top: 4px; /* Adjust spacing */\n    }\n\n    .dot-flashing::before, .dot-flashing::after {\n      content: '';\n      display: inline-block;\n      position: absolute;\n      top: 0;\n    }\n\n    .dot-flashing::before {\n      left: -15px;\n      width: 10px;\n      height: 10px;\n      border-radius: 5px;\n      background-color: #9880ff;\n      color: #9880ff;\n      animation: dotFlashing 1s infinite alternate;\n      animation-delay: 0s;\n    }\n\n    .dot-flashing::after {\n      left: 15px;\n      width: 10px;\n      height: 10px;\n      border-radius: 5px;\n      background-color: #9880ff;\n      color: #9880ff;\n      animation: dotFlashing 1s infinite alternate;\n      animation-delay: 1s;\n    }\n\n    @keyframes dotFlashing {\n      0% {\n        background-color: #9880ff;\n      }\n      50%,\n      100% {\n        background-color: #ebe6ff;\n      }\n    }\n  `;\n\n  // Fetch messages from Firestore in real-time\n  useEffect(() => {\n    if (!db || !userId) {\n      console.warn(\"Firestore or User ID not available, skipping message fetch.\");\n      return;\n    }\n    console.log(`[FIRESTORE] Fetching messages for user: ${userId}`);\n    const messagesCollectionPath = `artifacts/${appId}/public/data/messages`;\n    const messagesCollectionRef = collection(db, messagesCollectionPath);\n    const q = query(messagesCollectionRef);\n    const unsubscribe = onSnapshot(q, snapshot => {\n      console.log('[FIRESTORE] New message snapshot received.');\n      const fetchedMessages = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      const sortedMessages = fetchedMessages.sort((a, b) => {\n        var _a$timestamp, _b$timestamp;\n        return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.toMillis()) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.toMillis()) || 0);\n      });\n      setMessages(sortedMessages);\n      setError(null);\n    }, firestoreError => {\n      console.error(\"[FIRESTORE ERROR] Error fetching messages:\", firestoreError.message);\n      setError(`Failed to load messages. Details: ${firestoreError.message}`);\n    });\n    return () => {\n      console.log('[FIRESTORE] Unsubscribing from messages collection.');\n      unsubscribe();\n    };\n  }, [db, userId, appId]);\n\n  // Use a separate useEffect to handle AI responses to user messages\n  useEffect(() => {\n    const lastMessage = messages[messages.length - 1];\n    if (db && lastMessage && lastMessage.sender === 'user' && !isAIGenerating) {\n      const getAIResponse = async () => {\n        setIsAIGenerating(true);\n        console.log(\"[AI] User sent a message. Generating AI response...\");\n        try {\n          const chatHistory = messages.map(msg => ({\n            role: msg.sender === 'user' ? 'user' : 'model',\n            parts: [{\n              text: msg.text\n            }]\n          }));\n          const prompt = {\n            role: \"user\",\n            parts: [{\n              text: lastMessage.text\n            }]\n          };\n          const payload = {\n            contents: [...chatHistory, prompt]\n          };\n          const apiKey = \"\";\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          });\n          const result = await response.json();\n          let responseText = \"Sorry, I couldn't generate a response.\";\n          if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n            responseText = result.candidates[0].content.parts[0].text;\n            console.log(\"[AI] Generated AI response successfully.\");\n          }\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\n            text: responseText,\n            sender: 'bot',\n            timestamp: serverTimestamp(),\n            userId: \"bot\"\n          });\n        } catch (e) {\n          console.error(\"[AI ERROR] Error getting AI response:\", e);\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\n            text: `Sorry, I am having trouble processing that request. Error: ${e.message}`,\n            sender: 'bot',\n            timestamp: serverTimestamp(),\n            userId: \"bot\"\n          });\n        } finally {\n          setIsAIGenerating(false);\n        }\n      };\n      getAIResponse();\n    }\n  }, [messages, db, isAIGenerating, appId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (input.trim() === '' || !db || !userId || isAIGenerating) {\n      console.warn(\"[SEND] Message send blocked. Input is empty, DB/userId not ready, or AI is generating.\");\n      return;\n    }\n    try {\n      const messagesCollectionPath = `artifacts/${appId}/public/data/messages`;\n      console.log(`[SEND] Attempting to send message to path: ${messagesCollectionPath}`);\n      const messagesCollectionRef = collection(db, messagesCollectionPath);\n      await addDoc(messagesCollectionRef, {\n        text: input,\n        sender: 'user',\n        timestamp: serverTimestamp(),\n        userId: userId // Add userId to the message for identification\n      });\n      setInput('');\n      console.log(\"[SEND] Message sent successfully.\");\n    } catch (e) {\n      console.error(\"[SEND ERROR] Error adding document: \", e);\n      setError(`Failed to send message: ${e.message}`);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && input.trim() !== '' && !isAIGenerating) {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: dotFlashingCss\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700 rounded-t-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold text-gray-900 dark:text-white\",\n        children: \"AI Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), userId && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-500 dark:text-gray-400\",\n        children: [\"User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono\",\n          children: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-4 overflow-y-auto space-y-4\",\n      children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full text-red-500 font-medium text-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 dark:text-gray-400\",\n          children: \"Start a new conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-start gap-3 ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center w-8 h-8 rounded-full bg-indigo-200 dark:bg-indigo-700\",\n          children: /*#__PURE__*/_jsxDEV(Bot, {\n            size: 16,\n            className: \"text-indigo-600 dark:text-indigo-200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-3 rounded-lg max-w-[70%] ${message.sender === 'user' ? 'bg-indigo-500 text-white dark:bg-indigo-600' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"whitespace-pre-wrap\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)), isAIGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start gap-3 justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white max-w-[70%] flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 16,\n            className: \"inline-block mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot-flashing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-200 dark:border-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          className: \"flex-grow rounded-full border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 px-4 py-2 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors\",\n          disabled: isAIGenerating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: isAIGenerating || input.trim() === '',\n          className: \"ml-3 p-2 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:bg-gray-400 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(SendHorizonal, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatbot, \"Jv492dMc9nw0XCl47kGbban8HR0=\");\n_c = AIChatbot;\nfunction App() {\n  _s2();\n  const [db, setDb] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // A robust approach to getting the Firebase config\n  let firebaseConfig = {};\n  const defaultFirebaseConfig = {\n    apiKey: \"YOUR_API_KEY\",\n    // Placeholder, you may need to fill this in if not provided by the env\n    authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n    projectId: \"ai-chatbot-88602\",\n    storageBucket: \"ai-chatbot-88602.appspot.com\",\n    messagingSenderId: \"167580287666\",\n    appId: \"1:167580287666:web:YOUR_WEB_APP_ID\"\n  };\n  try {\n    const providedConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\n    if (providedConfig && providedConfig.projectId) {\n      firebaseConfig = providedConfig;\n    } else {\n      console.warn(\"Provided Firebase config is empty or invalid. Using a hardcoded placeholder config.\");\n      firebaseConfig = defaultFirebaseConfig;\n    }\n  } catch (e) {\n    console.error(\"Failed to parse firebase config from global variable. Using hardcoded placeholder config.\", e);\n    firebaseConfig = defaultFirebaseConfig;\n  }\n  const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n  useEffect(() => {\n    const initAndAuth = async () => {\n      console.log(\"[INIT] Starting Firebase initialization and authentication...\");\n      try {\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\n        const firestoreAuth = getAuth(app);\n        const firestoreDb = getFirestore(app);\n\n        // Set up the auth state listener to get the user ID once authentication is complete\n        const unsubscribe = onAuthStateChanged(firestoreAuth, async user => {\n          if (user) {\n            setUserId(user.uid);\n            console.log(`[AUTH] User state changed. Authenticated with UID: ${user.uid}`);\n            setDb(firestoreDb); // Set the db once the user is authenticated\n            setIsLoading(false);\n          } else {\n            console.log(\"[AUTH] No user is signed in. Attempting to sign in.\");\n            // If no user is signed in, attempt to sign in.\n            try {\n              if (initialAuthToken) {\n                await signInWithCustomToken(firestoreAuth, initialAuthToken);\n                console.log(\"[AUTH] Successfully signed in with custom token.\");\n              } else {\n                await signInAnonymously(firestoreAuth);\n                console.log(\"[AUTH] Successfully signed in anonymously.\");\n              }\n            } catch (authError) {\n              console.error(\"[AUTH ERROR] Failed to sign in.\", authError);\n              setError(`Authentication failed: ${authError.message}`);\n              setIsLoading(false);\n            }\n          }\n        });\n        return () => {\n          console.log(\"[INIT] Cleaning up auth state listener.\");\n          unsubscribe();\n        };\n      } catch (e) {\n        console.error(\"[INIT ERROR] Failed to initialize Firebase:\", e);\n        setError(`Firebase initialization failed: ${e.message}`);\n        setIsLoading(false);\n      }\n    };\n    initAndAuth();\n  }, [initialAuthToken]); // Re-run if auth token changes\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-gray-500\",\n      children: \"Loading application...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-red-500 p-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"An error occurred: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App bg-gray-100 dark:bg-gray-900 min-h-screen flex items-center justify-center p-4\",\n    children: db && userId ? /*#__PURE__*/_jsxDEV(AIChatbot, {\n      db: db,\n      userId: userId,\n      appId: __app_id || 'default-app-id'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 23\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"YhehBF+Dq1yBQ/lZA76HqD632zY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AIChatbot\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getApps","getApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","getFirestore","collection","addDoc","serverTimestamp","query","onSnapshot","SendHorizonal","Bot","jsxDEV","_jsxDEV","AIChatbot","db","userId","appId","_s","input","setInput","messages","setMessages","isAIGenerating","setIsAIGenerating","error","setError","messagesEndRef","dotFlashingCss","console","warn","log","messagesCollectionPath","messagesCollectionRef","q","unsubscribe","snapshot","fetchedMessages","docs","map","doc","id","data","sortedMessages","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","firestoreError","message","lastMessage","length","sender","getAIResponse","chatHistory","msg","role","parts","text","prompt","payload","contents","apiKey","apiUrl","response","fetch","method","headers","body","JSON","stringify","result","json","responseText","candidates","content","e","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","handleKeyPress","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","size","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","App","_s2","setDb","setUserId","isLoading","setIsLoading","firebaseConfig","defaultFirebaseConfig","authDomain","projectId","storageBucket","messagingSenderId","providedConfig","parse","__firebase_config","initialAuthToken","__initial_auth_token","initAndAuth","app","firestoreAuth","firestoreDb","user","uid","authError","__app_id","_c2","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["// This line tells ESLint to ignore the following global variables that are provided by the Canvas environment.\r\n/* global __app_id, __firebase_config, __initial_auth_token */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\r\nimport { SendHorizonal, Bot } from 'lucide-react';\r\n\r\nconst AIChatbot = ({ db, userId, appId }) => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Custom CSS for dot-flashing animation, since we can't import App.css\r\n  const dotFlashingCss = `\r\n    .dot-flashing {\r\n      position: relative;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 5px;\r\n      background-color: #9880ff;\r\n      color: #9880ff;\r\n      animation: dotFlashing 1s infinite linear alternate;\r\n      animation-delay: .5s;\r\n      margin-top: 4px; /* Adjust spacing */\r\n    }\r\n\r\n    .dot-flashing::before, .dot-flashing::after {\r\n      content: '';\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: 0;\r\n    }\r\n\r\n    .dot-flashing::before {\r\n      left: -15px;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 5px;\r\n      background-color: #9880ff;\r\n      color: #9880ff;\r\n      animation: dotFlashing 1s infinite alternate;\r\n      animation-delay: 0s;\r\n    }\r\n\r\n    .dot-flashing::after {\r\n      left: 15px;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 5px;\r\n      background-color: #9880ff;\r\n      color: #9880ff;\r\n      animation: dotFlashing 1s infinite alternate;\r\n      animation-delay: 1s;\r\n    }\r\n\r\n    @keyframes dotFlashing {\r\n      0% {\r\n        background-color: #9880ff;\r\n      }\r\n      50%,\r\n      100% {\r\n        background-color: #ebe6ff;\r\n      }\r\n    }\r\n  `;\r\n\r\n  // Fetch messages from Firestore in real-time\r\n  useEffect(() => {\r\n    if (!db || !userId) {\r\n      console.warn(\"Firestore or User ID not available, skipping message fetch.\");\r\n      return;\r\n    }\r\n\r\n    console.log(`[FIRESTORE] Fetching messages for user: ${userId}`);\r\n    const messagesCollectionPath = `artifacts/${appId}/public/data/messages`;\r\n    const messagesCollectionRef = collection(db, messagesCollectionPath);\r\n    const q = query(messagesCollectionRef);\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      console.log('[FIRESTORE] New message snapshot received.');\r\n      const fetchedMessages = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      const sortedMessages = fetchedMessages.sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\r\n      setMessages(sortedMessages);\r\n      setError(null);\r\n    }, (firestoreError) => {\r\n      console.error(\"[FIRESTORE ERROR] Error fetching messages:\", firestoreError.message);\r\n      setError(`Failed to load messages. Details: ${firestoreError.message}`);\r\n    });\r\n\r\n    return () => {\r\n      console.log('[FIRESTORE] Unsubscribing from messages collection.');\r\n      unsubscribe();\r\n    };\r\n  }, [db, userId, appId]);\r\n\r\n  // Use a separate useEffect to handle AI responses to user messages\r\n  useEffect(() => {\r\n    const lastMessage = messages[messages.length - 1];\r\n    if (db && lastMessage && lastMessage.sender === 'user' && !isAIGenerating) {\r\n      const getAIResponse = async () => {\r\n        setIsAIGenerating(true);\r\n        console.log(\"[AI] User sent a message. Generating AI response...\");\r\n        try {\r\n          const chatHistory = messages.map(msg => ({\r\n            role: msg.sender === 'user' ? 'user' : 'model',\r\n            parts: [{ text: msg.text }]\r\n          }));\r\n\r\n          const prompt = {\r\n            role: \"user\",\r\n            parts: [{ text: lastMessage.text }]\r\n          };\r\n\r\n          const payload = { contents: [...chatHistory, prompt] };\r\n          const apiKey = \"\";\r\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n          const response = await fetch(apiUrl, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(payload)\r\n          });\r\n\r\n          const result = await response.json();\r\n          let responseText = \"Sorry, I couldn't generate a response.\";\r\n          if (result.candidates && result.candidates.length > 0 &&\r\n              result.candidates[0].content && result.candidates[0].content.parts &&\r\n              result.candidates[0].content.parts.length > 0) {\r\n            responseText = result.candidates[0].content.parts[0].text;\r\n            console.log(\"[AI] Generated AI response successfully.\");\r\n          }\r\n\r\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\r\n            text: responseText,\r\n            sender: 'bot',\r\n            timestamp: serverTimestamp(),\r\n            userId: \"bot\"\r\n          });\r\n        } catch (e) {\r\n          console.error(\"[AI ERROR] Error getting AI response:\", e);\r\n          await addDoc(collection(db, `artifacts/${appId}/public/data/messages`), {\r\n            text: `Sorry, I am having trouble processing that request. Error: ${e.message}`,\r\n            sender: 'bot',\r\n            timestamp: serverTimestamp(),\r\n            userId: \"bot\"\r\n          });\r\n        } finally {\r\n          setIsAIGenerating(false);\r\n        }\r\n      };\r\n      getAIResponse();\r\n    }\r\n  }, [messages, db, isAIGenerating, appId]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '' || !db || !userId || isAIGenerating) {\r\n      console.warn(\"[SEND] Message send blocked. Input is empty, DB/userId not ready, or AI is generating.\");\r\n      return;\r\n    }\r\n    try {\r\n      const messagesCollectionPath = `artifacts/${appId}/public/data/messages`;\r\n      console.log(`[SEND] Attempting to send message to path: ${messagesCollectionPath}`);\r\n      const messagesCollectionRef = collection(db, messagesCollectionPath);\r\n      await addDoc(messagesCollectionRef, {\r\n        text: input,\r\n        sender: 'user',\r\n        timestamp: serverTimestamp(),\r\n        userId: userId // Add userId to the message for identification\r\n      });\r\n      setInput('');\r\n      console.log(\"[SEND] Message sent successfully.\");\r\n    } catch (e) {\r\n      console.error(\"[SEND ERROR] Error adding document: \", e);\r\n      setError(`Failed to send message: ${e.message}`);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && input.trim() !== '' && !isAIGenerating) {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl\">\r\n      <style>{dotFlashingCss}</style>\r\n      <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700 rounded-t-2xl\">\r\n        <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">AI Chatbot</h1>\r\n        {userId && (\r\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            User ID: <span className=\"font-mono\">{userId}</span>\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className=\"flex-grow p-4 overflow-y-auto space-y-4\">\r\n        {error ? (\r\n          <div className=\"flex justify-center items-center h-full text-red-500 font-medium text-center p-4\">\r\n            <p>{error}</p>\r\n          </div>\r\n        ) : messages.length === 0 ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <span className=\"text-gray-500 dark:text-gray-400\">Start a new conversation!</span>\r\n          </div>\r\n        ) : (\r\n          messages.map((message, index) => (\r\n            <div key={index} className={`flex items-start gap-3 ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n              {message.sender === 'bot' && (\r\n                <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-indigo-200 dark:bg-indigo-700\">\r\n                  <Bot size={16} className=\"text-indigo-600 dark:text-indigo-200\" />\r\n                </div>\r\n              )}\r\n              <div className={`p-3 rounded-lg max-w-[70%] ${message.sender === 'user' ? 'bg-indigo-500 text-white dark:bg-indigo-600' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white'}`}>\r\n                <p className=\"whitespace-pre-wrap\">{message.text}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        {isAIGenerating && (\r\n          <div className=\"flex items-start gap-3 justify-start\">\r\n            <div className=\"p-3 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white max-w-[70%] flex items-center\">\r\n              <Bot size={16} className=\"inline-block mr-2\" />\r\n              <div className=\"dot-flashing\"></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\r\n        <div className=\"relative flex items-center\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your message...\"\r\n            className=\"flex-grow rounded-full border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 px-4 py-2 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-colors\"\r\n            disabled={isAIGenerating}\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            disabled={isAIGenerating || input.trim() === ''}\r\n            className=\"ml-3 p-2 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:bg-gray-400 transition-colors\"\r\n          >\r\n            <SendHorizonal size={20} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // A robust approach to getting the Firebase config\r\n  let firebaseConfig = {};\r\n  const defaultFirebaseConfig = {\r\n    apiKey: \"YOUR_API_KEY\", // Placeholder, you may need to fill this in if not provided by the env\r\n    authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n    projectId: \"ai-chatbot-88602\",\r\n    storageBucket: \"ai-chatbot-88602.appspot.com\",\r\n    messagingSenderId: \"167580287666\",\r\n    appId: \"1:167580287666:web:YOUR_WEB_APP_ID\"\r\n  };\r\n\r\n  try {\r\n    const providedConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\r\n    if (providedConfig && providedConfig.projectId) {\r\n      firebaseConfig = providedConfig;\r\n    } else {\r\n      console.warn(\"Provided Firebase config is empty or invalid. Using a hardcoded placeholder config.\");\r\n      firebaseConfig = defaultFirebaseConfig;\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Failed to parse firebase config from global variable. Using hardcoded placeholder config.\", e);\r\n    firebaseConfig = defaultFirebaseConfig;\r\n  }\r\n\r\n  const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n  useEffect(() => {\r\n    const initAndAuth = async () => {\r\n      console.log(\"[INIT] Starting Firebase initialization and authentication...\");\r\n      try {\r\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\r\n        const firestoreAuth = getAuth(app);\r\n        const firestoreDb = getFirestore(app);\r\n\r\n        // Set up the auth state listener to get the user ID once authentication is complete\r\n        const unsubscribe = onAuthStateChanged(firestoreAuth, async (user) => {\r\n          if (user) {\r\n            setUserId(user.uid);\r\n            console.log(`[AUTH] User state changed. Authenticated with UID: ${user.uid}`);\r\n            setDb(firestoreDb); // Set the db once the user is authenticated\r\n            setIsLoading(false);\r\n          } else {\r\n            console.log(\"[AUTH] No user is signed in. Attempting to sign in.\");\r\n            // If no user is signed in, attempt to sign in.\r\n            try {\r\n              if (initialAuthToken) {\r\n                await signInWithCustomToken(firestoreAuth, initialAuthToken);\r\n                console.log(\"[AUTH] Successfully signed in with custom token.\");\r\n              } else {\r\n                await signInAnonymously(firestoreAuth);\r\n                console.log(\"[AUTH] Successfully signed in anonymously.\");\r\n              }\r\n            } catch (authError) {\r\n              console.error(\"[AUTH ERROR] Failed to sign in.\", authError);\r\n              setError(`Authentication failed: ${authError.message}`);\r\n              setIsLoading(false);\r\n            }\r\n          }\r\n        });\r\n\r\n        return () => {\r\n          console.log(\"[INIT] Cleaning up auth state listener.\");\r\n          unsubscribe();\r\n        };\r\n\r\n      } catch (e) {\r\n        console.error(\"[INIT ERROR] Failed to initialize Firebase:\", e);\r\n        setError(`Firebase initialization failed: ${e.message}`);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    initAndAuth();\r\n  }, [initialAuthToken]); // Re-run if auth token changes\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen text-gray-500\">\r\n        Loading application...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen text-red-500 p-4 text-center\">\r\n        <p>An error occurred: {error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App bg-gray-100 dark:bg-gray-900 min-h-screen flex items-center justify-center p-4\">\r\n      {/* The AIChatbot component will only render when db and userId are available */}\r\n      {db && userId ? <AIChatbot db={db} userId={userId} appId={__app_id || 'default-app-id'} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}