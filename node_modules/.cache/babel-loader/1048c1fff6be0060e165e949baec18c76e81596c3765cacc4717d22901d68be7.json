{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* global __firebase_config, __app_id, __initial_auth_token, marked */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged, sendSignInLinkToEmail, isSignInWithEmailLink, signInWithEmailLink, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, addDoc, serverTimestamp, doc, setDoc, query, limit, orderBy } from 'firebase/firestore';\nimport { createPortal } from 'react-dom';\nimport { Sparkles, MessageSquareMore, Image, LoaderCircle, X, Menu, Plus, Volume2, Pause, Mic, Settings, CircleStop, User, Bot } from 'lucide-react';\n\n// --- Firebase Configuration ---\n// The global variables are provided by the Canvas environment.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localFirebaseConfig = {\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\n  projectId: \"ai-chatbot-88602\",\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\n  messagingSenderId: \"167580287666\",\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\n  measurementId: \"G-CXKJ8QRLZ1\"\n};\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Utility function for generating unique IDs (like conversation IDs)\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\n// Converts a base64 string to an ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// Converts PCM audio data to a WAV blob\nfunction pcmToWav(pcmData, sampleRate) {\n  const pcm16 = new Int16Array(pcmData);\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\n  const view = new DataView(buffer);\n  const writeString = (view, offset, string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n  let offset = 0;\n  writeString(view, offset, 'RIFF');\n  offset += 4;\n  view.setUint32(offset, 36 + pcm16.length * 2, true);\n  offset += 4;\n  writeString(view, offset, 'WAVE');\n  offset += 4;\n  writeString(view, offset, 'fmt ');\n  offset += 4;\n  view.setUint32(offset, 16, true);\n  offset += 4; // Sub-chunk size\n  view.setUint16(offset, 1, true);\n  offset += 2; // Audio format (1 = PCM)\n  view.setUint16(offset, 1, true);\n  offset += 2; // Number of channels\n  view.setUint32(offset, sampleRate, true);\n  offset += 4; // Sample rate\n  view.setUint32(offset, sampleRate * 2, true);\n  offset += 4; // Byte rate\n  view.setUint16(offset, 2, true);\n  offset += 2; // Block align\n  view.setUint16(offset, 16, true);\n  offset += 2; // Bits per sample\n  writeString(view, offset, 'data');\n  offset += 4;\n  view.setUint32(offset, pcm16.length * 2, true);\n  offset += 4; // Data size\n\n  for (let i = 0; i < pcm16.length; i++) {\n    view.setInt16(offset, pcm16[i], true);\n    offset += 2;\n  }\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\n\n// Exponential backoff utility for API calls\nconst fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      var _errorData$error;\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(`API error: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || response.statusText}`);\n    }\n    return response;\n  } catch (error) {\n    if (retries > 0 && error.message.includes(\"API error\")) {\n      console.warn(`API call failed, retrying in ${delay}ms...`);\n      await new Promise(resolve => setTimeout(resolve, delay));\n      return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\n    }\n    throw error;\n  }\n};\n\n// Main App component\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\n  const [authMode, setAuthMode] = useState('email-link');\n\n  // New states for conversation history and sidebar\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSummarizing, setIsSummarizing] = useState(false);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [currentAudio, setCurrentAudio] = useState(null);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [voiceName, setVoiceName] = useState('Kore');\n  const [showVoiceModal, setShowVoiceModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  // New states for Gemini features\n  const [isRecording, setIsRecording] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [systemInstruction, setSystemInstruction] = useState('');\n  const [generationSettings, setGenerationSettings] = useState({\n    temperature: 0.9,\n    topK: 40,\n    topP: 0.95\n  });\n  const messagesEndRef = useRef(null);\n  const audioRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // 1. Initialize Firebase and set up authentication.\n  useEffect(() => {\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const authInstance = getAuth(firebaseApp);\n      const dbInstance = getFirestore(firebaseApp);\n      setAuth(authInstance);\n      setDb(dbInstance);\n      const unsubscribe = onAuthStateChanged(authInstance, async currentUser => {\n        if (currentUser) {\n          setUser(currentUser);\n          setError(null);\n        } else {\n          if (initialAuthToken) {\n            try {\n              await signInWithCustomToken(authInstance, initialAuthToken);\n            } catch (e) {\n              console.error(\"Custom token sign-in failed:\", e);\n              setError(`Custom token sign-in failed: ${e.message}. Please try refreshing.`);\n            }\n          } else if (!isSigningInWithLink) {\n            try {\n              await signInAnonymously(authInstance);\n            } catch (e) {\n              console.error(\"Anonymous sign-in failed:\", e);\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\n            }\n          }\n        }\n        setIsAuthReady(true);\n        setLoading(false);\n      });\n      return () => unsubscribe();\n    } catch (e) {\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. Handle email link sign-in.\n  useEffect(() => {\n    if (!auth || !isAuthReady) return;\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n      setIsSigningInWithLink(true);\n      setLoading(true);\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\n      if (!storedEmail) {\n        // Use a custom modal instead of prompt, since it's not supported\n        const modalDiv = document.createElement('div');\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\n        modalDiv.innerHTML = `\n          <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\n          </div>\n        `;\n        document.body.appendChild(modalDiv);\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\n        emailConfirmButton.onclick = () => {\n          storedEmail = emailConfirmInput.value;\n          if (storedEmail) {\n            document.body.removeChild(modalDiv);\n            continueSignIn(storedEmail);\n          } else {\n            console.error(\"Email not provided.\");\n          }\n        };\n        return; // Exit the effect to wait for user input\n      }\n      const continueSignIn = emailToUse => {\n        signInWithEmailLink(auth, emailToUse, window.location.href).then(result => {\n          window.localStorage.removeItem('emailForSignIn');\n          setIsSigningInWithLink(false);\n          setLoading(false);\n          setError(null);\n          window.history.replaceState({}, document.title, window.location.pathname);\n        }).catch(error => {\n          setError(`Error completing sign-in: ${error.message}`);\n          setIsSigningInWithLink(false);\n          setLoading(false);\n          window.history.replaceState({}, document.title, window.location.pathname);\n        });\n      };\n      continueSignIn(storedEmail);\n    }\n  }, [auth, isAuthReady]);\n\n  // 3. Fetch conversations for the current user.\n  useEffect(() => {\n    if (!db || !user || !isAuthReady) return;\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n    const q = query(conversationsCollectionRef, orderBy('lastUpdated', 'desc'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const fetchedConversations = [];\n      querySnapshot.forEach(doc => {\n        fetchedConversations.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setConversations(fetchedConversations);\n      if (fetchedConversations.length > 0 && !currentConversationId) {\n        setCurrentConversationId(fetchedConversations[0].id);\n      }\n      if (fetchedConversations.length === 0) {\n        setCurrentConversationId(null);\n      }\n    }, firestoreError => {\n      setError(`Failed to load conversations: ${firestoreError.message}`);\n      console.error(\"Firestore conversations error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, isAuthReady, appId, currentConversationId]);\n\n  // 4. Fetch messages for the current conversation.\n  useEffect(() => {\n    if (!db || !user || !currentConversationId) {\n      setMessages([]);\n      return;\n    }\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\n    const q = query(messagesCollectionRef, orderBy('timestamp', 'asc'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const fetchedMessages = [];\n      querySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(fetchedMessages);\n    }, firestoreError => {\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\n      console.error(\"Firestore messages error:\", firestoreError);\n    });\n    return () => unsubscribe();\n  }, [db, user, currentConversationId, appId]);\n\n  // 5. Start a new conversation.\n  const startNewChat = () => {\n    setCurrentConversationId(null);\n    setMessages([]);\n    setNewMessage('');\n    setSelectedImage(null);\n    setError(null);\n    setIsAIGenerating(false);\n    setIsSummarizing(false);\n    setIsGeneratingImage(false);\n    setIsSidebarOpen(false);\n  };\n\n  // 6. Handle sending a new message (and creating a new conversation if needed).\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() && !selectedImage || !user || !db || isAIGenerating || isSpeaking || isRecording) return;\n    let conversationIdToUse = currentConversationId;\n    const userMessageText = newMessage;\n    const imageToSend = selectedImage;\n    setNewMessage('');\n    setSelectedImage(null);\n\n    // If no conversation is active, create a new one.\n    if (!conversationIdToUse) {\n      const newConvId = generateId();\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\n      const initialTitle = userMessageText ? userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '') : 'New chat with image';\n      try {\n        await setDoc(newConversationDocRef, {\n          title: initialTitle,\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        conversationIdToUse = newConvId;\n        setCurrentConversationId(newConvId);\n      } catch (createError) {\n        setError(`Failed to create new conversation: ${createError.message}`);\n        return;\n      }\n    } else {\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\n      try {\n        await setDoc(conversationDocRef, {\n          lastUpdated: serverTimestamp()\n        }, {\n          merge: true\n        });\n      } catch (updateError) {\n        console.error(\"Error updating conversation timestamp:\", updateError);\n      }\n    }\n\n    // Add user message to Firestore\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: userMessageText,\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message',\n        imageData: imageToSend\n      });\n    } catch (e) {\n      setError(`Failed to send message: ${e.message}`);\n      return;\n    }\n    const command = userMessageText.toLowerCase().trim();\n    if (imageToSend) {\n      handleImageAnalysis(userMessageText, imageToSend, conversationIdToUse);\n    } else if (command === 'summarize') {\n      handleSummarizeChat(conversationIdToUse);\n    } else if (command.startsWith('image of')) {\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\n      handleGenerateImage(imagePrompt, conversationIdToUse);\n    } else {\n      handleAIResponse(userMessageText, conversationIdToUse);\n    }\n  };\n\n  // 7. Handle sending the sign-in email link.\n  const handleSendSignInLink = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim()) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const actionCodeSettings = {\n      url: window.location.origin,\n      handleCodeInApp: true\n    };\n    try {\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\n      setEmailSent(true);\n      window.localStorage.setItem('emailForSignIn', email);\n      setLoading(false);\n    } catch (error) {\n      setError(`Failed to send sign-in link: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 8. Handle Email/Password Registration\n  const handleEmailPasswordSignUp = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Registration failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 9. Handle Email/Password Login\n  const handleEmailPasswordLogin = async e => {\n    e.preventDefault();\n    if (!auth || !email.trim() || !password.trim()) {\n      setError(\"Please enter a valid email and password.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail('');\n      setPassword('');\n      setLoading(false);\n    } catch (error) {\n      setError(`Login failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  // 10. Handle Logout\n  const handleLogout = async () => {\n    if (!auth) return;\n    try {\n      await signOut(auth);\n      setUser(null);\n      setMessages([]);\n      setConversations([]);\n      setCurrentConversationId(null);\n      setEmailSent(false);\n      setIsSigningInWithLink(false);\n      setAuthMode('email-link');\n      setError(null);\n    } catch (error) {\n      setError(`Logout failed: ${error.message}`);\n    }\n  };\n\n  // 11. Handle AI Response generation\n  const handleAIResponse = async (userMessageText, conversationId, additionalContent = []) => {\n    if (!conversationId || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsAIGenerating(true);\n    setError(null);\n    let aiMessageDocRef = null;\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n      aiMessageDocRef = await addDoc(messagesCollectionRef, {\n        text: '...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n      const chatHistory = messages.filter(msg => (msg.type === 'user-message' || msg.type === 'ai-response') && msg.text !== '...').map(msg => ({\n        role: msg.userId === user.uid ? 'user' : 'model',\n        parts: [{\n          text: msg.text\n        }]\n      }));\n      const parts = [{\n        text: userMessageText\n      }];\n      if (additionalContent.length > 0) {\n        parts.push(...additionalContent);\n      }\n      chatHistory.push({\n        role: 'user',\n        parts\n      });\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      if (systemInstruction) {\n        payload.systemInstruction = {\n          parts: [{\n            text: systemInstruction\n          }]\n        };\n      }\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a response.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await setDoc(doc(messagesCollectionRef, aiMessageDocRef.id), {\n        text: responseText,\n        timestamp: serverTimestamp()\n      }, {\n        merge: true\n      });\n    } catch (e) {\n      console.error(\"Error generating AI response:\", e);\n      setError(`AI response error: ${e.message}`);\n      if (aiMessageDocRef) {\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages', aiMessageDocRef.id), {\n          text: `I apologize, an error occurred: ${e.message}`,\n          timestamp: serverTimestamp()\n        }, {\n          merge: true\n        });\n      }\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // 12. Handle summarization of the current chat using the Gemini API\n  const handleSummarizeChat = async conversationId => {\n    if (!conversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsSummarizing(true);\n    setError(null);\n    try {\n      const chatHistoryText = messages.filter(msg => (msg.type === 'user-message' || msg.type === 'ai-response') && msg.text !== '...').map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`).join('\\n');\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\n      const chatHistory = [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }];\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      if (systemInstruction) {\n        payload.systemInstruction = {\n          parts: [{\n            text: systemInstruction\n          }]\n        };\n      }\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't generate a summary.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n      await addDoc(messagesCollectionRef, {\n        text: `**Chat Summary:**\\n\\n${responseText}`,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n    } catch (error) {\n      console.error(\"Error summarizing chat:\", error);\n      setError(`Summarization error: ${error.message}`);\n    } finally {\n      setIsSummarizing(false);\n    }\n  };\n\n  // 13. Handle image generation using the Gemini API\n  const handleGenerateImage = async (imagePrompt, conversationId) => {\n    if (!conversationId || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsGeneratingImage(true);\n    setError(null);\n    let tempImageMessageRef = null;\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n      tempImageMessageRef = doc(messagesCollectionRef);\n      await setDoc(tempImageMessageRef, {\n        text: `Generating an image for: \"${imagePrompt}\"...`,\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response',\n        imageUrl: ''\n      });\n      const payload = {\n        instances: {\n          prompt: imagePrompt\n        },\n        parameters: {\n          \"sampleCount\": 1\n        }\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n        await setDoc(tempImageMessageRef, {\n          text: `Here is the image you requested for \"${imagePrompt}.\"`,\n          userId: 'bot',\n          userName: 'AI Chatbot',\n          timestamp: serverTimestamp(),\n          type: 'ai-response',\n          imageUrl: imageUrl\n        });\n      } else {\n        throw new Error('Unexpected API response structure or no image data.');\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      if (tempImageMessageRef) {\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages', tempImageMessageRef.id), {\n          text: `I couldn't generate the image. Please try again with a different prompt. Error: ${error.message}`,\n          userId: 'bot',\n          userName: 'AI Chatbot',\n          timestamp: serverTimestamp(),\n          type: 'ai-response',\n          imageUrl: ''\n        }, {\n          merge: true\n        });\n      }\n      setError(`Image generation error: ${error.message}`);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // 14. Handle text-to-speech\n  const handleTTS = async (text, msgId, speakerName = 'User') => {\n    if (isSpeaking) {\n      stopAudio();\n      if (currentAudio === msgId) {\n        return;\n      }\n    }\n    setCurrentAudio(msgId);\n    setIsSpeaking(true);\n    setError(null);\n    try {\n      var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _part$inlineData, _part$inlineData2;\n      const payload = {\n        contents: [{\n          parts: [{\n            text: `Say in a natural tone: ${text}`\n          }]\n        }],\n        generationConfig: {\n          responseModalities: [\"AUDIO\"],\n          speechConfig: {\n            voiceConfig: {\n              prebuiltVoiceConfig: {\n                voiceName: voiceName\n              }\n            }\n          }\n        },\n        model: \"gemini-2.5-flash-preview-tts\"\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      const part = result === null || result === void 0 ? void 0 : (_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : _result$candidates$$c2[0];\n      const audioData = part === null || part === void 0 ? void 0 : (_part$inlineData = part.inlineData) === null || _part$inlineData === void 0 ? void 0 : _part$inlineData.data;\n      const mimeType = part === null || part === void 0 ? void 0 : (_part$inlineData2 = part.inlineData) === null || _part$inlineData2 === void 0 ? void 0 : _part$inlineData2.mimeType;\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\n        const sampleRateMatch = mimeType.match(/rate=(\\d+)/);\n        const sampleRate = sampleRateMatch ? parseInt(sampleRateMatch[1], 10) : 16000;\n        const pcmData = base64ToArrayBuffer(audioData);\n        const wavBlob = pcmToWav(new Int16Array(pcmData), sampleRate);\n        const audioUrl = URL.createObjectURL(wavBlob);\n        audioRef.current = new Audio(audioUrl);\n        audioRef.current.play();\n        audioRef.current.onended = () => {\n          setIsSpeaking(false);\n          setCurrentAudio(null);\n        };\n      } else {\n        throw new Error('Unexpected TTS API response structure.');\n      }\n    } catch (error) {\n      console.error(\"Error generating TTS:\", error);\n      setError(`Text-to-speech error: ${error.message}`);\n      setIsSpeaking(false);\n      setCurrentAudio(null);\n    }\n  };\n\n  // 15. Stop current audio playback\n  const stopAudio = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current = null;\n    }\n    setIsSpeaking(false);\n    setCurrentAudio(null);\n  };\n\n  // 16. Start audio recording from the microphone\n  const handleStartRecording = async () => {\n    if (isRecording) return;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream, {\n        mimeType: 'audio/webm'\n      });\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/webm'\n        });\n        handleProcessVoice(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error starting media recorder:\", error);\n      setError(`Failed to start recording: ${error.message}. Please check your microphone permissions.`);\n    }\n  };\n\n  // 17. Stop audio recording\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n\n  // 18. Process the recorded voice blob\n  const handleProcessVoice = async audioBlob => {\n    if (!audioBlob || !user || !db || isAIGenerating) return;\n    setIsAIGenerating(true);\n    setError(null);\n    const conversationIdToUse = currentConversationId || generateId();\n    if (!currentConversationId) {\n      // If no conversation exists, create a placeholder conversation\n      try {\n        const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\n        const newConversationDocRef = doc(conversationsCollectionRef, conversationIdToUse);\n        await setDoc(newConversationDocRef, {\n          title: 'Voice Chat',\n          createdAt: serverTimestamp(),\n          lastUpdated: serverTimestamp()\n        });\n        setCurrentConversationId(conversationIdToUse);\n      } catch (e) {\n        setError(`Failed to create conversation for voice input: ${e.message}`);\n        setIsAIGenerating(false);\n        return;\n      }\n    }\n    try {\n      var _transcriptionResult$, _transcriptionResult$2, _transcriptionResult$3, _transcriptionResult$4, _transcriptionResult$5;\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\n      const userMessageDocRef = await addDoc(messagesCollectionRef, {\n        text: '...',\n        userId: user.uid,\n        userName: `User_${user.uid.substring(0, 5)}`,\n        timestamp: serverTimestamp(),\n        type: 'user-message'\n      });\n      const audioBase64 = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result.split(',')[1]);\n        reader.onerror = reject;\n        reader.readAsDataURL(audioBlob);\n      });\n      const transcriptionPayload = {\n        contents: [{\n          role: 'user',\n          parts: [{\n            inlineData: {\n              mimeType: 'audio/webm',\n              data: audioBase64\n            }\n          }, {\n            text: 'transcribe the given audio'\n          }]\n        }]\n      };\n      const apiKey = \"\";\n      const transcriptionApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const transcriptionResponse = await fetchWithExponentialBackoff(transcriptionApiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transcriptionPayload)\n      });\n      const transcriptionResult = await transcriptionResponse.json();\n      const transcribedText = (transcriptionResult === null || transcriptionResult === void 0 ? void 0 : (_transcriptionResult$ = transcriptionResult.candidates) === null || _transcriptionResult$ === void 0 ? void 0 : (_transcriptionResult$2 = _transcriptionResult$[0]) === null || _transcriptionResult$2 === void 0 ? void 0 : (_transcriptionResult$3 = _transcriptionResult$2.content) === null || _transcriptionResult$3 === void 0 ? void 0 : (_transcriptionResult$4 = _transcriptionResult$3.parts) === null || _transcriptionResult$4 === void 0 ? void 0 : (_transcriptionResult$5 = _transcriptionResult$4[0]) === null || _transcriptionResult$5 === void 0 ? void 0 : _transcriptionResult$5.text) || 'Could not transcribe audio.';\n      await setDoc(doc(messagesCollectionRef, userMessageDocRef.id), {\n        text: transcribedText,\n        timestamp: serverTimestamp()\n      }, {\n        merge: true\n      });\n      await handleAIResponse(transcribedText, conversationIdToUse);\n    } catch (error) {\n      console.error(\"Error processing voice input:\", error);\n      setError(`Voice processing failed: ${error.message}`);\n      setIsAIGenerating(false);\n    }\n  };\n\n  // 19. Handle image analysis\n  const handleImageAnalysis = async (userMessage, base64ImageData, conversationId) => {\n    if (!conversationId || !base64ImageData || isAIGenerating || isSummarizing || isGeneratingImage) return;\n    setIsAIGenerating(true);\n    setError(null);\n    let aiMessageDocRef = null;\n    try {\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\n      aiMessageDocRef = await addDoc(messagesCollectionRef, {\n        text: '...',\n        userId: 'bot',\n        userName: 'AI Chatbot',\n        timestamp: serverTimestamp(),\n        type: 'ai-response'\n      });\n      const parts = [{\n        text: userMessage\n      }, {\n        inlineData: {\n          mimeType: \"image/png\",\n          data: base64ImageData.split(',')[1]\n        }\n      }];\n      const chatHistory = [{\n        role: \"user\",\n        parts\n      }];\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          temperature: generationSettings.temperature,\n          topK: generationSettings.topK,\n          topP: generationSettings.topP\n        }\n      };\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n      const response = await fetchWithExponentialBackoff(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      let responseText = \"Sorry, I couldn't analyze the image.\";\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        responseText = result.candidates[0].content.parts[0].text;\n      }\n      await setDoc(doc(messagesCollectionRef, aiMessageDocRef.id), {\n        text: responseText,\n        timestamp: serverTimestamp()\n      }, {\n        merge: true\n      });\n    } catch (e) {\n      console.error(\"Error analyzing image:\", e);\n      setError(`Image analysis error: ${e.message}`);\n      if (aiMessageDocRef) {\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages', aiMessageDocRef.id), {\n          text: `I apologize, an error occurred during image analysis: ${e.message}`,\n          timestamp: serverTimestamp()\n        }, {\n          merge: true\n        });\n      }\n    } finally {\n      setIsAIGenerating(false);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const getVoiceDisplayName = voiceName => {\n    const voices = {\n      'Kore': 'Kore (Firm)',\n      'Puck': 'Puck (Upbeat)',\n      'Zephyr': 'Zephyr (Bright)',\n      'Charon': 'Charon (Informative)',\n      'Fenrir': 'Fenrir (Excitable)',\n      'Leda': 'Leda (Youthful)',\n      'Orus': 'Orus (Firm)',\n      'Aoede': 'Aoede (Breezy)',\n      'Callirrhoe': 'Callirrhoe (Easy-going)',\n      'Autonoe': 'Autonoe (Bright)',\n      'Enceladus': 'Enceladus (Breathy)',\n      'Iapetus': 'Iapetus (Clear)',\n      'Umbriel': 'Umbriel (Easy-going)',\n      'Algieba': 'Algieba (Smooth)',\n      'Despina': 'Despina (Smooth)',\n      'Erinome': 'Erinome (Clear)',\n      'Algenib': 'Algenib (Gravelly)',\n      'Rasalgethi': 'Rasalgethi (Informative)',\n      'Laomedeia': 'Laomedeia (Upbeat)',\n      'Achernar': 'Achernar (Soft)',\n      'Alnilam': 'Alnilam (Firm)',\n      'Schedar': 'Schedar (Even)',\n      'Gacrux': 'Gacrux (Mature)',\n      'Pulcherrima': 'Pulcherrima (Forward)',\n      'Achird': 'Achird (Friendly)',\n      'Zubenelgenubi': 'Zubenelgenubi (Casual)',\n      'Vindemiatrix': 'Vindemiatrix (Gentle)',\n      'Sadachbia': 'Sadachbia (Lively)',\n      'Sadaltager': 'Sadaltager (Knowledgeable)',\n      'Sulafat': 'Sulafat (Warm)'\n    };\n    return voices[voiceName] || voiceName;\n  };\n  const voiceOptions = ['Kore', 'Puck', 'Zephyr', 'Charon', 'Fenrir', 'Leda', 'Orus', 'Aoede', 'Callirrhoe', 'Autonoe', 'Enceladus', 'Iapetus', 'Umbriel', 'Algieba', 'Despina', 'Erinome', 'Algenib', 'Rasalgethi', 'Laomedeia', 'Achernar', 'Alnilam', 'Schedar', 'Gacrux', 'Pulcherrima', 'Achird', 'Zubenelgenubi', 'Vindemiatrix', 'Sadachbia', 'Sadaltager', 'Sulafat'];\n  const VoiceSettingsModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 h-full w-full flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow-2xl w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-gray-800\",\n          children: \"Choose a Voice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowVoiceModal(false),\n          className: \"text-gray-500 hover:text-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 106\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 gap-3 max-h-96 overflow-y-auto pr-2\",\n        children: voiceOptions.map(v => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setVoiceName(v);\n            setShowVoiceModal(false);\n          },\n          className: `py-2 px-4 rounded-xl text-sm font-medium transition-all ${voiceName === v ? 'bg-indigo-600 text-white shadow-md' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n          children: getVoiceDisplayName(v)\n        }, v, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 991,\n    columnNumber: 5\n  }, this);\n  const SettingsModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 h-full w-full flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow-2xl w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-gray-800\",\n          children: \"Generation Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSettingsModal(false),\n          className: \"text-gray-500 hover:text-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 109\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"systemInstruction\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"System Instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"systemInstruction\",\n            rows: \"4\",\n            className: \"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\",\n            placeholder: \"e.g., 'You are a helpful assistant that always responds in markdown format.' \",\n            value: systemInstruction,\n            onChange: e => setSystemInstruction(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"temperature\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: [\"Temperature: \", generationSettings.temperature.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"temperature\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.05\",\n            value: generationSettings.temperature,\n            onChange: e => setGenerationSettings({\n              ...generationSettings,\n              temperature: parseFloat(e.target.value)\n            }),\n            className: \"w-full h-2 bg-gray-200 rounded-lg cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"topK\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: [\"Top-K: \", generationSettings.topK]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"topK\",\n            min: \"1\",\n            max: \"100\",\n            step: \"1\",\n            value: generationSettings.topK,\n            onChange: e => setGenerationSettings({\n              ...generationSettings,\n              topK: parseInt(e.target.value, 10)\n            }),\n            className: \"w-full h-2 bg-gray-200 rounded-lg cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"topP\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: [\"Top-P: \", generationSettings.topP.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"topP\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.05\",\n            value: generationSettings.topP,\n            onChange: e => setGenerationSettings({\n              ...generationSettings,\n              topP: parseFloat(e.target.value)\n            }),\n            className: \"w-full h-2 bg-gray-200 rounded-lg cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1015,\n    columnNumber: 5\n  }, this);\n  const renderMessageContent = message => {\n    if (message.imageData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-start gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium text-gray-900\",\n          children: \"User sent an image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.imageData,\n          alt: \"Uploaded content\",\n          className: \"rounded-lg shadow-md max-h-48 object-contain\",\n          onError: e => {\n            e.target.src = \"https://placehold.co/400x300/e2e8f0/64748b?text=Image+Error\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 9\n      }, this);\n    }\n    if (message.imageUrl) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-start gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-900 font-medium\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.imageUrl,\n          alt: \"Generated content\",\n          className: \"rounded-lg shadow-md max-h-96 object-contain\",\n          onError: e => {\n            e.target.src = \"https://placehold.co/400x300/e2e8f0/64748b?text=Image+Error\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 9\n      }, this);\n    }\n    if (message.text === '...') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 text-gray-500 italic\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot-flashing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: marked(message.text || '')\n      },\n      className: \"prose prose-sm max-w-none text-gray-900\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Main UI render\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100 text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(LoaderCircle, {\n        className: \"animate-spin mr-2\",\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen bg-red-50 p-4 text-red-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-lg mb-2\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    // Auth UI\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center p-4\",\n      children: emailSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-2xl shadow-xl w-full max-w-md text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-4\",\n          children: \"Check your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: [\"A sign-in link has been sent to \", email, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEmailSent(false),\n          className: \"w-full bg-indigo-500 text-white p-3 rounded-xl shadow-md hover:bg-indigo-600\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-2xl shadow-xl w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-800\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 15\n          }, this), authMode !== 'email-link' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAuthMode('email-link'),\n            className: \"text-indigo-500 hover:text-indigo-700 font-medium\",\n            children: \"Use Sign-in Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 13\n        }, this), authMode === 'email-link' ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendSignInLink,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 text-center\",\n            children: \"Enter your email to receive a magic sign-in link.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600\",\n            children: \"Send Sign-in Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setAuthMode('email-password'),\n            className: \"w-full mt-4 text-indigo-500 hover:text-indigo-700 font-medium\",\n            children: \"Use Email & Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 text-center\",\n            children: \"Use email and password to create an account or sign in.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEmailPasswordLogin,\n            className: \"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEmailPasswordSignUp,\n            className: \"w-full mt-2 bg-gray-200 text-gray-800 p-3 rounded-lg shadow-md hover:bg-gray-300\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Chat UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex h-screen bg-gray-100 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed inset-y-0 left-0 bg-white shadow-xl transition-all duration-300 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} lg:relative lg:translate-x-0 w-64 flex flex-col z-40`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-shrink-0 p-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-lg font-bold text-gray-800\",\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewChat,\n            className: \"p-2 bg-indigo-500 text-white rounded-full shadow-md hover:bg-indigo-600\",\n            title: \"Start a new chat\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-y-auto p-2 space-y-2\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCurrentConversationId(conv.id);\n            setIsSidebarOpen(false);\n          },\n          className: `block w-full text-left p-3 rounded-xl transition-all ${currentConversationId === conv.id ? 'bg-indigo-100 text-indigo-800 font-semibold' : 'bg-gray-50 hover:bg-gray-200 text-gray-700'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm truncate\",\n            children: conv.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 15\n          }, this)\n        }, conv.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-shrink-0 p-4 border-t border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between text-sm text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: \"User ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-mono text-xs overflow-hidden text-ellipsis\",\n              children: user.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"text-red-500 hover:text-red-700 font-medium\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:hidden flex justify-between items-center p-4 bg-white shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"text-gray-600 hover:text-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold text-lg text-gray-800 truncate\",\n          children: ((_conversations$find = conversations.find(c => c.id === currentConversationId)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title) || 'New Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-6 lg:p-8 custom-scrollbar\",\n        children: [!currentConversationId && messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center h-full text-center text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            size: 48,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"Start a new conversation with Gemini\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm max-w-xs mt-2\",\n            children: \"Type a message, ask a question, upload an image, or use your voice to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 13\n        }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-start gap-4 ${msg.userId === user.uid ? 'justify-end' : 'justify-start'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0\",\n            children: msg.userId === user.uid ? /*#__PURE__*/_jsxDEV(User, {\n              size: 24,\n              className: \"text-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 24,\n              className: \"text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[75%] rounded-xl p-4 shadow-md ${msg.userId === user.uid ? 'bg-indigo-500 text-white rounded-tr-none' : 'bg-white text-gray-800 rounded-tl-none'}`,\n            children: [renderMessageContent(msg), msg.text && msg.text !== '...' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mt-2 space-x-2\",\n              children: isSpeaking && currentAudio === msg.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: stopAudio,\n                className: \"text-white hover:text-gray-200\",\n                title: \"Stop Audio\",\n                children: /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1302,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1301,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleTTS(msg.text, msg.id),\n                className: \"text-white hover:text-gray-200\",\n                title: \"Play Audio\",\n                children: /*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1306,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1305,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 15\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"flex-shrink-0 p-4 border-t border-gray-200 bg-white\",\n        children: [selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative mb-4 p-2 bg-gray-100 rounded-lg shadow-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedImage,\n            alt: \"Preview\",\n            className: \"max-h-40 object-contain rounded-lg mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedImage(null),\n            className: \"absolute top-0 right-0 m-2 text-white bg-red-500 rounded-full p-1 shadow-md hover:bg-red-600\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1326,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => document.getElementById('image-upload').click(),\n            className: \"p-3 text-gray-600 hover:text-indigo-500 disabled:opacity-50\",\n            title: \"Upload Image\",\n            disabled: isAIGenerating || isRecording || !user || !currentConversationId,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image-upload\",\n            type: \"file\",\n            accept: \"image/*\",\n            className: \"hidden\",\n            onChange: handleImageUpload,\n            disabled: isAIGenerating || isRecording\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: isRecording ? \"Listening...\" : \"Message Gemini...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            className: \"flex-1 p-3 border border-gray-300 rounded-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 disabled:bg-gray-100\",\n            disabled: isAIGenerating || isRecording\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 13\n          }, this), isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleStopRecording,\n            className: \"p-3 bg-red-500 text-white rounded-full shadow-lg hover:bg-red-600\",\n            title: \"Stop Recording\",\n            children: /*#__PURE__*/_jsxDEV(CircleStop, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1348,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleStartRecording,\n            className: \"p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 disabled:opacity-50\",\n            title: \"Start Voice Input\",\n            disabled: isAIGenerating || !user || !currentConversationId,\n            children: /*#__PURE__*/_jsxDEV(Mic, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 disabled:opacity-50\",\n            title: \"Send Message\",\n            disabled: !newMessage.trim() && !selectedImage || isAIGenerating || isRecording || !user,\n            children: /*#__PURE__*/_jsxDEV(MessageSquareMore, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowSettingsModal(true),\n            className: \"p-3 text-gray-600 hover:text-indigo-500\",\n            title: \"Generation Settings\",\n            children: /*#__PURE__*/_jsxDEV(Settings, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 7\n    }, this), showVoiceModal && /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(VoiceSettingsModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 39\n    }, this), document.body), showSettingsModal && /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(SettingsModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 42\n    }, this), document.body), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #f1f5f9; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background-color: #cbd5e1; border-radius: 4px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background-color: #94a3b8; }\n        \n        .dot-flashing {\n          position: relative; width: 5px; height: 5px; border-radius: 5px;\n          background-color: #a3a3a3; animation: dotFlashing 1s infinite linear alternate; animation-delay: 0.5s;\n        }\n        .dot-flashing::before, .dot-flashing::after {\n          content: ''; display: inline-block; position: absolute; top: 0;\n          width: 5px; height: 5px; border-radius: 5px; background-color: #a3a3a3;\n          animation: dotFlashing 1s infinite alternate;\n        }\n        .dot-flashing::before { left: -10px; animation-delay: 0s; }\n        .dot-flashing::after { left: 10px; animation-delay: 1s; }\n\n        @keyframes dotFlashing {\n          0% { background-color: #a3a3a3; }\n          50%, 100% { background-color: #e5e5e5; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1203,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0DYu5zN6sT76y3Yssgb2Rp0MsyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","initializeApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","onSnapshot","addDoc","serverTimestamp","doc","setDoc","query","limit","orderBy","createPortal","Sparkles","MessageSquareMore","Image","LoaderCircle","X","Menu","Plus","Volume2","Pause","Mic","Settings","CircleStop","User","Bot","jsxDEV","_jsxDEV","localFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","generateId","replace","c","r","Math","random","v","toString","base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","pcmToWav","pcmData","sampleRate","pcm16","Int16Array","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","setUint32","setUint16","setInt16","Blob","type","fetchWithExponentialBackoff","url","options","retries","delay","response","fetch","ok","_errorData$error","errorData","json","catch","Error","error","message","statusText","includes","console","warn","Promise","resolve","setTimeout","App","_s","_conversations$find","db","setDb","auth","setAuth","isAuthReady","setIsAuthReady","user","setUser","loading","setLoading","setError","messages","setMessages","newMessage","setNewMessage","email","setEmail","password","setPassword","emailSent","setEmailSent","isSigningInWithLink","setIsSigningInWithLink","isAIGenerating","setIsAIGenerating","authMode","setAuthMode","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","isSummarizing","setIsSummarizing","isGeneratingImage","setIsGeneratingImage","currentAudio","setCurrentAudio","isSpeaking","setIsSpeaking","voiceName","setVoiceName","showVoiceModal","setShowVoiceModal","selectedImage","setSelectedImage","isRecording","setIsRecording","showSettingsModal","setShowSettingsModal","systemInstruction","setSystemInstruction","generationSettings","setGenerationSettings","temperature","topK","topP","messagesEndRef","audioRef","mediaRecorderRef","audioChunksRef","_messagesEndRef$curre","current","scrollIntoView","behavior","Object","keys","firebaseApp","authInstance","dbInstance","unsubscribe","currentUser","e","location","href","storedEmail","localStorage","getItem","modalDiv","document","createElement","className","innerHTML","body","appendChild","emailConfirmInput","querySelector","emailConfirmButton","onclick","value","removeChild","continueSignIn","emailToUse","then","result","removeItem","history","replaceState","title","pathname","conversationsCollectionRef","uid","q","querySnapshot","fetchedConversations","forEach","push","id","data","firestoreError","messagesCollectionRef","fetchedMessages","startNewChat","handleSendMessage","preventDefault","trim","conversationIdToUse","userMessageText","imageToSend","newConvId","newConversationDocRef","initialTitle","substring","createdAt","lastUpdated","createError","conversationDocRef","merge","updateError","text","userId","userName","timestamp","imageData","command","toLowerCase","handleImageAnalysis","handleSummarizeChat","startsWith","imagePrompt","handleGenerateImage","handleAIResponse","handleSendSignInLink","actionCodeSettings","origin","handleCodeInApp","setItem","handleEmailPasswordSignUp","handleEmailPasswordLogin","handleLogout","conversationId","additionalContent","aiMessageDocRef","chatHistory","filter","msg","map","role","parts","payload","contents","generationConfig","apiUrl","method","headers","stringify","responseText","candidates","content","chatHistoryText","join","prompt","tempImageMessageRef","imageUrl","instances","parameters","predictions","bytesBase64Encoded","handleTTS","msgId","speakerName","stopAudio","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_part$inlineData","_part$inlineData2","responseModalities","speechConfig","voiceConfig","prebuiltVoiceConfig","model","part","audioData","inlineData","mimeType","sampleRateMatch","match","parseInt","wavBlob","audioUrl","URL","createObjectURL","Audio","play","onended","pause","currentTime","handleStartRecording","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","event","onstop","audioBlob","handleProcessVoice","start","handleStopRecording","state","stop","getTracks","track","_transcriptionResult$","_transcriptionResult$2","_transcriptionResult$3","_transcriptionResult$4","_transcriptionResult$5","userMessageDocRef","audioBase64","reject","reader","FileReader","onloadend","split","onerror","readAsDataURL","transcriptionPayload","transcriptionApiUrl","transcriptionResponse","transcriptionResult","transcribedText","userMessage","base64ImageData","handleImageUpload","file","target","files","getVoiceDisplayName","voices","voiceOptions","VoiceSettingsModal","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","SettingsModal","htmlFor","rows","placeholder","onChange","toFixed","min","max","step","parseFloat","renderMessageContent","src","alt","onError","dangerouslySetInnerHTML","__html","marked","onSubmit","required","conv","find","ref","getElementById","click","disabled","accept","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["/* global __firebase_config, __app_id, __initial_auth_token, marked */\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInWithCustomToken,\r\n  signInAnonymously,\r\n  onAuthStateChanged,\r\n  sendSignInLinkToEmail,\r\n  isSignInWithEmailLink,\r\n  signInWithEmailLink,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  onSnapshot,\r\n  addDoc,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n  query,\r\n  limit,\r\n  orderBy\r\n} from 'firebase/firestore';\r\nimport { createPortal } from 'react-dom';\r\nimport {\r\n  Sparkles,\r\n  MessageSquareMore,\r\n  Image,\r\n  LoaderCircle,\r\n  X,\r\n  Menu,\r\n  Plus,\r\n  Volume2,\r\n  Pause,\r\n  Mic,\r\n  Settings,\r\n  CircleStop,\r\n  User,\r\n  Bot\r\n} from 'lucide-react';\r\n\r\n// --- Firebase Configuration ---\r\n// The global variables are provided by the Canvas environment.\r\nconst localFirebaseConfig = {\r\n  apiKey: \"AIzaSyDhJoNaFf0qgl4VTuUXj16ysJG1hycq-p8\",\r\n  authDomain: \"ai-chatbot-88602.firebaseapp.com\",\r\n  projectId: \"ai-chatbot-88602\",\r\n  storageBucket: \"ai-chatbot-88602.firebasestorage.app\",\r\n  messagingSenderId: \"167580287666\",\r\n  appId: \"1:167580287666:web:9e8313ae6e667e47d47fab\",\r\n  measurementId: \"G-CXKJ8QRLZ1\"\r\n};\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : localFirebaseConfig;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Utility function for generating unique IDs (like conversation IDs)\r\nconst generateId = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\n// Converts a base64 string to an ArrayBuffer\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = window.atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// Converts PCM audio data to a WAV blob\r\nfunction pcmToWav(pcmData, sampleRate) {\r\n  const pcm16 = new Int16Array(pcmData);\r\n  const buffer = new ArrayBuffer(44 + pcm16.length * 2);\r\n  const view = new DataView(buffer);\r\n  const writeString = (view, offset, string) => {\r\n      for (let i = 0; i < string.length; i++) {\r\n          view.setUint8(offset + i, string.charCodeAt(i));\r\n      }\r\n  };\r\n\r\n  let offset = 0;\r\n  writeString(view, offset, 'RIFF'); offset += 4;\r\n  view.setUint32(offset, 36 + pcm16.length * 2, true); offset += 4;\r\n  writeString(view, offset, 'WAVE'); offset += 4;\r\n  writeString(view, offset, 'fmt '); offset += 4;\r\n  view.setUint32(offset, 16, true); offset += 4; // Sub-chunk size\r\n  view.setUint16(offset, 1, true); offset += 2; // Audio format (1 = PCM)\r\n  view.setUint16(offset, 1, true); offset += 2; // Number of channels\r\n  view.setUint32(offset, sampleRate, true); offset += 4; // Sample rate\r\n  view.setUint32(offset, sampleRate * 2, true); offset += 4; // Byte rate\r\n  view.setUint16(offset, 2, true); offset += 2; // Block align\r\n  view.setUint16(offset, 16, true); offset += 2; // Bits per sample\r\n  writeString(view, offset, 'data'); offset += 4;\r\n  view.setUint32(offset, pcm16.length * 2, true); offset += 4; // Data size\r\n\r\n  for (let i = 0; i < pcm16.length; i++) {\r\n      view.setInt16(offset, pcm16[i], true);\r\n      offset += 2;\r\n  }\r\n\r\n  return new Blob([view], { type: 'audio/wav' });\r\n}\r\n\r\n\r\n// Exponential backoff utility for API calls\r\nconst fetchWithExponentialBackoff = async (url, options, retries = 5, delay = 1000) => {\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(`API error: ${errorData.error?.message || response.statusText}`);\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    if (retries > 0 && error.message.includes(\"API error\")) {\r\n      console.warn(`API call failed, retrying in ${delay}ms...`);\r\n      await new Promise(resolve => setTimeout(resolve, delay));\r\n      return fetchWithExponentialBackoff(url, options, retries - 1, delay * 2);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Main App component\r\nfunction App() {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [isSigningInWithLink, setIsSigningInWithLink] = useState(false);\r\n  const [isAIGenerating, setIsAIGenerating] = useState(false);\r\n  const [authMode, setAuthMode] = useState('email-link');\r\n\r\n  // New states for conversation history and sidebar\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState(null);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\r\n  const [currentAudio, setCurrentAudio] = useState(null);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [voiceName, setVoiceName] = useState('Kore');\r\n  const [showVoiceModal, setShowVoiceModal] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  // New states for Gemini features\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n  const [systemInstruction, setSystemInstruction] = useState('');\r\n  const [generationSettings, setGenerationSettings] = useState({\r\n    temperature: 0.9,\r\n    topK: 40,\r\n    topP: 0.95\r\n  });\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const audioRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  // Scroll to bottom of messages whenever messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // 1. Initialize Firebase and set up authentication.\r\n  useEffect(() => {\r\n    if (Object.keys(firebaseConfig).length === 0 || !firebaseConfig.apiKey) {\r\n      setError('Firebase configuration is missing or incomplete. Please ensure your Firebase config is correctly set, especially the API Key.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const firebaseApp = initializeApp(firebaseConfig);\r\n      const authInstance = getAuth(firebaseApp);\r\n      const dbInstance = getFirestore(firebaseApp);\r\n\r\n      setAuth(authInstance);\r\n      setDb(dbInstance);\r\n\r\n      const unsubscribe = onAuthStateChanged(authInstance, async (currentUser) => {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          setError(null);\r\n        } else {\r\n          if (initialAuthToken) {\r\n             try {\r\n               await signInWithCustomToken(authInstance, initialAuthToken);\r\n             } catch (e) {\r\n               console.error(\"Custom token sign-in failed:\", e);\r\n               setError(`Custom token sign-in failed: ${e.message}. Please try refreshing.`);\r\n             }\r\n          } else if (!isSigningInWithLink) {\r\n            try {\r\n              await signInAnonymously(authInstance);\r\n            } catch (e) {\r\n              console.error(\"Anonymous sign-in failed:\", e);\r\n              setError(`Anonymous sign-in failed: ${e.message}. Please ensure Anonymous Authentication is enabled in your Firebase project settings.`);\r\n            }\r\n          }\r\n        }\r\n        setIsAuthReady(true);\r\n        setLoading(false);\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (e) {\r\n      setError(`Failed to initialize Firebase: ${e.message}. Please check the console for more details.`);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 2. Handle email link sign-in.\r\n  useEffect(() => {\r\n    if (!auth || !isAuthReady) return;\r\n\r\n    if (isSignInWithEmailLink(auth, window.location.href)) {\r\n      setIsSigningInWithLink(true);\r\n      setLoading(true);\r\n\r\n      let storedEmail = window.localStorage.getItem('emailForSignIn');\r\n\r\n      if (!storedEmail) {\r\n        // Use a custom modal instead of prompt, since it's not supported\r\n        const modalDiv = document.createElement('div');\r\n        modalDiv.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50';\r\n        modalDiv.innerHTML = `\r\n          <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">\r\n            <h3 class=\"text-xl font-bold mb-4\">Confirm Email</h3>\r\n            <p class=\"mb-4\">Please provide your email to complete sign-in.</p>\r\n            <input id=\"email-confirm-input\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-indigo-500\" required />\r\n            <button id=\"email-confirm-button\" class=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600 transition-colors duration-200\">Confirm</button>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(modalDiv);\r\n\r\n        const emailConfirmInput = modalDiv.querySelector('#email-confirm-input');\r\n        const emailConfirmButton = modalDiv.querySelector('#email-confirm-button');\r\n\r\n        emailConfirmButton.onclick = () => {\r\n          storedEmail = emailConfirmInput.value;\r\n          if (storedEmail) {\r\n            document.body.removeChild(modalDiv);\r\n            continueSignIn(storedEmail);\r\n          } else {\r\n            console.error(\"Email not provided.\");\r\n          }\r\n        };\r\n        return; // Exit the effect to wait for user input\r\n      }\r\n\r\n      const continueSignIn = (emailToUse) => {\r\n        signInWithEmailLink(auth, emailToUse, window.location.href)\r\n          .then((result) => {\r\n            window.localStorage.removeItem('emailForSignIn');\r\n            setIsSigningInWithLink(false);\r\n            setLoading(false);\r\n            setError(null);\r\n            window.history.replaceState({}, document.title, window.location.pathname);\r\n          })\r\n          .catch((error) => {\r\n            setError(`Error completing sign-in: ${error.message}`);\r\n            setIsSigningInWithLink(false);\r\n            setLoading(false);\r\n            window.history.replaceState({}, document.title, window.location.pathname);\r\n          });\r\n      };\r\n      continueSignIn(storedEmail);\r\n    }\r\n  }, [auth, isAuthReady]);\r\n\r\n  // 3. Fetch conversations for the current user.\r\n  useEffect(() => {\r\n    if (!db || !user || !isAuthReady) return;\r\n\r\n    const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n    const q = query(conversationsCollectionRef, orderBy('lastUpdated', 'desc'));\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const fetchedConversations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedConversations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      setConversations(fetchedConversations);\r\n      if (fetchedConversations.length > 0 && !currentConversationId) {\r\n        setCurrentConversationId(fetchedConversations[0].id);\r\n      }\r\n      if (fetchedConversations.length === 0) {\r\n        setCurrentConversationId(null);\r\n      }\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load conversations: ${firestoreError.message}`);\r\n      console.error(\"Firestore conversations error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, isAuthReady, appId, currentConversationId]);\r\n\r\n  // 4. Fetch messages for the current conversation.\r\n  useEffect(() => {\r\n    if (!db || !user || !currentConversationId) {\r\n      setMessages([]);\r\n      return;\r\n    }\r\n\r\n    const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', currentConversationId, 'messages');\r\n    const q = query(messagesCollectionRef, orderBy('timestamp', 'asc'));\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const fetchedMessages = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedMessages.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setMessages(fetchedMessages);\r\n    }, (firestoreError) => {\r\n      setError(`Failed to load messages for conversation: ${firestoreError.message}`);\r\n      console.error(\"Firestore messages error:\", firestoreError);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, user, currentConversationId, appId]);\r\n\r\n  // 5. Start a new conversation.\r\n  const startNewChat = () => {\r\n    setCurrentConversationId(null);\r\n    setMessages([]);\r\n    setNewMessage('');\r\n    setSelectedImage(null);\r\n    setError(null);\r\n    setIsAIGenerating(false);\r\n    setIsSummarizing(false);\r\n    setIsGeneratingImage(false);\r\n    setIsSidebarOpen(false);\r\n  };\r\n\r\n  // 6. Handle sending a new message (and creating a new conversation if needed).\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() && !selectedImage || !user || !db || isAIGenerating || isSpeaking || isRecording) return;\r\n\r\n    let conversationIdToUse = currentConversationId;\r\n    const userMessageText = newMessage;\r\n    const imageToSend = selectedImage;\r\n    setNewMessage('');\r\n    setSelectedImage(null);\r\n\r\n    // If no conversation is active, create a new one.\r\n    if (!conversationIdToUse) {\r\n      const newConvId = generateId();\r\n      const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n      const newConversationDocRef = doc(conversationsCollectionRef, newConvId);\r\n      const initialTitle = userMessageText ? (userMessageText.substring(0, 50) + (userMessageText.length > 50 ? '...' : '')) : 'New chat with image';\r\n\r\n      try {\r\n        await setDoc(newConversationDocRef, {\r\n          title: initialTitle,\r\n          createdAt: serverTimestamp(),\r\n          lastUpdated: serverTimestamp(),\r\n        });\r\n        conversationIdToUse = newConvId;\r\n        setCurrentConversationId(newConvId);\r\n      } catch (createError) {\r\n        setError(`Failed to create new conversation: ${createError.message}`);\r\n        return;\r\n      }\r\n    } else {\r\n      const conversationDocRef = doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse);\r\n      try {\r\n        await setDoc(conversationDocRef, { lastUpdated: serverTimestamp() }, { merge: true });\r\n      } catch (updateError) {\r\n        console.error(\"Error updating conversation timestamp:\", updateError);\r\n      }\r\n    }\r\n\r\n    // Add user message to Firestore\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: userMessageText,\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message',\r\n        imageData: imageToSend\r\n      });\r\n    } catch (e) {\r\n      setError(`Failed to send message: ${e.message}`);\r\n      return;\r\n    }\r\n\r\n    const command = userMessageText.toLowerCase().trim();\r\n    if (imageToSend) {\r\n      handleImageAnalysis(userMessageText, imageToSend, conversationIdToUse);\r\n    } else if (command === 'summarize') {\r\n      handleSummarizeChat(conversationIdToUse);\r\n    } else if (command.startsWith('image of')) {\r\n      const imagePrompt = userMessageText.substring('image of'.length).trim();\r\n      handleGenerateImage(imagePrompt, conversationIdToUse);\r\n    } else {\r\n      handleAIResponse(userMessageText, conversationIdToUse);\r\n    }\r\n  };\r\n\r\n  // 7. Handle sending the sign-in email link.\r\n  const handleSendSignInLink = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim()) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    const actionCodeSettings = {\r\n      url: window.location.origin,\r\n      handleCodeInApp: true,\r\n    };\r\n    try {\r\n      await sendSignInLinkToEmail(auth, email, actionCodeSettings);\r\n      setEmailSent(true);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Failed to send sign-in link: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 8. Handle Email/Password Registration\r\n  const handleEmailPasswordSignUp = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Registration failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 9. Handle Email/Password Login\r\n  const handleEmailPasswordLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!auth || !email.trim() || !password.trim()) {\r\n      setError(\"Please enter a valid email and password.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setEmail('');\r\n      setPassword('');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(`Login failed: ${error.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 10. Handle Logout\r\n  const handleLogout = async () => {\r\n    if (!auth) return;\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      setMessages([]);\r\n      setConversations([]);\r\n      setCurrentConversationId(null);\r\n      setEmailSent(false);\r\n      setIsSigningInWithLink(false);\r\n      setAuthMode('email-link');\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(`Logout failed: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  // 11. Handle AI Response generation\r\n  const handleAIResponse = async (userMessageText, conversationId, additionalContent = []) => {\r\n    if (!conversationId || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n    let aiMessageDocRef = null;\r\n\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n      aiMessageDocRef = await addDoc(messagesCollectionRef, {\r\n        text: '...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response'\r\n      });\r\n\r\n      const chatHistory = messages\r\n        .filter(msg => (msg.type === 'user-message' || msg.type === 'ai-response') && msg.text !== '...')\r\n        .map(msg => ({\r\n          role: msg.userId === user.uid ? 'user' : 'model',\r\n          parts: [{ text: msg.text }]\r\n        }));\r\n\r\n      const parts = [{ text: userMessageText }];\r\n      if (additionalContent.length > 0) {\r\n        parts.push(...additionalContent);\r\n      }\r\n      chatHistory.push({ role: 'user', parts });\r\n\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n\r\n      if (systemInstruction) {\r\n        payload.systemInstruction = { parts: [{ text: systemInstruction }] };\r\n      }\r\n\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n\r\n      let responseText = \"Sorry, I couldn't generate a response.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      await setDoc(doc(messagesCollectionRef, aiMessageDocRef.id), {\r\n        text: responseText,\r\n        timestamp: serverTimestamp(),\r\n      }, { merge: true });\r\n\r\n    } catch (e) {\r\n      console.error(\"Error generating AI response:\", e);\r\n      setError(`AI response error: ${e.message}`);\r\n      if (aiMessageDocRef) {\r\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages', aiMessageDocRef.id), {\r\n          text: `I apologize, an error occurred: ${e.message}`,\r\n          timestamp: serverTimestamp(),\r\n        }, { merge: true });\r\n      }\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n\r\n  // 12. Handle summarization of the current chat using the Gemini API\r\n  const handleSummarizeChat = async (conversationId) => {\r\n    if (!conversationId || messages.length === 0 || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n    setIsSummarizing(true);\r\n    setError(null);\r\n    try {\r\n      const chatHistoryText = messages\r\n        .filter(msg => (msg.type === 'user-message' || msg.type === 'ai-response') && msg.text !== '...')\r\n        .map(msg => `${msg.userId === user.uid ? 'User' : 'AI'}: ${msg.text}`)\r\n        .join('\\n');\r\n      const prompt = `Please summarize the following chat conversation into a concise paragraph:\\n\\n${chatHistoryText}`;\r\n      const chatHistory = [{ role: \"user\", parts: [{ text: prompt }] }];\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n      if (systemInstruction) {\r\n        payload.systemInstruction = { parts: [{ text: systemInstruction }] };\r\n      }\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      let responseText = \"Sorry, I couldn't generate a summary.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n      await addDoc(messagesCollectionRef, {\r\n        text: `**Chat Summary:**\\n\\n${responseText}`,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response'\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error summarizing chat:\", error);\r\n      setError(`Summarization error: ${error.message}`);\r\n    } finally {\r\n      setIsSummarizing(false);\r\n    }\r\n  };\r\n\r\n  // 13. Handle image generation using the Gemini API\r\n  const handleGenerateImage = async (imagePrompt, conversationId) => {\r\n    if (!conversationId || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n    setIsGeneratingImage(true);\r\n    setError(null);\r\n    let tempImageMessageRef = null;\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n      tempImageMessageRef = doc(messagesCollectionRef);\r\n      await setDoc(tempImageMessageRef, {\r\n        text: `Generating an image for: \"${imagePrompt}\"...`,\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response',\r\n        imageUrl: '',\r\n      });\r\n      const payload = {\r\n        instances: { prompt: imagePrompt },\r\n        parameters: { \"sampleCount\": 1}\r\n      };\r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\r\n        const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\r\n        await setDoc(tempImageMessageRef, {\r\n          text: `Here is the image you requested for \"${imagePrompt}.\"`,\r\n          userId: 'bot',\r\n          userName: 'AI Chatbot',\r\n          timestamp: serverTimestamp(),\r\n          type: 'ai-response',\r\n          imageUrl: imageUrl,\r\n        });\r\n      } else {\r\n        throw new Error('Unexpected API response structure or no image data.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating image:\", error);\r\n      if (tempImageMessageRef) {\r\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages', tempImageMessageRef.id), {\r\n          text: `I couldn't generate the image. Please try again with a different prompt. Error: ${error.message}`,\r\n          userId: 'bot',\r\n          userName: 'AI Chatbot',\r\n          timestamp: serverTimestamp(),\r\n          type: 'ai-response',\r\n          imageUrl: '',\r\n        }, { merge: true });\r\n      }\r\n      setError(`Image generation error: ${error.message}`);\r\n    } finally {\r\n      setIsGeneratingImage(false);\r\n    }\r\n  };\r\n\r\n  // 14. Handle text-to-speech\r\n  const handleTTS = async (text, msgId, speakerName = 'User') => {\r\n    if (isSpeaking) {\r\n      stopAudio();\r\n      if (currentAudio === msgId) {\r\n        return;\r\n      }\r\n    }\r\n    setCurrentAudio(msgId);\r\n    setIsSpeaking(true);\r\n    setError(null);\r\n    try {\r\n      const payload = {\r\n        contents: [{ parts: [{ text: `Say in a natural tone: ${text}` }] }],\r\n        generationConfig: {\r\n          responseModalities: [\"AUDIO\"],\r\n          speechConfig: {\r\n            voiceConfig: {\r\n              prebuiltVoiceConfig: { voiceName: voiceName }\r\n            }\r\n          }\r\n        },\r\n        model: \"gemini-2.5-flash-preview-tts\"\r\n      };\r\n      \r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}`;\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n      const part = result?.candidates?.[0]?.content?.parts?.[0];\r\n      const audioData = part?.inlineData?.data;\r\n      const mimeType = part?.inlineData?.mimeType;\r\n\r\n      if (audioData && mimeType && mimeType.startsWith(\"audio/\")) {\r\n        const sampleRateMatch = mimeType.match(/rate=(\\d+)/);\r\n        const sampleRate = sampleRateMatch ? parseInt(sampleRateMatch[1], 10) : 16000;\r\n        const pcmData = base64ToArrayBuffer(audioData);\r\n        const wavBlob = pcmToWav(new Int16Array(pcmData), sampleRate);\r\n        const audioUrl = URL.createObjectURL(wavBlob);\r\n        \r\n        audioRef.current = new Audio(audioUrl);\r\n        audioRef.current.play();\r\n        audioRef.current.onended = () => {\r\n          setIsSpeaking(false);\r\n          setCurrentAudio(null);\r\n        };\r\n      } else {\r\n        throw new Error('Unexpected TTS API response structure.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating TTS:\", error);\r\n      setError(`Text-to-speech error: ${error.message}`);\r\n      setIsSpeaking(false);\r\n      setCurrentAudio(null);\r\n    }\r\n  };\r\n  \r\n  // 15. Stop current audio playback\r\n  const stopAudio = () => {\r\n    if (audioRef.current) {\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current = null;\r\n    }\r\n    setIsSpeaking(false);\r\n    setCurrentAudio(null);\r\n  };\r\n\r\n  // 16. Start audio recording from the microphone\r\n  const handleStartRecording = async () => {\r\n    if (isRecording) return;\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream, { mimeType: 'audio/webm' });\r\n      audioChunksRef.current = [];\r\n\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        audioChunksRef.current.push(event.data);\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\r\n        handleProcessVoice(audioBlob);\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error starting media recorder:\", error);\r\n      setError(`Failed to start recording: ${error.message}. Please check your microphone permissions.`);\r\n    }\r\n  };\r\n\r\n  // 17. Stop audio recording\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\r\n      mediaRecorderRef.current.stop();\r\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  // 18. Process the recorded voice blob\r\n  const handleProcessVoice = async (audioBlob) => {\r\n    if (!audioBlob || !user || !db || isAIGenerating) return;\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n\r\n    const conversationIdToUse = currentConversationId || generateId();\r\n    if (!currentConversationId) {\r\n       // If no conversation exists, create a placeholder conversation\r\n       try {\r\n         const conversationsCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations');\r\n         const newConversationDocRef = doc(conversationsCollectionRef, conversationIdToUse);\r\n         await setDoc(newConversationDocRef, {\r\n           title: 'Voice Chat',\r\n           createdAt: serverTimestamp(),\r\n           lastUpdated: serverTimestamp(),\r\n         });\r\n         setCurrentConversationId(conversationIdToUse);\r\n       } catch (e) {\r\n         setError(`Failed to create conversation for voice input: ${e.message}`);\r\n         setIsAIGenerating(false);\r\n         return;\r\n       }\r\n    }\r\n\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationIdToUse, 'messages');\r\n      const userMessageDocRef = await addDoc(messagesCollectionRef, {\r\n        text: '...',\r\n        userId: user.uid,\r\n        userName: `User_${user.uid.substring(0, 5)}`,\r\n        timestamp: serverTimestamp(),\r\n        type: 'user-message'\r\n      });\r\n\r\n      const audioBase64 = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result.split(',')[1]);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(audioBlob);\r\n      });\r\n\r\n      const transcriptionPayload = {\r\n        contents: [\r\n          {\r\n            role: 'user',\r\n            parts: [\r\n              {\r\n                inlineData: {\r\n                  mimeType: 'audio/webm',\r\n                  data: audioBase64\r\n                }\r\n              },\r\n              { text: 'transcribe the given audio' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      const apiKey = \"\";\r\n      const transcriptionApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const transcriptionResponse = await fetchWithExponentialBackoff(transcriptionApiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(transcriptionPayload)\r\n      });\r\n      const transcriptionResult = await transcriptionResponse.json();\r\n      const transcribedText = transcriptionResult?.candidates?.[0]?.content?.parts?.[0]?.text || 'Could not transcribe audio.';\r\n\r\n      await setDoc(doc(messagesCollectionRef, userMessageDocRef.id), {\r\n        text: transcribedText,\r\n        timestamp: serverTimestamp(),\r\n      }, { merge: true });\r\n\r\n      await handleAIResponse(transcribedText, conversationIdToUse);\r\n    } catch (error) {\r\n      console.error(\"Error processing voice input:\", error);\r\n      setError(`Voice processing failed: ${error.message}`);\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n  \r\n  // 19. Handle image analysis\r\n  const handleImageAnalysis = async (userMessage, base64ImageData, conversationId) => {\r\n    if (!conversationId || !base64ImageData || isAIGenerating || isSummarizing || isGeneratingImage) return;\r\n\r\n    setIsAIGenerating(true);\r\n    setError(null);\r\n    let aiMessageDocRef = null;\r\n\r\n    try {\r\n      const messagesCollectionRef = collection(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages');\r\n      aiMessageDocRef = await addDoc(messagesCollectionRef, {\r\n        text: '...',\r\n        userId: 'bot',\r\n        userName: 'AI Chatbot',\r\n        timestamp: serverTimestamp(),\r\n        type: 'ai-response'\r\n      });\r\n\r\n      const parts = [\r\n        { text: userMessage },\r\n        {\r\n          inlineData: {\r\n            mimeType: \"image/png\",\r\n            data: base64ImageData.split(',')[1]\r\n          }\r\n        }\r\n      ];\r\n\r\n      const chatHistory = [{ role: \"user\", parts }];\r\n\r\n      const payload = {\r\n        contents: chatHistory,\r\n        generationConfig: {\r\n          temperature: generationSettings.temperature,\r\n          topK: generationSettings.topK,\r\n          topP: generationSettings.topP,\r\n        },\r\n      };\r\n      \r\n      const apiKey = \"\";\r\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n      const response = await fetchWithExponentialBackoff(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await response.json();\r\n\r\n      let responseText = \"Sorry, I couldn't analyze the image.\";\r\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\r\n        responseText = result.candidates[0].content.parts[0].text;\r\n      }\r\n\r\n      await setDoc(doc(messagesCollectionRef, aiMessageDocRef.id), {\r\n        text: responseText,\r\n        timestamp: serverTimestamp(),\r\n      }, { merge: true });\r\n\r\n    } catch (e) {\r\n      console.error(\"Error analyzing image:\", e);\r\n      setError(`Image analysis error: ${e.message}`);\r\n      if (aiMessageDocRef) {\r\n        await setDoc(doc(db, 'artifacts', appId, 'users', user.uid, 'conversations', conversationId, 'messages', aiMessageDocRef.id), {\r\n          text: `I apologize, an error occurred during image analysis: ${e.message}`,\r\n          timestamp: serverTimestamp(),\r\n        }, { merge: true });\r\n      }\r\n    } finally {\r\n      setIsAIGenerating(false);\r\n    }\r\n  };\r\n  \r\n  // Handle image upload\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const getVoiceDisplayName = (voiceName) => {\r\n    const voices = {\r\n      'Kore': 'Kore (Firm)', 'Puck': 'Puck (Upbeat)', 'Zephyr': 'Zephyr (Bright)',\r\n      'Charon': 'Charon (Informative)', 'Fenrir': 'Fenrir (Excitable)', 'Leda': 'Leda (Youthful)',\r\n      'Orus': 'Orus (Firm)', 'Aoede': 'Aoede (Breezy)', 'Callirrhoe': 'Callirrhoe (Easy-going)',\r\n      'Autonoe': 'Autonoe (Bright)', 'Enceladus': 'Enceladus (Breathy)', 'Iapetus': 'Iapetus (Clear)',\r\n      'Umbriel': 'Umbriel (Easy-going)', 'Algieba': 'Algieba (Smooth)', 'Despina': 'Despina (Smooth)',\r\n      'Erinome': 'Erinome (Clear)', 'Algenib': 'Algenib (Gravelly)', 'Rasalgethi': 'Rasalgethi (Informative)',\r\n      'Laomedeia': 'Laomedeia (Upbeat)', 'Achernar': 'Achernar (Soft)', 'Alnilam': 'Alnilam (Firm)',\r\n      'Schedar': 'Schedar (Even)', 'Gacrux': 'Gacrux (Mature)', 'Pulcherrima': 'Pulcherrima (Forward)',\r\n      'Achird': 'Achird (Friendly)', 'Zubenelgenubi': 'Zubenelgenubi (Casual)', 'Vindemiatrix': 'Vindemiatrix (Gentle)',\r\n      'Sadachbia': 'Sadachbia (Lively)', 'Sadaltager': 'Sadaltager (Knowledgeable)', 'Sulafat': 'Sulafat (Warm)',\r\n    };\r\n    return voices[voiceName] || voiceName;\r\n  };\r\n  \r\n  const voiceOptions = [\r\n    'Kore', 'Puck', 'Zephyr', 'Charon', 'Fenrir', 'Leda', 'Orus', 'Aoede', 'Callirrhoe', 'Autonoe', 'Enceladus', 'Iapetus', 'Umbriel', 'Algieba', 'Despina', 'Erinome', 'Algenib', 'Rasalgethi', 'Laomedeia', 'Achernar', 'Alnilam', 'Schedar', 'Gacrux', 'Pulcherrima', 'Achird', 'Zubenelgenubi', 'Vindemiatrix', 'Sadachbia', 'Sadaltager', 'Sulafat'\r\n  ];\r\n\r\n  const VoiceSettingsModal = () => (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 h-full w-full flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white p-6 rounded-2xl shadow-2xl w-full max-w-md\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-xl font-bold text-gray-800\">Choose a Voice</h3>\r\n          <button onClick={() => setShowVoiceModal(false)} className=\"text-gray-500 hover:text-gray-800\"><X size={24} /></button>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3 max-h-96 overflow-y-auto pr-2\">\r\n          {voiceOptions.map((v) => (\r\n            <button\r\n              key={v}\r\n              onClick={() => { setVoiceName(v); setShowVoiceModal(false); }}\r\n              className={`py-2 px-4 rounded-xl text-sm font-medium transition-all ${\r\n                voiceName === v ? 'bg-indigo-600 text-white shadow-md' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              {getVoiceDisplayName(v)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  const SettingsModal = () => (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 h-full w-full flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white p-6 rounded-2xl shadow-2xl w-full max-w-lg\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-xl font-bold text-gray-800\">Generation Settings</h3>\r\n          <button onClick={() => setShowSettingsModal(false)} className=\"text-gray-500 hover:text-gray-800\"><X size={24} /></button>\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"systemInstruction\" className=\"block text-sm font-medium text-gray-700 mb-1\">System Instruction</label>\r\n            <textarea\r\n              id=\"systemInstruction\" rows=\"4\"\r\n              className=\"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"e.g., 'You are a helpful assistant that always responds in markdown format.' \"\r\n              value={systemInstruction} onChange={(e) => setSystemInstruction(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"temperature\" className=\"block text-sm font-medium text-gray-700 mb-1\">Temperature: {generationSettings.temperature.toFixed(2)}</label>\r\n            <input\r\n              type=\"range\" id=\"temperature\" min=\"0\" max=\"1\" step=\"0.05\"\r\n              value={generationSettings.temperature}\r\n              onChange={(e) => setGenerationSettings({ ...generationSettings, temperature: parseFloat(e.target.value) })}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg cursor-pointer\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"topK\" className=\"block text-sm font-medium text-gray-700 mb-1\">Top-K: {generationSettings.topK}</label>\r\n            <input\r\n              type=\"range\" id=\"topK\" min=\"1\" max=\"100\" step=\"1\"\r\n              value={generationSettings.topK}\r\n              onChange={(e) => setGenerationSettings({ ...generationSettings, topK: parseInt(e.target.value, 10) })}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg cursor-pointer\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"topP\" className=\"block text-sm font-medium text-gray-700 mb-1\">Top-P: {generationSettings.topP.toFixed(2)}</label>\r\n            <input\r\n              type=\"range\" id=\"topP\" min=\"0\" max=\"1\" step=\"0.05\"\r\n              value={generationSettings.topP}\r\n              onChange={(e) => setGenerationSettings({ ...generationSettings, topP: parseFloat(e.target.value) })}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg cursor-pointer\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  const renderMessageContent = (message) => {\r\n    if (message.imageData) {\r\n      return (\r\n        <div className=\"flex flex-col items-start gap-2\">\r\n          <p className=\"text-sm font-medium text-gray-900\">User sent an image.</p>\r\n          <img\r\n            src={message.imageData}\r\n            alt=\"Uploaded content\"\r\n            className=\"rounded-lg shadow-md max-h-48 object-contain\"\r\n            onError={(e) => {\r\n              e.target.src = \"https://placehold.co/400x300/e2e8f0/64748b?text=Image+Error\";\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (message.imageUrl) {\r\n      return (\r\n        <div className=\"flex flex-col items-start gap-2\">\r\n          <p className=\"text-gray-900 font-medium\">{message.text}</p>\r\n          <img\r\n            src={message.imageUrl}\r\n            alt=\"Generated content\"\r\n            className=\"rounded-lg shadow-md max-h-96 object-contain\"\r\n            onError={(e) => {\r\n              e.target.src = \"https://placehold.co/400x300/e2e8f0/64748b?text=Image+Error\";\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    if (message.text === '...') {\r\n      return (\r\n        <div className=\"flex items-center space-x-2 text-gray-500 italic\">\r\n          <div className=\"dot-flashing\"></div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div dangerouslySetInnerHTML={{ __html: marked(message.text || '') }} className=\"prose prose-sm max-w-none text-gray-900\" />;\r\n  };\r\n\r\n  // Main UI render\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100 text-gray-600\">\r\n        <LoaderCircle className=\"animate-spin mr-2\" size={24} />\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-red-50 p-4 text-red-700\">\r\n        <p className=\"font-bold text-lg mb-2\">Error</p>\r\n        <p className=\"text-center\">{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    // Auth UI\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\r\n        {emailSent ? (\r\n          <div className=\"bg-white p-8 rounded-2xl shadow-xl w-full max-w-md text-center\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Check your email</h2>\r\n            <p className=\"text-gray-600 mb-6\">A sign-in link has been sent to {email}.</p>\r\n            <button\r\n              onClick={() => setEmailSent(false)}\r\n              className=\"w-full bg-indigo-500 text-white p-3 rounded-xl shadow-md hover:bg-indigo-600\"\r\n            >\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white p-8 rounded-2xl shadow-xl w-full max-w-md\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800\">Sign In</h2>\r\n              {authMode !== 'email-link' && (\r\n                <button\r\n                  onClick={() => setAuthMode('email-link')}\r\n                  className=\"text-indigo-500 hover:text-indigo-700 font-medium\"\r\n                >\r\n                  Use Sign-in Link\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            {authMode === 'email-link' ? (\r\n              <form onSubmit={handleSendSignInLink} className=\"space-y-4\">\r\n                <p className=\"text-sm text-gray-500 text-center\">Enter your email to receive a magic sign-in link.</p>\r\n                <input\r\n                  type=\"email\" placeholder=\"Email Address\" value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  required\r\n                />\r\n                <button type=\"submit\" className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600\">\r\n                  Send Sign-in Link\r\n                </button>\r\n                <button\r\n                  type=\"button\" onClick={() => setAuthMode('email-password')}\r\n                  className=\"w-full mt-4 text-indigo-500 hover:text-indigo-700 font-medium\"\r\n                >\r\n                  Use Email & Password\r\n                </button>\r\n              </form>\r\n            ) : (\r\n              <form className=\"space-y-4\">\r\n                <p className=\"text-sm text-gray-500 text-center\">Use email and password to create an account or sign in.</p>\r\n                <input\r\n                  type=\"email\" placeholder=\"Email\" value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\" placeholder=\"Password\" value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  required\r\n                />\r\n                <button onClick={handleEmailPasswordLogin} className=\"w-full bg-indigo-500 text-white p-3 rounded-lg shadow-md hover:bg-indigo-600\">\r\n                  Sign In\r\n                </button>\r\n                <button onClick={handleEmailPasswordSignUp} className=\"w-full mt-2 bg-gray-200 text-gray-800 p-3 rounded-lg shadow-md hover:bg-gray-300\">\r\n                  Register\r\n                </button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Chat UI\r\n  return (\r\n    <div className=\"relative flex h-screen bg-gray-100 font-sans\">\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed inset-y-0 left-0 bg-white shadow-xl transition-all duration-300 transform ${\r\n          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'\r\n        } lg:relative lg:translate-x-0 w-64 flex flex-col z-40`}\r\n      >\r\n        <div className=\"flex-shrink-0 p-4 border-b border-gray-200\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <h1 className=\"text-lg font-bold text-gray-800\">Conversations</h1>\r\n            <button\r\n              onClick={startNewChat}\r\n              className=\"p-2 bg-indigo-500 text-white rounded-full shadow-md hover:bg-indigo-600\"\r\n              title=\"Start a new chat\"\r\n            >\r\n              <Plus size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-grow overflow-y-auto p-2 space-y-2\">\r\n          {conversations.map((conv) => (\r\n            <button\r\n              key={conv.id} onClick={() => { setCurrentConversationId(conv.id); setIsSidebarOpen(false); }}\r\n              className={`block w-full text-left p-3 rounded-xl transition-all ${\r\n                currentConversationId === conv.id ? 'bg-indigo-100 text-indigo-800 font-semibold' : 'bg-gray-50 hover:bg-gray-200 text-gray-700'\r\n              }`}\r\n            >\r\n              <div className=\"text-sm truncate\">{conv.title}</div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex-shrink-0 p-4 border-t border-gray-200\">\r\n          <div className=\"flex items-center justify-between text-sm text-gray-600\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"font-medium\">User ID:</span>\r\n              <span className=\"font-mono text-xs overflow-hidden text-ellipsis\">\r\n                {user.uid}\r\n              </span>\r\n            </div>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"text-red-500 hover:text-red-700 font-medium\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"flex-1 flex flex-col bg-gray-50\">\r\n        {/* Mobile Sidebar Toggle */}\r\n        <div className=\"lg:hidden flex justify-between items-center p-4 bg-white shadow-md\">\r\n          <button onClick={() => setIsSidebarOpen(true)} className=\"text-gray-600 hover:text-gray-800\">\r\n            <Menu size={24} />\r\n          </button>\r\n          <div className=\"font-semibold text-lg text-gray-800 truncate\">\r\n            {conversations.find(c => c.id === currentConversationId)?.title || 'New Chat'}\r\n          </div>\r\n          <div className=\"w-6\"></div>\r\n        </div>\r\n\r\n        {/* Messages Container */}\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-6 lg:p-8 custom-scrollbar\">\r\n          {!currentConversationId && messages.length === 0 && (\r\n            <div className=\"flex flex-col items-center justify-center h-full text-center text-gray-400\">\r\n              <Sparkles size={48} className=\"mb-4\" />\r\n              <p className=\"text-lg font-medium\">Start a new conversation with Gemini</p>\r\n              <p className=\"text-sm max-w-xs mt-2\">\r\n                Type a message, ask a question, upload an image, or use your voice to get started.\r\n              </p>\r\n            </div>\r\n          )}\r\n          {messages.map((msg) => (\r\n            <div\r\n              key={msg.id}\r\n              className={`flex items-start gap-4 ${\r\n                msg.userId === user.uid ? 'justify-end' : 'justify-start'\r\n              }`}\r\n            >\r\n              <div className=\"flex-shrink-0\">\r\n                {msg.userId === user.uid ? (\r\n                  <User size={24} className=\"text-indigo-500\" />\r\n                ) : (\r\n                  <Bot size={24} className=\"text-green-500\" />\r\n                )}\r\n              </div>\r\n              <div\r\n                className={`max-w-[75%] rounded-xl p-4 shadow-md ${\r\n                  msg.userId === user.uid\r\n                    ? 'bg-indigo-500 text-white rounded-tr-none'\r\n                    : 'bg-white text-gray-800 rounded-tl-none'\r\n                }`}\r\n              >\r\n                {renderMessageContent(msg)}\r\n                {msg.text && msg.text !== '...' && (\r\n                  <div className=\"flex items-center mt-2 space-x-2\">\r\n                    {isSpeaking && currentAudio === msg.id ? (\r\n                      <button onClick={stopAudio} className=\"text-white hover:text-gray-200\" title=\"Stop Audio\">\r\n                        <Pause size={18} />\r\n                      </button>\r\n                    ) : (\r\n                      <button onClick={() => handleTTS(msg.text, msg.id)} className=\"text-white hover:text-gray-200\" title=\"Play Audio\">\r\n                        <Volume2 size={18} />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input area */}\r\n        <form onSubmit={handleSendMessage} className=\"flex-shrink-0 p-4 border-t border-gray-200 bg-white\">\r\n          {selectedImage && (\r\n            <div className=\"relative mb-4 p-2 bg-gray-100 rounded-lg shadow-inner\">\r\n              <img src={selectedImage} alt=\"Preview\" className=\"max-h-40 object-contain rounded-lg mx-auto\" />\r\n              <button\r\n                onClick={() => setSelectedImage(null)}\r\n                className=\"absolute top-0 right-0 m-2 text-white bg-red-500 rounded-full p-1 shadow-md hover:bg-red-600\"\r\n              >\r\n                <X size={16} />\r\n              </button>\r\n            </div>\r\n          )}\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button\r\n              type=\"button\" onClick={() => document.getElementById('image-upload').click()}\r\n              className=\"p-3 text-gray-600 hover:text-indigo-500 disabled:opacity-50\" title=\"Upload Image\"\r\n              disabled={isAIGenerating || isRecording || !user || !currentConversationId}\r\n            >\r\n              <Image size={24} />\r\n            </button>\r\n            <input id=\"image-upload\" type=\"file\" accept=\"image/*\" className=\"hidden\" onChange={handleImageUpload} disabled={isAIGenerating || isRecording} />\r\n\r\n            <input\r\n              type=\"text\" placeholder={isRecording ? \"Listening...\" : \"Message Gemini...\"}\r\n              value={newMessage} onChange={(e) => setNewMessage(e.target.value)}\r\n              className=\"flex-1 p-3 border border-gray-300 rounded-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 disabled:bg-gray-100\"\r\n              disabled={isAIGenerating || isRecording}\r\n            />\r\n            \r\n            {isRecording ? (\r\n              <button\r\n                type=\"button\" onClick={handleStopRecording}\r\n                className=\"p-3 bg-red-500 text-white rounded-full shadow-lg hover:bg-red-600\" title=\"Stop Recording\"\r\n              >\r\n                <CircleStop size={24} />\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\" onClick={handleStartRecording}\r\n                className=\"p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 disabled:opacity-50\" title=\"Start Voice Input\"\r\n                disabled={isAIGenerating || !user || !currentConversationId}\r\n              >\r\n                <Mic size={24} />\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"p-3 bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-600 disabled:opacity-50\"\r\n              title=\"Send Message\"\r\n              disabled={(!newMessage.trim() && !selectedImage) || isAIGenerating || isRecording || !user}\r\n            >\r\n              <MessageSquareMore size={24} />\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\" onClick={() => setShowSettingsModal(true)}\r\n              className=\"p-3 text-gray-600 hover:text-indigo-500\" title=\"Generation Settings\"\r\n            >\r\n              <Settings size={24} />\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      {showVoiceModal && createPortal(<VoiceSettingsModal />, document.body)}\r\n      {showSettingsModal && createPortal(<SettingsModal />, document.body)}\r\n\r\n      {/* Dot Flashing CSS Animation */}\r\n      <style>{`\r\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\r\n        .custom-scrollbar::-webkit-scrollbar-track { background: #f1f5f9; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb { background-color: #cbd5e1; border-radius: 4px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background-color: #94a3b8; }\r\n        \r\n        .dot-flashing {\r\n          position: relative; width: 5px; height: 5px; border-radius: 5px;\r\n          background-color: #a3a3a3; animation: dotFlashing 1s infinite linear alternate; animation-delay: 0.5s;\r\n        }\r\n        .dot-flashing::before, .dot-flashing::after {\r\n          content: ''; display: inline-block; position: absolute; top: 0;\r\n          width: 5px; height: 5px; border-radius: 5px; background-color: #a3a3a3;\r\n          animation: dotFlashing 1s infinite alternate;\r\n        }\r\n        .dot-flashing::before { left: -10px; animation-delay: 0s; }\r\n        .dot-flashing::after { left: 10px; animation-delay: 1s; }\r\n\r\n        @keyframes dotFlashing {\r\n          0% { background-color: #a3a3a3; }\r\n          50%, 100% { background-color: #e5e5e5; }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}