{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Desktop\\\\my-chatbot-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\nimport { SendHorizonal, Bot } from 'lucide-react';\n\n// Use the global variables provided by the environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\nconst firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// The AIChatbot component with enhanced styling and functionality\nconst AIChatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [db, setDb] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  // Initialize Firebase and handle authentication\n  useEffect(() => {\n    const initFirebase = async () => {\n      try {\n        // Initialize the Firebase app instance\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\n        const firestoreDb = getFirestore(app);\n        const firestoreAuth = getAuth(app);\n        setDb(firestoreDb);\n\n        // Set up an authentication state change listener\n        const unsubscribe = onAuthStateChanged(firestoreAuth, async user => {\n          if (user) {\n            setUserId(user.uid);\n          } else {\n            // Sign in with the provided custom token or anonymously if not available\n            if (initialAuthToken) {\n              await signInWithCustomToken(firestoreAuth, initialAuthToken);\n            } else {\n              await signInAnonymously(firestoreAuth);\n            }\n          }\n          setIsAuthReady(true);\n          // Unsubscribe after the initial auth state is determined\n          unsubscribe();\n        });\n      } catch (e) {\n        console.error(\"Error initializing Firebase:\", e);\n      }\n    };\n    initFirebase();\n  }, []);\n\n  // Fetch messages from Firestore in real-time after authentication is ready\n  useEffect(() => {\n    // Only proceed if Firestore is initialized and the user is authenticated\n    if (db && userId && isAuthReady) {\n      setIsLoading(true);\n      // Construct the Firestore path for public data, ensuring it matches the security rules\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\n      const q = query(messagesCollectionRef);\n\n      // Set up a real-time listener for the messages collection\n      const unsubscribe = onSnapshot(q, snapshot => {\n        const fetchedMessages = snapshot.docs.map(doc => doc.data());\n        // Sort messages by timestamp on the client-side to avoid index issues\n        const sortedMessages = fetchedMessages.sort((a, b) => {\n          var _a$timestamp, _b$timestamp;\n          return ((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.toMillis()) - ((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.toMillis());\n        });\n        setMessages(sortedMessages);\n        setIsLoading(false);\n      }, error => {\n        console.error(\"Error fetching messages: \", error);\n        setIsLoading(false);\n      });\n      return () => unsubscribe();\n    }\n  }, [db, userId, isAuthReady]);\n\n  // Scroll to the bottom of the message list whenever new messages arrive\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Send a new message to Firestore\n  const sendMessage = async () => {\n    if (input.trim() === '' || !db) return;\n    try {\n      // Use the correct Firestore path for public data when adding a new document\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\n      await addDoc(messagesCollectionRef, {\n        text: input,\n        sender: 'user',\n        timestamp: serverTimestamp()\n      });\n      setInput('');\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl overflow-hidden transition-all duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-t-2xl shadow-md flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(Bot, {\n          className: \"w-8 h-8 text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-extrabold tracking-wide\",\n          children: \"AI Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-medium\",\n        children: [\"User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono text-xs\",\n          children: userId || 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-5 overflow-y-auto space-y-4 bg-gray-50 dark:bg-gray-900 transition-colors duration-300\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-4 border-t-4 border-blue-500 dark:border-blue-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-3xl max-w-xs transition-all duration-300 transform ${msg.sender === 'user' ? 'bg-blue-600 text-white shadow-lg rounded-br-none' : 'bg-gray-200 dark:bg-gray-700 dark:text-gray-200 text-gray-800 shadow-lg rounded-bl-none'}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-100 dark:bg-gray-800 rounded-b-2xl border-t border-gray-200 dark:border-gray-700 flex items-center space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        className: \"flex-1 p-3 rounded-full border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white transition-all duration-300\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"p-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 disabled:bg-gray-400 disabled:cursor-not-allowed\",\n        disabled: input.trim() === '',\n        children: /*#__PURE__*/_jsxDEV(SendHorizonal, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n// The main App component that renders the AIChatbot\n_s(AIChatbot, \"R8iVX1zU3WsK+kO7I6+DdJOwiV8=\");\n_c = AIChatbot;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-50 dark:bg-gray-900 font-sans p-4\",\n    children: /*#__PURE__*/_jsxDEV(AIChatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AIChatbot\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getApps","getApp","getAuth","signInWithCustomToken","signInAnonymously","onAuthStateChanged","getFirestore","collection","addDoc","serverTimestamp","query","onSnapshot","SendHorizonal","Bot","jsxDEV","_jsxDEV","appId","__app_id","firebaseConfig","JSON","parse","__firebase_config","initialAuthToken","__initial_auth_token","AIChatbot","_s","input","setInput","messages","setMessages","db","setDb","userId","setUserId","isAuthReady","setIsAuthReady","isLoading","setIsLoading","messagesEndRef","initFirebase","app","length","firestoreDb","firestoreAuth","unsubscribe","user","uid","e","console","error","messagesCollectionRef","q","snapshot","fetchedMessages","docs","map","doc","data","sortedMessages","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","text","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","ref","type","value","onChange","target","onKeyPress","key","placeholder","onClick","disabled","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Tommy/Desktop/my-chatbot-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getAuth, signInWithCustomToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot } from 'firebase/firestore';\r\nimport { SendHorizonal, Bot } from 'lucide-react';\r\n\r\n// Use the global variables provided by the environment\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// The AIChatbot component with enhanced styling and functionality\r\nconst AIChatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [db, setDb] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Initialize Firebase and handle authentication\r\n  useEffect(() => {\r\n    const initFirebase = async () => {\r\n      try {\r\n        // Initialize the Firebase app instance\r\n        const app = getApps().length ? getApp() : initializeApp(firebaseConfig);\r\n        const firestoreDb = getFirestore(app);\r\n        const firestoreAuth = getAuth(app);\r\n        \r\n        setDb(firestoreDb);\r\n\r\n        // Set up an authentication state change listener\r\n        const unsubscribe = onAuthStateChanged(firestoreAuth, async (user) => {\r\n          if (user) {\r\n            setUserId(user.uid);\r\n          } else {\r\n            // Sign in with the provided custom token or anonymously if not available\r\n            if (initialAuthToken) {\r\n              await signInWithCustomToken(firestoreAuth, initialAuthToken);\r\n            } else {\r\n              await signInAnonymously(firestoreAuth);\r\n            }\r\n          }\r\n          setIsAuthReady(true);\r\n          // Unsubscribe after the initial auth state is determined\r\n          unsubscribe();\r\n        });\r\n      } catch (e) {\r\n        console.error(\"Error initializing Firebase:\", e);\r\n      }\r\n    };\r\n    initFirebase();\r\n  }, []);\r\n\r\n  // Fetch messages from Firestore in real-time after authentication is ready\r\n  useEffect(() => {\r\n    // Only proceed if Firestore is initialized and the user is authenticated\r\n    if (db && userId && isAuthReady) {\r\n      setIsLoading(true);\r\n      // Construct the Firestore path for public data, ensuring it matches the security rules\r\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\r\n      const q = query(messagesCollectionRef);\r\n\r\n      // Set up a real-time listener for the messages collection\r\n      const unsubscribe = onSnapshot(q, (snapshot) => {\r\n        const fetchedMessages = snapshot.docs.map(doc => doc.data());\r\n        // Sort messages by timestamp on the client-side to avoid index issues\r\n        const sortedMessages = fetchedMessages.sort((a, b) => a.timestamp?.toMillis() - b.timestamp?.toMillis());\r\n        setMessages(sortedMessages);\r\n        setIsLoading(false);\r\n      }, (error) => {\r\n        console.error(\"Error fetching messages: \", error);\r\n        setIsLoading(false);\r\n      });\r\n      \r\n      return () => unsubscribe();\r\n    }\r\n  }, [db, userId, isAuthReady]);\r\n\r\n  // Scroll to the bottom of the message list whenever new messages arrive\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Send a new message to Firestore\r\n  const sendMessage = async () => {\r\n    if (input.trim() === '' || !db) return;\r\n\r\n    try {\r\n      // Use the correct Firestore path for public data when adding a new document\r\n      const messagesCollectionRef = collection(db, `artifacts/${appId}/public/data/messages`);\r\n      await addDoc(messagesCollectionRef, {\r\n        text: input,\r\n        sender: 'user',\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setInput('');\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full max-w-xl h-[80vh] bg-white dark:bg-gray-800 rounded-2xl shadow-2xl overflow-hidden transition-all duration-300\">\r\n      {/* Chat Header */}\r\n      <div className=\"p-5 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-t-2xl shadow-md flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Bot className=\"w-8 h-8 text-white\" />\r\n          <h1 className=\"text-2xl font-extrabold tracking-wide\">AI Chatbot</h1>\r\n        </div>\r\n        <div className=\"text-sm font-medium\">User ID: <span className=\"font-mono text-xs\">{userId || 'Loading...'}</span></div>\r\n      </div>\r\n\r\n      {/* Message Area */}\r\n      <div className=\"flex-1 p-5 overflow-y-auto space-y-4 bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\r\n        {isLoading ? (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-t-4 border-blue-500 dark:border-blue-400\"></div>\r\n          </div>\r\n        ) : (\r\n          messages.map((msg, index) => (\r\n            <div key={index} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n              <div className={`p-4 rounded-3xl max-w-xs transition-all duration-300 transform ${\r\n                msg.sender === 'user'\r\n                  ? 'bg-blue-600 text-white shadow-lg rounded-br-none'\r\n                  : 'bg-gray-200 dark:bg-gray-700 dark:text-gray-200 text-gray-800 shadow-lg rounded-bl-none'\r\n              }`}>\r\n                {msg.text}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input and Send Area */}\r\n      <div className=\"p-4 bg-gray-100 dark:bg-gray-800 rounded-b-2xl border-t border-gray-200 dark:border-gray-700 flex items-center space-x-3\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          className=\"flex-1 p-3 rounded-full border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white transition-all duration-300\"\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          className=\"p-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n          disabled={input.trim() === ''}\r\n        >\r\n          <SendHorizonal className=\"w-6 h-6\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// The main App component that renders the AIChatbot\r\nexport default function App() {\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-50 dark:bg-gray-900 font-sans p-4\">\r\n      <AIChatbot />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}